var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.579,1,2.957]],["body/controllers/AppController.html",[0,2.228,1,4.172,2,1.651,3,0.129,4,0.115,5,0.115,6,3.715,7,0.389,8,1.806,9,5.744,10,7.268,11,6.074,12,4.257,13,1.73,14,3.925,15,1.676,16,0.013,17,4.257,18,0.773,19,4.257,20,1.384,21,1.062,22,0.446,23,1.134,24,2.497,25,2.044,26,5.744,27,4.257,28,5.744,29,4.257,30,0.259,31,0.815,32,5.013,33,1.252,34,4.126,35,3.715,36,2.959,37,3.358,38,3.715,39,0.129,40,0.218,41,2.193,42,2.193,43,2.044,44,4.257,45,4.257,46,5.744,47,2.417,48,2.193,49,2.096,50,4.257,51,4.257,52,4.257,53,4.257,54,4.257,55,4.257,56,0.009,57,0.009]],["title/modules/AppModule.html",[58,1.05,59,2.957]],["body/modules/AppModule.html",[1,3.589,2,1.571,3,0.08,4,0.071,5,0.071,16,0.013,22,0.275,24,1.142,30,0.29,31,0.503,34,4.021,35,2.293,38,2.293,39,0.08,40,0.134,43,1.273,48,3.09,56,0.006,57,0.006,58,1.274,59,5.838,60,1.142,61,1.189,62,1.294,63,1.294,64,1.189,65,2.433,66,1.294,67,2.293,68,2.293,69,2.293,70,4.285,71,3.795,72,4.285,73,4.285,74,4.285,75,4.021,76,4.285,77,4.285,78,4.285,79,1.994,80,1.294,81,1.294,82,2.627,83,2.426,84,4.05,85,2.627,86,4.356,87,1.777,88,4.941,89,4.941,90,4.941,91,4.05,92,1.667,93,1.777,94,1.353,95,2.627,96,1.777,97,2.627,98,2.293,99,2.627,100,2.073,101,1.777,102,2.627,103,2.627,104,2.627,105,1.239,106,1.777,107,2.627,108,2.627,109,2.627,110,3.195,111,2.293,112,2.941,113,2.941,114,2.941,115,2.57,116,2.941,117,2.739,118,2.627,119,2.627,120,2.627,121,2.627,122,2.627,123,3.534,124,2.627,125,1.667,126,2.627,127,1.777,128,2.627,129,2.627,130,1.294,131,2.627,132,2.293,133,2.627,134,2.627,135,2.627,136,2.627,137,2.627,138,1.777,139,2.627,140,2.293,141,2.627,142,2.627,143,2.627,144,2.426,145,2.627,146,2.627,147,2.627,148,2.627,149,2.627,150,2.627,151,2.627,152,2.293,153,5.762,154,6.603]],["title/injectables/AppService.html",[34,2.584,155,1.121]],["body/injectables/AppService.html",[3,0.173,4,0.153,5,0.153,7,0.521,8,2.177,11,6.774,13,1.566,16,0.013,18,0.677,25,1.791,30,0.212,31,1.09,34,4.395,39,0.173,40,0.291,43,1.791,56,0.01,57,0.01,155,1.906,156,2.687,157,4.971,158,5.697,159,5.697,160,5.697]],["title/entities/Booking.html",[161,1.639,162,1.843]],["body/entities/Booking.html",[3,0.085,4,0.076,5,0.076,7,0.258,13,0.967,15,1.84,16,0.013,18,0.849,22,0.775,23,1.139,30,0.23,33,0.83,39,0.13,40,0.219,56,0.006,57,0.006,105,3.289,161,1.722,162,1.935,163,1.602,164,2.226,165,0.791,166,3.278,167,3.278,168,1.932,169,5.404,170,2.159,171,2.932,172,5.404,173,3.093,174,1.863,175,4.492,176,2.463,177,2.562,178,5.916,179,2.822,180,3.374,181,4.185,182,4.277,183,1.854,184,3.452,185,4.277,186,3.374,187,2.822,188,3.492,189,2.822,190,2.892,191,3.374,192,4.716,193,3.112,194,2.463,195,2.822,196,2.608,197,4.277,198,2.822,199,5.029,200,2.822,201,4.074,202,3.106,203,2.822,204,2.822,205,2.463,206,2.562,207,2.822,208,2.822,209,2.049,210,2.337,211,3.278,212,3.278,213,2.203,214,1.094,215,3.516,216,3.374,217,5.164,218,3.374,219,1.277,220,1.331,221,1.908,222,1.454,223,2.226,224,5.164,225,2.049,226,3.732,227,3.732,228,3.732,229,3.732,230,1.935,231,2.31,232,2.892,233,2.822,234,2.822]],["title/controllers/BookingController.html",[0,1.579,235,2.957]],["body/controllers/BookingController.html",[0,1.17,2,1.17,3,0.091,4,0.081,5,0.081,7,0.276,8,1.414,14,1.629,15,1.722,16,0.013,18,0.795,20,2.173,21,1.667,22,0.7,23,1.78,25,2.101,30,0.264,31,0.577,33,0.887,36,2.316,39,0.091,40,0.154,41,1.554,42,1.554,43,2.101,56,0.007,57,0.007,162,2.432,168,2.661,183,2.226,235,3.265,236,2.632,237,1.806,238,4.691,239,3.924,240,3.547,241,3.924,242,3.924,243,3.924,244,3.016,245,4.029,246,3.383,247,3.016,248,3.016,249,4.109,250,2.632,251,3.016,252,3.016,253,3.016,254,4.519,255,3.016,256,3.016,257,2.632,258,3.016,259,3.016,260,2.632,261,3.016,262,3.016,263,2.632,264,3.016,265,3.016,266,2.19,267,3.265,268,2.632,269,2.19,270,2.19,271,1.914,272,3.265,273,1.806,274,2.19,275,4.241,276,2.19,277,3.411,278,2.632,279,2.19,280,2.632,281,2.632,282,2.039,283,2.19,284,3.016,285,2.379,286,3.016,287,3.016,288,3.016,289,2.19,290,2.632,291,3.016,292,2.379,293,3.016,294,2.632,295,3.016,296,3.016,297,3.016,298,3.016,299,3.016,300,3.016,301,3.016,302,3.016,303,3.016,304,3.016,305,3.016,306,3.016,307,3.016]],["title/classes/BookingListDto.html",[40,0.208,254,2.754]],["body/classes/BookingListDto.html",[3,0.111,4,0.098,5,0.098,7,0.334,13,1.615,15,1.893,16,0.013,18,0.873,22,0.77,23,2.136,24,2.608,30,0.192,39,0.111,40,0.307,56,0.008,57,0.008,165,0.957,183,2.134,194,5.235,211,3.807,212,4.761,213,3.359,214,1.418,254,3.496,308,0.826,309,6.547,310,2.655,311,5.235,312,5.235,313,4.357,314,5.235,315,4.057,316,4.057,317,6.019,318,5.17,319,3.655,320,3.655,321,3.655,322,3.655,323,4.078,324,3.655,325,3.655,326,3.655,327,2.655,328,4.357,329,3.359,330,5.145]],["title/classes/BookingListVo.html",[40,0.208,283,2.957]],["body/classes/BookingListVo.html",[3,0.169,4,0.15,5,0.15,7,0.511,16,0.012,18,0.814,22,0.717,30,0.208,39,0.169,40,0.286,56,0.01,57,0.01,162,3.348,165,1.266,183,1.947,283,4.97,308,1.263,331,6.456,332,4.057,333,6.456,334,5.003,335,4.407,336,4.407,337,4.057]],["title/modules/BookingModule.html",[58,1.05,70,2.754]],["body/modules/BookingModule.html",[2,2.344,3,0.139,4,0.124,5,0.124,16,0.013,30,0.29,31,0.879,39,0.139,40,0.235,56,0.009,57,0.009,58,1.741,60,1.997,61,2.079,62,2.263,63,2.263,64,2.079,65,3.326,66,2.263,70,5.467,71,4.584,79,2.976,80,2.263,81,2.263,83,3.62,93,3.107,94,2.367,162,2.079,235,4.905,277,4.857,278,4.009,337,3.337,338,4.009,339,4.009,340,4.009,341,4.857,342,4.594,343,4.594,344,4.594,345,4.594,346,4.594]],["title/injectables/BookingService.html",[155,1.121,277,2.584]],["body/injectables/BookingService.html",[3,0.047,4,0.042,5,0.042,7,0.143,8,0.834,16,0.013,18,0.664,20,1.724,21,1.392,22,0.556,23,1.412,24,1.503,25,1.667,30,0.224,31,0.299,39,0.047,40,0.08,43,1.563,48,2.101,56,0.004,57,0.004,94,0.804,138,1.055,144,0.935,155,0.73,156,0.736,162,2.998,167,0.99,168,2.623,170,1.446,171,0.886,172,3.018,174,1.123,175,2.738,178,1.231,183,1.916,196,1.846,201,1.231,219,0.706,220,0.736,221,1.055,222,0.804,223,1.231,238,2.314,239,2.314,241,2.314,242,2.314,243,3.018,245,2.758,246,2.316,250,2.314,254,3.361,257,2.314,260,2.314,263,2.314,277,1.683,279,1.133,280,1.362,281,1.362,282,1.055,311,2.314,312,3.018,313,1.926,314,2.314,315,1.793,316,2.339,333,2.314,334,1.793,337,1.133,347,1.362,348,4.103,349,2.092,350,3.56,351,1.153,352,1.362,353,4.337,354,3.364,355,3.364,356,1.56,357,2.652,358,1.56,359,1.56,360,1.56,361,3.319,362,2.652,363,1.56,364,1.56,365,1.56,366,1.56,367,1.56,368,1.231,369,2.314,370,1.926,371,1.56,372,1.56,373,1.56,374,1.56,375,1.565,376,1.56,377,1.56,378,2.72,379,3.458,380,4.247,381,3.458,382,2.901,383,3.458,384,2.092,385,3.018,386,3.458,387,3.018,388,2.652,389,3.209,390,1.56,391,1.56,392,1.56,393,1.56,394,4.079,395,3.989,396,6.202,397,4.571,398,2.652,399,1.56,400,1.56,401,1.56,402,1.56,403,2.652,404,1.56,405,1.56,406,1.56,407,1.56,408,2.652,409,1.56,410,1.56,411,1.56,412,1.56,413,2.314,414,2.314,415,1.56,416,1.56,417,1.56,418,3.458,419,1.56,420,1.56,421,1.56,422,1.56,423,1.56,424,1.56,425,1.56,426,1.362,427,1.362,428,1.56,429,1.231,430,1.56,431,1.56,432,1.56,433,1.588,434,1.362,435,1.362,436,1.56,437,1.56,438,1.56,439,1.56,440,1.56,441,1.56,442,1.793,443,1.56,444,1.362,445,1.56,446,1.56,447,1.56,448,1.56,449,1.362,450,3.458,451,1.56,452,3.018,453,1.56,454,1.56,455,2.652,456,1.56,457,2.652,458,1.56,459,1.56,460,1.56,461,1.055,462,1.56,463,1.56,464,2.468,465,1.56,466,1.362,467,1.56,468,1.56,469,1.362,470,2.652,471,1.56,472,1.56,473,1.362,474,1.56,475,1.56,476,1.362,477,0.804,478,1.56,479,1.56,480,1.56,481,1.362]],["title/classes/CreateBookingDto.html",[40,0.208,245,2.754]],["body/classes/CreateBookingDto.html",[3,0.15,4,0.133,5,0.133,7,0.453,15,1.277,16,0.013,18,0.589,22,0.519,30,0.26,33,1.457,39,0.15,40,0.325,56,0.01,57,0.01,105,2.995,162,2.243,165,1.175,167,4.029,168,2.374,169,5.54,170,2.654,171,3.605,183,1.806,186,3.91,210,2.873,211,4.029,214,1.922,230,2.243,231,2.677,245,4.293,308,1.12,337,3.599,482,5.54,483,4.325,484,2.462,485,6.348,486,5.526,487,3.145,488,6.348,489,4.956,490,2.968]],["title/classes/CreateMeetingRoomDto.html",[40,0.208,491,2.584]],["body/classes/CreateMeetingRoomDto.html",[3,0.169,4,0.15,5,0.15,16,0.013,30,0.254,33,1.643,39,0.169,40,0.286,56,0.01,57,0.01,105,2.635,166,4.343,168,2.56,173,4.099,196,2.528,220,2.635,222,2.878,308,1.263,484,2.654,491,4.343,492,4.876,493,4.407,494,6.843,495,5.972,496,3.017,497,3.346]],["title/classes/CustomExceptionFilter.html",[40,0.208,112,2.957]],["body/classes/CustomExceptionFilter.html",[3,0.143,4,0.127,5,0.127,7,0.433,8,1.937,13,1.069,16,0.013,18,0.562,20,1.538,21,1.18,22,0.496,23,1.26,25,1.487,30,0.229,31,0.905,39,0.143,40,0.242,56,0.009,57,0.009,112,4.473,125,4.347,181,3.435,230,2.787,308,1.069,378,2.389,442,3.198,498,5.375,499,4.127,500,3.327,501,5.404,502,4.347,503,4.859,504,7.257,505,5.725,506,4.729,507,4.127,508,3.001,509,4.103,510,2.14,511,4.729,512,3.731,513,3.731,514,6.159,515,4.729,516,3.198,517,3.001,518,6.159,519,3.731]],["title/modules/EmailModule.html",[58,1.05,71,2.439]],["body/modules/EmailModule.html",[3,0.158,4,0.141,5,0.141,16,0.012,30,0.244,31,1,39,0.158,40,0.267,56,0.01,57,0.01,58,1.85,60,2.271,61,2.364,62,2.573,63,2.573,64,2.364,65,3.535,66,3.535,71,4.814,79,3.233,80,2.573,81,2.573,355,5.299,520,4.559,521,4.559,522,4.559,523,5.224,524,5.224]],["title/injectables/EmailService.html",[155,1.121,355,2.584]],["body/injectables/EmailService.html",[3,0.132,4,0.117,5,0.117,7,0.399,8,1.835,16,0.013,18,0.782,20,1.898,21,1.641,22,0.612,23,1.555,25,1.371,30,0.245,31,0.834,39,0.132,40,0.223,41,2.246,56,0.009,57,0.009,86,5.476,87,2.948,105,2.056,125,2.766,127,2.948,155,1.607,156,2.056,162,1.973,165,1.08,170,1.823,174,1.2,348,3.736,351,1.895,355,3.704,380,2.611,473,5.094,476,5.094,525,3.804,526,6.58,527,7.541,528,6.58,529,3.804,530,5.837,531,4.359,532,4.359,533,5.837,534,3.804,535,4.359,536,4.359,537,4.359,538,4.359,539,2.611,540,4.359,541,5.837,542,3.804,543,4.359,544,4.359,545,4.359,546,2.948]],["title/classes/EmitSSEData.html",[40,0.208,547,2.957]],["body/classes/EmitSSEData.html",[3,0.148,4,0.132,5,0.132,7,0.447,13,1.573,15,1.622,16,0.013,18,0.828,22,0.77,23,1.676,30,0.182,39,0.191,40,0.322,56,0.009,57,0.009,58,1.794,165,1.164,177,3.77,206,3.77,209,3.551,210,2.848,212,3.994,213,3.242,214,1.896,225,3.551,308,1.105,547,4.571,548,3.857,549,6.96,550,3.585,551,6.074,552,4.889,553,4.889,554,4.889,555,4.889,556,4.267,557,4.889,558,4.889,559,4.267]],["title/classes/ErrorReportDto.html",[40,0.208,560,2.754]],["body/classes/ErrorReportDto.html",[3,0.174,4,0.155,5,0.155,16,0.013,30,0.259,33,1.688,39,0.174,40,0.294,56,0.01,57,0.01,168,2.603,308,1.298,484,2.699,496,3.101,560,4.706,561,2.958,562,5.011,563,6.958,564,4.706,565,3.644,566,4.53]],["title/entities/ErrorReportEntity.html",[161,1.639,565,2.584]],["body/entities/ErrorReportEntity.html",[3,0.132,4,0.118,5,0.118,7,0.4,13,1.706,15,1.814,16,0.013,18,0.837,22,0.808,30,0.217,39,0.132,40,0.299,56,0.009,57,0.009,161,1.76,163,2.483,165,1.082,168,2.465,175,3.503,193,3.159,210,2.982,213,3.395,214,1.696,215,3.995,219,1.979,561,3.778,564,4.457,565,3.712,567,3.816,568,4.786,569,6.59,570,5.751,571,4.614,572,4.614,573,4.372,574,5.848,575,4.372,576,4.372,577,3.816,578,4.372,579,3.449,580,3.449,581,4.372,582,3.449,583,3.449,584,5.848]],["title/controllers/FeReportController.html",[0,1.579,585,2.957]],["body/controllers/FeReportController.html",[0,1.641,2,1.641,3,0.128,4,0.114,5,0.114,7,0.387,8,1.799,15,1.475,16,0.013,18,0.68,20,1.861,21,1.427,22,0.6,23,1.524,25,1.799,30,0.278,31,0.81,33,1.244,39,0.128,40,0.216,41,2.18,42,2.18,43,1.799,56,0.009,57,0.009,100,4.513,101,4.383,237,2.535,266,3.073,267,3.073,270,3.073,271,2.686,273,2.535,275,4.114,289,4.155,560,4.696,561,3.339,568,5.043,585,4.155,586,3.693,587,5.113,588,4.513,589,4.232,590,4.232,591,4.232,592,4.232,593,4.696,594,4.232,595,4.232,596,4.155,597,3.693,598,3.693,599,4.114,600,3.693,601,4.232,602,4.232,603,4.232,604,4.232,605,4.232,606,4.232,607,4.232,608,4.232,609,4.232]],["title/modules/FeReportModule.html",[58,1.05,72,2.754]],["body/modules/FeReportModule.html",[2,2.436,3,0.148,4,0.131,5,0.131,16,0.013,30,0.289,31,0.933,39,0.148,40,0.249,56,0.009,57,0.009,58,1.791,60,2.118,61,2.205,62,2.4,63,2.4,64,2.205,65,3.422,66,2.4,72,5.259,79,3.093,80,2.4,81,2.4,83,2.918,93,3.295,94,2.51,100,4.954,101,3.295,561,2.51,565,3.092,566,3.844,585,5.046,599,4.935,600,4.252,610,4.252,611,4.252,612,4.872,613,4.872,614,3.761,615,3.844,616,4.872]],["title/injectables/FeReportService.html",[155,1.121,599,2.584]],["body/injectables/FeReportService.html",[3,0.127,4,0.113,5,0.113,7,0.383,8,1.785,16,0.013,18,0.766,20,2.096,21,1.607,22,0.675,23,1.716,25,1.785,30,0.283,31,0.801,39,0.127,40,0.214,56,0.009,57,0.009,94,2.155,101,4.673,155,1.562,156,1.973,219,1.893,351,2.468,375,2.569,508,3.603,560,4.673,561,3.56,565,2.655,566,3.3,568,3.038,593,4.673,596,3.038,597,3.65,598,3.65,599,3.603,614,2.505,615,3.3,617,3.65,618,5.677,619,5.677,620,4.183,621,6.011,622,6.443,623,4.183,624,5.677,625,5.677,626,4.183,627,5.677,628,4.183,629,3.65,630,4.183,631,4.183,632,4.183,633,4.183]],["title/injectables/FormatResponseInterceptor.html",[113,2.957,155,1.121]],["body/injectables/FormatResponseInterceptor.html",[3,0.146,4,0.129,5,0.129,7,0.44,8,1.957,16,0.013,18,0.572,20,1.564,21,1.199,22,0.504,23,1.281,25,1.512,30,0.257,31,0.92,39,0.146,40,0.246,43,1.957,56,0.009,57,0.009,113,4.521,155,1.714,156,2.268,378,1.865,500,2.597,509,3.729,510,2.176,513,3.793,517,3.051,550,2.477,634,5.433,635,4.196,636,5.433,637,5.433,638,4.374,639,6.025,640,6.373,641,4.808,642,3.051,643,4.136,644,5.433,645,3.793,646,2.73,647,4.196,648,4.196,649,4.196]],["title/classes/FreezeUserDto.html",[40,0.208,650,2.957]],["body/classes/FreezeUserDto.html",[3,0.16,4,0.142,5,0.142,7,0.483,15,1.361,16,0.012,18,0.628,22,0.554,30,0.196,39,0.16,40,0.338,56,0.01,57,0.01,165,1.223,168,3.013,174,2.081,183,1.88,184,3.959,210,2.991,214,2.048,230,2.991,231,2.852,308,1.194,328,4.8,487,3.352,650,4.8,651,5.768,652,3.571,653,5.281,654,4.469,655,5.281]],["title/controllers/HealthController.html",[0,1.579,656,2.957]],["body/controllers/HealthController.html",[0,1.686,2,1.686,3,0.132,4,0.117,5,0.117,7,0.397,8,1.831,15,1.12,16,0.013,18,0.517,25,1.366,30,0.244,31,0.832,32,5.084,33,1.278,39,0.132,40,0.222,43,1.366,56,0.009,57,0.009,237,2.603,273,2.603,351,1.889,375,3.312,656,4.23,657,3.793,658,5.825,659,7.019,660,4.346,661,4.346,662,5.825,663,5.825,664,5.825,665,5.825,666,5.825,667,5.825,668,3.429,669,4.346,670,4.346,671,4.346,672,4.346,673,4.346,674,4.346,675,4.346,676,4.346,677,4.346,678,4.346,679,4.346,680,4.346,681,3.429,682,4.346,683,4.346,684,4.346,685,4.346,686,4.346,687,4.346,688,5.825,689,6.126,690,4.346]],["title/modules/HealthModule.html",[58,1.05,73,2.754]],["body/modules/HealthModule.html",[2,2.661,3,0.17,4,0.151,5,0.151,16,0.013,30,0.287,31,1.073,39,0.17,40,0.287,56,0.01,57,0.01,58,1.768,60,2.438,73,4.639,83,3.359,656,5.382,668,4.424,691,5.608,692,6.86,693,6.86,694,4.894,695,5.608]],["title/injectables/InvokeRecordInterceptor.html",[114,2.957,155,1.121]],["body/injectables/InvokeRecordInterceptor.html",[3,0.117,4,0.104,5,0.104,7,0.353,8,1.689,16,0.013,18,0.639,20,1.255,21,0.963,22,0.405,23,1.028,25,1.213,30,0.23,31,0.739,39,0.117,40,0.197,42,3.182,43,1.213,56,0.008,57,0.008,114,3.901,155,1.478,156,1.821,165,0.994,174,1.062,193,2.084,249,2.901,329,1.988,375,2.796,378,2.723,389,2.431,477,3.182,500,2.084,509,3.217,510,1.747,513,3.045,636,5.391,637,3.368,638,4.001,639,5.391,640,5.829,642,3.409,643,3.7,644,4.688,646,2.191,647,3.368,648,3.368,681,4.874,696,5.391,697,3.368,698,6.679,699,3.86,700,5.371,701,3.86,702,3.86,703,2.61,704,6.178,705,3.86,706,3.86,707,6.178,708,6.178,709,6.178,710,3.86,711,3.86,712,3.86,713,3.86,714,3.86,715,5.371,716,5.371,717,3.86,718,3.86,719,3.86,720,3.86]],["title/interfaces/JwtUserData.html",[721,2.584,722,2.754]],["body/interfaces/JwtUserData.html",[3,0.102,4,0.091,5,0.091,7,0.308,13,1.691,16,0.013,22,0.699,24,2.898,30,0.273,31,0.644,36,2.511,39,0.102,40,0.172,43,1.532,47,1.911,48,2.511,49,3.093,56,0.007,57,0.007,58,0.868,92,2.136,96,2.276,115,2.136,144,2.016,155,1.342,165,0.902,174,0.927,183,1.63,246,3.785,249,1.818,351,1.463,375,2.206,378,2.585,382,2.136,389,2.206,433,2.92,461,2.276,464,3.6,477,3.236,500,1.818,502,2.136,510,2.206,550,1.734,638,2.92,642,2.136,643,2.92,646,1.911,703,2.276,721,3.093,722,3.875,723,2.656,724,2.445,725,3.6,726,3.785,727,4.161,728,3.845,729,4.161,730,4.52,731,2.276,732,2.445,733,2.656,734,2.92,735,2.656,736,2.656,737,2.656,738,2.136,739,2.656,740,2.445,741,2.445,742,3.845,743,2.656,744,2.656,745,3.54,746,2.656,747,2.656,748,2.276,749,2.656,750,2.656,751,2.656,752,2.656,753,2.656,754,2.656,755,2.656,756,2.656]],["title/guards/LoginGuard.html",[115,2.584,757,3.212]],["body/guards/LoginGuard.html",[3,0.102,4,0.09,5,0.09,7,0.307,8,1.53,13,1.294,16,0.013,18,0.579,20,1.583,21,1.214,22,0.51,23,1.296,24,2.115,25,1.056,30,0.273,31,0.643,36,2.507,39,0.102,40,0.172,43,1.53,47,1.907,48,2.507,49,2.396,56,0.007,57,0.007,58,0.866,92,2.131,96,2.271,115,3.088,144,2.012,155,1.339,174,0.924,183,0.955,246,2.763,249,2.628,351,2.115,375,2.202,378,2.583,382,2.131,389,2.202,433,2.915,461,2.271,464,2.628,477,3.232,500,1.814,502,2.131,510,2.202,550,1.73,638,3.758,642,3.088,643,3.427,646,1.907,703,2.271,721,3.088,722,3.291,724,2.439,725,2.628,726,2.763,727,4.837,728,3.839,729,5.043,730,5.65,731,2.271,732,2.439,733,2.649,734,2.915,735,2.649,736,2.649,737,2.649,738,3.088,739,2.649,740,2.439,741,2.439,742,3.839,743,2.649,744,2.649,745,3.534,746,2.649,747,2.649,748,2.271,749,2.649,750,2.649,751,2.649,752,2.649,753,2.649,754,2.649,755,2.649,756,2.649,758,2.649,759,2.931,760,3.358,761,2.931,762,3.358]],["title/classes/LoginUserDto.html",[40,0.208,763,2.957]],["body/classes/LoginUserDto.html",[3,0.173,4,0.154,5,0.154,16,0.013,24,3.018,30,0.258,33,1.682,39,0.173,40,0.293,56,0.01,57,0.01,130,3.419,308,1.293,484,2.692,490,3.426,652,3.868,763,5.042,764,4.991,765,6.942,766,3.426,767,3.868,768,4.154]],["title/classes/LoginUserVo.html",[40,0.208,769,2.584]],["body/classes/LoginUserVo.html",[3,0.15,4,0.133,5,0.133,7,0.453,13,1.766,14,4.219,16,0.013,18,0.833,22,0.734,30,0.236,33,1.457,39,0.15,40,0.325,56,0.01,57,0.01,130,2.441,165,1.175,166,4.029,173,2.968,174,1.364,183,1.41,308,1.12,484,1.922,496,2.677,725,2.677,726,3.605,769,4.029,770,5.827,771,3.91,772,6.113,773,5.087,774,4.956,775,4.956,776,4.956,777,2.968,778,3.91]],["title/entities/MeetingRoom.html",[161,1.639,196,1.843]],["body/entities/MeetingRoom.html",[3,0.073,4,0.065,5,0.065,7,0.221,13,1.498,15,1.757,16,0.013,18,0.81,21,1.653,22,0.714,30,0.141,39,0.073,40,0.194,56,0.006,57,0.006,105,3.778,138,2.563,161,1.526,163,1.37,165,0.701,166,2.97,168,2.288,170,3.349,173,2.803,175,3.177,176,2.106,177,2.27,178,4.184,180,2.99,183,1.509,186,1.903,188,2.563,190,3.587,191,4.184,192,4.957,193,3.304,196,1.715,205,2.106,206,2.27,210,2.999,211,2.97,213,2.969,214,0.936,215,3.633,216,2.99,218,2.99,219,1.092,220,3.29,221,4.717,230,3.271,231,3.113,232,4.888,449,3.308,495,4.085,539,1.445,738,2.405,779,2.106,780,4.826,781,4.647,782,5.048,783,6.627,784,2.413,785,2.413,786,2.413,787,2.413,788,6.627,789,2.413,790,6.087,791,2.413,792,2.413,793,2.413,794,2.413,795,2.413,796,2.413,797,2.413,798,2.413,799,2.413,800,2.413,801,2.413,802,2.413,803,2.413,804,2.413,805,3.308,806,2.413,807,2.413,808,3.79,809,2.413]],["title/controllers/MeetingRoomController.html",[0,1.579,810,2.957]],["body/controllers/MeetingRoomController.html",[0,1.18,2,1.18,3,0.092,4,0.082,5,0.082,7,0.278,8,1.422,15,1.648,16,0.013,18,0.76,20,2.08,21,1.595,22,0.67,23,1.703,25,2.011,30,0.276,31,0.582,33,0.894,36,2.33,39,0.092,40,0.156,41,1.567,42,1.567,43,2.011,56,0.007,57,0.007,105,2.822,106,4.533,168,2.238,170,2.674,177,2.71,183,1.907,196,1.376,206,2.71,220,3.162,222,1.567,237,1.822,240,4.262,249,4.006,266,2.209,267,2.209,268,2.654,269,3.286,270,2.209,271,1.93,272,3.286,273,1.822,274,2.209,275,3.428,276,2.209,279,2.209,282,2.057,285,2.399,289,2.209,292,2.399,349,3.569,429,4.262,491,3.797,497,1.822,810,3.286,811,2.654,812,2.654,813,3.041,814,3.041,815,5.221,816,2.654,817,3.041,818,3.041,819,3.041,820,3.041,821,3.041,822,3.041,823,4.533,824,3.041,825,3.041,826,2.654,827,4.046,828,3.041,829,3.041,830,3.041,831,3.428,832,2.654,833,2.209,834,2.209,835,2.654,836,3.569,837,2.399,838,3.041,839,3.041,840,3.041,841,3.041,842,3.041,843,4.524,844,3.041,845,3.041,846,3.041,847,3.041,848,3.041,849,3.041,850,3.041,851,3.041,852,3.041,853,3.041,854,3.041]],["title/classes/MeetingRoomListDto.html",[40,0.208,823,2.754]],["body/classes/MeetingRoomListDto.html",[3,0.134,4,0.119,5,0.119,7,0.405,15,1.52,16,0.013,18,0.701,21,1.471,22,0.618,23,1.883,30,0.263,33,1.301,39,0.134,40,0.339,56,0.009,57,0.009,165,1.091,170,2.772,183,2.011,196,2.003,212,4.208,214,1.717,220,3.128,222,2.28,308,1.001,310,3.214,315,4.484,316,4.484,317,5.809,323,4.651,327,3.214,328,4.815,329,3.037,330,4.651,484,2.287,490,2.651,497,2.651,780,4.651,782,4.651,823,3.987,855,5.786,856,5.231,857,5.146,858,3.862,859,3.862]],["title/classes/MeetingRoomListVo.html",[40,0.208,834,2.957]],["body/classes/MeetingRoomListVo.html",[3,0.165,4,0.146,5,0.146,7,0.498,16,0.012,18,0.801,22,0.706,30,0.202,39,0.165,40,0.278,56,0.01,57,0.01,165,1.246,170,3.057,183,1.915,196,2.462,220,3.449,222,2.802,308,1.23,332,3.951,334,4.944,335,4.291,336,4.291,497,3.258,834,4.889,860,6.38,861,6.38,862,4.553]],["title/modules/MeetingRoomModule.html",[58,1.05,74,2.754]],["body/modules/MeetingRoomModule.html",[2,2.462,3,0.15,4,0.133,5,0.133,16,0.013,30,0.284,31,0.949,39,0.15,40,0.254,56,0.01,57,0.01,58,1.805,60,2.154,61,2.243,62,2.441,63,2.441,64,2.243,65,3.45,66,2.441,74,5.283,79,3.126,80,2.441,81,2.441,83,2.968,93,3.351,94,2.553,105,2.995,106,3.351,196,2.243,220,2.338,222,2.553,497,2.968,810,5.087,831,4.958,832,4.325,863,4.325,864,4.325,865,4.956,866,4.956,867,4.956]],["title/injectables/MeetingRoomService.html",[155,1.121,831,2.584]],["body/injectables/MeetingRoomService.html",[3,0.071,4,0.063,5,0.063,7,0.213,8,1.16,16,0.013,18,0.751,20,1.961,21,1.722,22,0.632,23,1.606,25,1.895,30,0.235,31,0.446,39,0.071,40,0.119,43,1.782,56,0.006,57,0.006,94,1.201,105,1.74,106,4.428,138,1.577,155,1.015,156,1.1,168,2.255,170,2.37,177,2.209,183,1.715,196,2.858,206,2.209,219,1.055,220,3.089,222,1.201,279,1.693,282,1.577,315,2.494,316,2.494,334,2.494,348,4.228,349,2.91,350,4.541,351,1.603,361,4.117,368,1.839,375,1.055,378,2.449,380,3.611,382,1.479,384,1.839,385,2.035,387,3.219,389,2.565,413,2.035,414,2.035,426,2.035,427,2.035,429,2.91,433,2.209,434,3.219,435,3.219,444,2.035,452,3.219,481,2.035,491,3.302,497,1.396,508,1.479,621,4.756,629,2.035,780,3.611,782,2.91,812,3.219,815,3.219,816,3.219,823,4.077,826,3.219,827,3.519,831,2.341,833,1.693,836,2.91,837,1.839,861,3.219,868,2.035,869,3.689,870,2.331,871,2.331,872,2.331,873,2.331,874,3.689,875,2.331,876,3.689,877,2.331,878,2.331,879,2.331,880,2.331,881,2.331,882,2.331,883,2.331,884,2.331,885,2.331,886,2.331,887,2.331,888,2.331,889,2.331,890,3.689,891,2.331,892,2.331,893,2.331,894,2.331,895,2.331,896,2.331,897,2.331,898,2.331,899,2.331,900,2.331,901,2.331,902,4.577,903,3.689,904,2.331,905,2.331,906,2.331,907,2.331,908,2.331,909,2.331,910,2.331,911,3.689,912,2.331,913,3.689,914,2.331,915,2.331,916,2.331]],["title/classes/MeetingRoomUsedCountDto.html",[40,0.208,917,2.584]],["body/classes/MeetingRoomUsedCountDto.html",[3,0.158,4,0.141,5,0.141,7,0.478,13,1.702,15,1.692,16,0.012,18,0.781,22,0.688,30,0.194,39,0.158,40,0.336,56,0.01,57,0.01,165,1.214,167,4.555,170,3.001,171,4.076,210,3.248,213,3.698,214,2.026,308,1.181,917,4.166,918,6.264,919,4.076,920,4.121,921,5.729,922,5.224,923,5.224]],["title/classes/MeetingRoomUsedCountVo.html",[40,0.208,924,2.957]],["body/classes/MeetingRoomUsedCountVo.html",[3,0.161,4,0.143,5,0.143,7,0.487,13,1.798,16,0.012,18,0.861,22,0.759,39,0.161,40,0.272,56,0.01,57,0.01,165,1.228,170,3.169,308,1.203,313,5.257,486,5.71,919,4.304,924,4.822,925,6.615,926,4.197,927,6.317,928,4.643,929,4.643,930,4.643]],["title/modules/MinioModule.html",[58,1.05,75,2.584]],["body/modules/MinioModule.html",[3,0.158,4,0.141,5,0.141,16,0.012,30,0.244,31,1,39,0.158,40,0.267,56,0.01,57,0.01,58,1.85,60,2.271,61,2.364,62,2.573,63,2.573,64,2.364,65,3.535,66,3.535,75,5.101,79,3.233,80,2.573,81,2.573,931,4.559,932,4.559,933,4.559,934,5.646,935,5.224,936,5.224]],["title/injectables/MinioService.html",[155,1.121,934,2.754]],["body/injectables/MinioService.html",[3,0.13,4,0.116,5,0.116,7,0.394,8,1.82,13,1.699,16,0.013,18,0.778,20,1.883,21,1.444,22,0.686,23,1.542,25,1.354,30,0.243,31,0.824,39,0.13,40,0.22,41,2.219,42,3.369,56,0.009,57,0.009,86,5.458,87,2.913,127,2.913,155,1.594,156,2.032,165,1.071,348,3.714,351,1.872,375,2.96,380,2.58,389,1.949,529,3.759,539,2.58,550,3.603,934,3.916,937,3.759,938,6.54,939,5.053,940,5.79,941,5.79,942,6.994,943,6.54,944,4.307,945,4.307,946,5.517,947,3.759,948,4.307,949,4.307,950,4.307,951,4.307,952,4.307,953,4.307,954,4.307,955,4.307,956,4.307,957,4.307]],["title/classes/PerformanceDto.html",[40,0.208,593,2.754]],["body/classes/PerformanceDto.html",[3,0.174,4,0.155,5,0.155,16,0.013,30,0.259,33,1.688,39,0.174,40,0.294,56,0.01,57,0.01,308,1.298,484,2.699,496,3.101,561,2.958,564,4.706,593,4.706,614,3.439,615,4.53,958,5.011,959,6.958,960,5.489]],["title/entities/PerformanceEntity.html",[161,1.639,614,2.439]],["body/entities/PerformanceEntity.html",[3,0.054,4,0.048,5,0.048,7,0.163,13,1.205,15,1.583,16,0.013,18,0.73,21,1.329,22,0.743,30,0.11,39,0.054,40,0.195,56,0.004,57,0.004,161,0.719,163,1.015,165,0.55,168,2.113,171,1.015,174,0.818,175,1.781,183,1.516,193,1.606,209,1.298,210,3.008,211,3.134,213,2.291,214,0.693,215,3.487,219,0.809,225,5.079,329,3.83,370,2.159,389,1.345,516,1.209,561,3.263,564,2.581,570,4.31,571,2.345,572,2.345,577,1.56,579,1.41,580,1.41,582,1.41,583,1.41,587,2.345,588,2.345,596,5.261,614,1.781,862,2.011,919,2.526,960,3.011,961,1.298,962,4.931,963,4.931,964,3.331,965,4.31,966,1.787,967,2.973,968,1.787,969,3.882,970,2.595,971,2.595,972,2.595,973,2.595,974,4.651,975,2.772,976,1.787,977,1.787,978,2.595,979,2.595,980,2.595,981,2.595,982,2.595,983,3.509,984,2.345,985,2.595,986,2.595,987,2.595,988,1.787,989,1.787,990,2.345,991,2.595,992,2.595,993,3.882,994,2.595,995,2.595,996,2.595,997,4.651,998,2.595,999,3.882,1000,2.595,1001,2.595,1002,2.595,1003,2.595,1004,2.595,1005,2.595,1006,2.595,1007,2.595,1008,3.882,1009,2.595,1010,4.651,1011,2.595,1012,3.896,1013,2.595,1014,2.595,1015,2.159,1016,2.595,1017,3.509,1018,1.787,1019,1.787,1020,2.595,1021,2.595,1022,3.509,1023,1.787,1024,1.787,1025,3.882,1026,2.595,1027,2.595,1028,3.231,1029,2.595,1030,3.509,1031,2.595,1032,2.159,1033,2.595,1034,2.595,1035,3.509,1036,3.509,1037,4.651,1038,2.595,1039,3.509,1040,2.595,1041,3.509,1042,2.595,1043,1.787,1044,3.509,1045,1.787,1046,1.787,1047,2.595,1048,2.595,1049,3.509,1050,3.011,1051,3.011,1052,3.509,1053,2.595,1054,1.787,1055,3.882,1056,1.56,1057,1.56,1058,1.56,1059,1.56,1060,1.56,1061,1.56,1062,2.345,1063,2.345,1064,2.345,1065,2.345,1066,2.345,1067,1.41,1068,2.345,1069,2.345,1070,1.41,1071,1.41,1072,1.56,1073,1.56,1074,1.56,1075,1.56]],["title/classes/PerformanceEntry.html",[40,0.208,975,2.957]],["body/classes/PerformanceEntry.html",[3,0.07,4,0.062,5,0.062,7,0.211,13,1.357,15,1.334,16,0.013,18,0.615,21,1.407,22,0.722,30,0.136,39,0.07,40,0.233,56,0.006,57,0.006,161,0.929,165,0.677,168,1.701,171,2.582,174,0.636,175,1.383,183,1.708,193,1.247,209,1.677,210,3.234,211,3.581,213,2.666,214,0.896,215,3.816,219,1.045,225,4.881,308,0.522,329,3.547,370,1.677,389,1.045,516,1.561,556,3.195,561,2.907,564,1.561,571,1.821,572,1.821,579,1.821,580,1.821,582,1.821,583,1.821,587,1.821,588,1.821,596,4.881,614,1.383,862,1.561,919,2.078,960,1.821,961,1.677,962,3.969,963,3.969,964,2.015,965,3.195,969,3.195,970,2.015,971,2.015,972,2.015,973,2.015,974,3.969,975,3.303,978,2.015,979,2.015,980,2.015,981,2.015,982,2.015,983,3.588,984,1.821,985,2.015,986,2.015,987,2.015,990,1.821,991,2.015,992,2.015,993,3.195,994,2.015,995,2.015,996,2.015,997,3.969,998,2.015,999,3.195,1000,2.015,1001,2.015,1002,2.015,1003,2.015,1004,2.015,1005,2.015,1006,2.015,1007,2.015,1008,3.195,1009,2.015,1010,3.969,1011,2.015,1012,3.588,1013,2.015,1014,2.015,1015,1.677,1016,2.015,1017,3.588,1020,2.015,1021,2.015,1022,3.588,1025,3.195,1026,2.015,1027,2.015,1028,2.659,1029,2.015,1030,2.888,1031,2.015,1032,1.677,1033,2.015,1034,2.015,1035,3.588,1036,3.588,1037,3.969,1038,2.015,1039,3.588,1040,2.015,1041,3.588,1042,2.015,1044,3.588,1047,2.015,1048,2.015,1049,3.588,1050,2.888,1051,2.888,1052,3.588,1053,2.015,1055,5.695,1056,2.015,1057,3.969,1058,2.015,1059,3.969,1060,2.015,1061,2.015,1062,2.888,1063,2.888,1064,2.888,1065,2.888,1066,2.888,1067,1.821,1068,2.888,1069,2.888,1070,1.821,1071,1.821,1072,2.015,1073,2.015,1074,2.015,1075,2.015,1076,3.661,1077,2.309,1078,5.176,1079,2.309,1080,2.309,1081,2.309]],["title/entities/Permission.html",[49,2.005,161,1.639]],["body/entities/Permission.html",[3,0.145,4,0.129,5,0.129,7,0.437,13,1.647,15,1.774,16,0.013,18,0.818,21,1.191,22,0.721,30,0.177,39,0.145,40,0.244,49,3.809,56,0.009,57,0.009,161,2.495,163,2.712,165,1.147,168,2.574,183,1.763,188,4.654,190,4.192,191,4.89,192,4.926,202,4.502,215,3.908,219,2.161,232,4.192,517,4.79,725,2.579,781,5.482,1082,4.168,1083,4.776,1084,4.776,1085,4.776]],["title/guards/PermissionGuard.html",[116,2.957,757,3.212]],["body/guards/PermissionGuard.html",[3,0.125,4,0.111,5,0.111,7,0.377,8,1.767,16,0.013,18,0.668,20,1.828,21,1.402,22,0.589,23,1.497,25,1.296,30,0.255,31,0.789,39,0.125,40,0.211,41,2.124,43,2.011,48,3.295,49,2.031,56,0.008,57,0.008,92,2.617,116,4.083,155,1.547,249,3.036,348,3.632,351,1.792,378,2.788,389,1.866,433,2.47,477,3.295,500,2.227,510,1.866,638,4.115,642,2.617,703,2.788,725,2.227,727,4.989,729,5.388,732,2.995,740,2.995,741,2.995,748,2.788,758,3.253,759,3.599,761,4.906,1028,2.995,1086,3.599,1087,4.123,1088,4.123,1089,5.621,1090,4.435,1091,4.123,1092,6.396,1093,4.123,1094,5.621,1095,5.621,1096,4.123,1097,4.123,1098,4.123]],["title/modules/RedisModule.html",[58,1.05,341,2.584]],["body/modules/RedisModule.html",[3,0.138,4,0.123,5,0.123,16,0.013,30,0.266,31,0.871,39,0.138,40,0.233,43,1.431,56,0.009,57,0.009,58,1.733,60,1.978,61,2.059,62,2.241,63,2.241,64,2.059,65,3.311,66,3.311,79,2.958,80,2.241,81,2.241,86,4.882,87,3.078,123,3.972,125,2.888,127,3.078,132,3.972,144,2.726,153,3.972,341,4.94,348,2.584,354,5.196,378,1.765,380,2.726,946,4.738,1099,3.972,1100,3.972,1101,3.972,1102,4.551,1103,6.006,1104,3.305,1105,4.551,1106,4.551,1107,4.551,1108,4.551,1109,4.551,1110,4.551,1111,4.551]],["title/injectables/RedisService.html",[155,1.121,354,2.584]],["body/injectables/RedisService.html",[3,0.13,4,0.116,5,0.116,7,0.393,8,1.817,13,1.786,15,1.107,16,0.013,18,0.777,20,1.879,21,1.441,22,0.684,23,1.539,25,1.817,30,0.215,31,0.822,39,0.13,40,0.22,43,1.35,56,0.009,57,0.009,144,2.572,155,1.59,156,2.026,165,1.069,183,2.136,329,3.598,348,4.263,354,3.667,361,3.119,375,2.955,380,3.912,559,5.043,1104,3.119,1112,3.748,1113,6.531,1114,5.778,1115,5.778,1116,4.294,1117,5.778,1118,7.29,1119,4.294,1120,3.748,1121,6.531,1122,5.778,1123,4.294,1124,4.294,1125,4.294,1126,4.294]],["title/classes/RefreshTokenDto.html",[40,0.208,1127,2.957]],["body/classes/RefreshTokenDto.html",[3,0.16,4,0.142,5,0.142,7,0.483,13,1.494,15,1.361,16,0.012,18,0.628,22,0.554,30,0.196,39,0.16,40,0.338,56,0.01,57,0.01,165,1.223,184,3.959,210,2.991,213,3.405,214,2.048,230,2.991,231,2.852,308,1.194,487,3.352,654,4.469,745,5.49,773,5.239,1127,4.8,1128,5.768,1129,4.609,1130,6.597,1131,5.281,1132,5.281]],["title/classes/RefreshTokenVo.html",[40,0.208,1133,2.957]],["body/classes/RefreshTokenVo.html",[3,0.177,4,0.158,5,0.158,14,3.804,16,0.012,30,0.262,33,1.723,39,0.177,40,0.3,47,3.326,56,0.011,57,0.011,308,1.324,484,2.732,496,3.164,769,3.718,1133,5.115,1134,5.112,1135,5.112,1136,7.043,1137,5.112]],["title/classes/RegisterCaptchaDto.html",[40,0.208,1138,2.754]],["body/classes/RegisterCaptchaDto.html",[3,0.16,4,0.142,5,0.142,7,0.483,13,1.494,15,1.361,16,0.013,18,0.628,22,0.554,30,0.196,39,0.16,40,0.338,56,0.01,57,0.01,165,1.223,184,3.959,210,2.991,214,2.048,230,3.264,231,2.852,308,1.194,464,4.083,487,3.352,546,4.878,654,4.469,1138,4.469,1139,5.214,1140,4.166,1141,4.166,1142,5.281,1143,5.768]],["title/classes/RegisterUserDto.html",[40,0.208,766,2.439]],["body/classes/RegisterUserDto.html",[3,0.153,4,0.136,5,0.136,7,0.463,13,1.454,15,1.304,16,0.013,18,0.602,22,0.53,24,2.797,30,0.263,33,1.488,39,0.153,40,0.329,56,0.01,57,0.01,130,3.168,165,1.19,174,1.393,210,2.911,214,1.962,230,2.29,231,3.474,308,1.144,464,3.474,484,2.495,487,3.211,490,3.031,652,3.422,766,3.853,777,3.031,1139,5.075,1144,5.075,1145,4.672,1146,6.706,1147,5.06]],["title/interfaces/Request.html",[477,2.098,721,2.584]],["body/interfaces/Request.html",[3,0.109,4,0.097,5,0.097,7,0.329,13,1.345,16,0.013,22,0.377,24,2.224,30,0.278,31,0.689,36,2.635,39,0.109,40,0.184,43,1.608,47,2.044,48,2.635,49,2.519,56,0.008,57,0.008,58,0.928,92,2.285,96,2.435,115,2.285,144,2.157,155,1.408,165,0.946,174,1.783,183,1.024,246,2.904,249,1.945,351,1.565,375,2.315,378,2.654,382,2.285,389,2.315,433,3.064,461,2.435,464,2.763,477,3.525,500,1.945,502,2.285,510,2.315,550,1.855,638,3.064,642,2.285,643,3.064,646,2.044,703,2.435,721,3.246,722,4.381,723,2.84,724,2.615,725,2.763,726,2.904,727,4.321,728,4.035,729,4.321,730,4.693,731,2.435,732,2.615,733,2.84,734,3.064,735,2.84,736,2.84,737,2.84,738,2.285,739,2.84,740,2.615,741,2.615,742,4.035,743,2.84,744,2.84,745,3.715,746,2.84,747,2.84,748,2.435,749,2.84,750,2.84,751,2.84,752,2.84,753,2.84,754,2.84,755,2.84,756,2.84]],["title/entities/Role.html",[161,1.639,1148,2.754]],["body/entities/Role.html",[3,0.143,4,0.127,5,0.127,7,0.431,13,1.389,15,1.763,16,0.013,18,0.813,21,1.958,22,0.717,30,0.228,39,0.143,40,0.241,49,3.569,56,0.009,57,0.009,161,2.474,163,2.676,165,1.137,168,2.558,183,1.748,188,4.625,190,3.188,192,4.157,202,4.464,215,3.49,219,2.133,232,3.188,725,3.694,726,2.676,1148,4.901,1149,4.114,1150,4.714,1151,4.714,1152,4.114,1153,6.146,1154,4.714,1155,5.364,1156,5.364,1157,4.714]],["title/controllers/SseController.html",[0,1.579,1158,2.957]],["body/controllers/SseController.html",[0,1.581,2,1.581,3,0.123,4,0.11,5,0.11,7,0.373,8,1.754,15,1.051,16,0.013,18,0.663,20,1.326,21,1.017,22,0.427,23,1.086,25,1.754,30,0.275,31,0.78,33,1.199,39,0.123,40,0.209,42,2.874,43,1.754,56,0.008,57,0.008,127,2.757,237,2.442,273,2.442,351,1.772,375,2.524,378,2.164,442,5,477,3.522,508,2.587,509,4.095,510,1.845,546,2.757,550,2.1,643,3.809,645,3.216,646,2.315,649,3.558,1158,4.051,1159,3.558,1160,5.578,1161,6.837,1162,5.549,1163,4.077,1164,4.077,1165,5.578,1166,4.077,1167,6.249,1168,4.868,1169,4.868,1170,2.961,1171,2.961,1172,4.077,1173,4.035,1174,3.558,1175,4.077,1176,4.077,1177,3.558,1178,4.077,1179,4.077,1180,4.077,1181,4.077,1182,4.077,1183,4.077]],["title/modules/SseModule.html",[58,1.05,76,2.754]],["body/modules/SseModule.html",[2,2.452,3,0.149,4,0.133,5,0.133,16,0.013,30,0.274,31,0.942,39,0.149,40,0.252,56,0.01,57,0.01,58,1.8,60,2.14,61,2.227,62,2.424,63,2.424,64,2.227,65,3.438,66,3.438,76,5.363,79,3.113,80,2.424,81,2.424,83,2.948,1158,5.071,1170,3.575,1171,3.575,1173,5.256,1174,4.296,1184,4.296,1185,4.296,1186,4.296,1187,4.922,1188,4.922,1189,4.922,1190,4.922]],["title/injectables/SseService.html",[155,1.121,1173,2.584]],["body/injectables/SseService.html",[3,0.095,4,0.085,5,0.085,7,0.288,8,1.459,13,1.534,16,0.013,18,0.835,20,1.978,21,1.517,22,0.638,23,1.62,25,2.039,30,0.241,31,0.602,39,0.095,40,0.161,41,1.621,42,1.621,43,1.459,56,0.007,57,0.007,155,1.277,156,1.484,165,0.858,193,1.7,329,1.621,351,1.368,375,2.494,378,1.221,389,2.494,442,4.114,508,3.861,509,3.644,510,1.424,539,1.885,547,4.711,550,3.616,643,3.301,645,4.348,646,1.787,946,3.66,1162,5.309,1167,4.81,1168,2.746,1169,5.309,1170,2.285,1171,2.285,1173,2.945,1177,4.049,1191,2.746,1192,5.512,1193,4.64,1194,4.64,1195,4.64,1196,6.083,1197,3.147,1198,4.64,1199,4.64,1200,3.147,1201,5.512,1202,4.64,1203,3.147,1204,4.64,1205,3.147,1206,3.147,1207,3.147,1208,3.147,1209,3.147,1210,3.147,1211,5.512,1212,3.147,1213,3.147,1214,3.147,1215,3.147,1216,3.147,1217,3.147,1218,3.147,1219,5.512,1220,3.147,1221,3.147,1222,3.147,1223,3.147,1224,3.147,1225,3.147,1226,3.147,1227,3.147,1228,3.147,1229,3.147,1230,3.147,1231,3.147]],["title/controllers/StatisticController.html",[0,1.579,1232,2.957]],["body/controllers/StatisticController.html",[0,1.546,2,1.546,3,0.121,4,0.107,5,0.107,7,0.365,8,1.727,15,1.416,16,0.013,18,0.653,20,1.787,21,1.37,22,0.576,23,1.463,25,1.727,30,0.289,31,0.763,33,1.172,36,2.83,39,0.121,40,0.204,41,2.054,42,2.054,43,1.727,56,0.008,57,0.008,162,2.486,170,2.297,237,2.388,249,3.658,269,4.565,272,3.99,273,2.388,274,2.896,276,2.896,833,2.896,835,3.48,917,4.66,919,3.119,924,2.896,1232,3.99,1233,3.48,1234,3.987,1235,5.485,1236,6.285,1237,3.48,1238,3.987,1239,3.987,1240,3.987,1241,4.966,1242,3.987,1243,3.987,1244,3.145,1245,3.989,1246,3.48,1247,3.145,1248,4.334,1249,2.896,1250,3.48,1251,5.494,1252,3.987,1253,3.987,1254,3.987,1255,3.987,1256,3.987,1257,3.987,1258,3.987,1259,3.987]],["title/modules/StatisticModule.html",[58,1.05,77,2.754]],["body/modules/StatisticModule.html",[2,2.558,3,0.159,4,0.142,5,0.142,16,0.013,30,0.268,31,1.007,39,0.159,40,0.269,56,0.01,57,0.01,58,1.856,60,2.287,61,2.381,62,2.591,63,2.591,64,2.381,65,3.547,66,2.591,77,5.365,79,3.247,80,2.591,81,2.591,1232,5.23,1245,5.035,1246,4.592,1260,4.592,1261,4.592,1262,5.262,1263,5.262]],["title/injectables/StatisticService.html",[155,1.121,1245,2.584]],["body/injectables/StatisticService.html",[3,0.103,4,0.092,5,0.092,7,0.312,8,1.548,16,0.013,18,0.687,20,1.878,21,1.441,22,0.605,23,1.538,24,1.484,25,1.548,30,0.274,31,0.653,39,0.103,40,0.175,43,1.548,56,0.007,57,0.007,94,1.759,155,1.355,156,1.61,162,2.228,167,4.012,170,1.427,171,3.59,174,0.94,196,1.545,219,1.545,220,1.61,221,2.309,222,1.759,223,2.693,246,1.938,313,2.479,348,3.965,351,2.14,352,2.979,353,6.094,361,3.576,369,4.297,370,3.576,375,1.545,378,2.452,380,2.949,442,4.275,486,2.693,833,2.479,917,4.432,919,1.938,927,2.979,1235,4.297,1237,4.297,1241,4.722,1245,3.125,1247,2.693,1248,3.884,1264,2.979,1265,4.924,1266,3.414,1267,3.414,1268,4.924,1269,3.414,1270,3.414,1271,4.924,1272,4.924,1273,4.924,1274,3.414,1275,3.414,1276,3.414,1277,3.414,1278,3.414,1279,3.414,1280,4.924,1281,2.979,1282,4.924,1283,6.322,1284,6.322,1285,3.414,1286,4.924,1287,3.414,1288,3.414,1289,3.414,1290,3.414,1291,3.414,1292,3.414,1293,3.414]],["title/classes/UnLoginException.html",[40,0.208,734,2.439]],["body/classes/UnLoginException.html",[3,0.143,4,0.127,5,0.127,7,0.433,13,1.701,16,0.013,18,0.732,20,1.538,21,1.18,22,0.646,23,1.824,30,0.229,31,0.905,39,0.187,40,0.315,47,2.685,56,0.009,57,0.009,117,3.198,125,3.001,165,1.14,174,1.302,181,3.435,230,3.491,271,3.001,308,1.069,351,2.056,378,1.834,500,2.554,501,4.859,502,3.001,503,3.731,505,4.859,509,4.103,510,2.14,512,3.731,516,3.198,517,3.001,519,3.731,734,4.103,1120,4.127,1294,3.731,1295,5.375,1296,6.159,1297,4.127,1298,4.127,1299,4.127]],["title/classes/UnloginFilter.html",[40,0.208,117,2.754]],["body/classes/UnloginFilter.html",[3,0.143,4,0.127,5,0.127,7,0.433,8,1.937,13,1.392,16,0.013,18,0.562,20,1.538,21,1.18,22,0.496,23,1.26,25,1.487,30,0.229,31,0.905,39,0.187,40,0.315,47,2.685,56,0.009,57,0.009,117,4.165,125,4.347,174,1.302,181,3.435,230,3.1,271,3.001,308,1.069,378,1.834,500,3.327,501,5.404,502,4.347,503,4.859,505,5.725,507,4.127,508,3.001,509,4.103,510,2.14,512,3.731,516,3.198,517,3.001,519,3.731,734,4.347,1294,3.731,1295,4.127,1297,4.127,1298,4.127,1299,4.127,1300,4.729]],["title/classes/UpdateMeetingRoomDto.html",[40,0.208,827,2.754]],["body/classes/UpdateMeetingRoomDto.html",[3,0.166,4,0.148,5,0.148,16,0.013,30,0.273,33,1.612,39,0.166,40,0.28,56,0.01,57,0.01,105,3.19,168,2.53,177,3.283,196,2.48,220,2.585,222,2.823,308,1.239,484,2.623,490,3.283,491,3.478,493,4.324,497,3.283,827,4.574,836,4.324,856,4.324,857,5.903,1301,4.783,1302,6.402,1303,6.763]],["title/classes/UpdateUserDto.html",[40,0.208,1304,2.957]],["body/classes/UpdateUserDto.html",[3,0.166,4,0.148,5,0.148,16,0.013,24,2.94,30,0.273,33,1.612,39,0.166,40,0.28,56,0.01,57,0.01,130,3.331,174,1.509,308,1.239,484,2.623,490,3.283,496,2.96,652,3.707,766,3.283,767,3.707,768,3.981,777,3.283,1144,5.336,1302,6.402,1304,4.912,1305,3.981,1306,5.903,1307,5.903]],["title/classes/UpdateUserPasswordCaptchaDto.html",[40,0.208,1308,2.957]],["body/classes/UpdateUserPasswordCaptchaDto.html",[3,0.167,4,0.148,5,0.148,7,0.503,13,1.244,15,1.418,16,0.012,18,0.654,22,0.577,30,0.204,39,0.167,40,0.281,56,0.01,57,0.01,130,2.709,165,1.254,174,1.514,184,3.295,230,2.49,308,1.244,464,3.661,484,2.629,487,3.492,546,4.585,654,3.721,767,3.721,1138,5.187,1140,4.34,1141,4.34,1305,3.996,1308,4.924,1309,4.802,1310,5.502,1311,4.802]],["title/classes/UpdateUserPasswordDto.html",[40,0.208,1312,2.957]],["body/classes/UpdateUserPasswordDto.html",[3,0.174,4,0.155,5,0.155,16,0.013,30,0.259,33,1.688,39,0.174,40,0.294,56,0.01,57,0.01,174,1.58,308,1.298,484,2.699,496,3.101,766,3.439,767,3.883,768,4.17,1145,5.054,1305,4.17,1306,6.073,1312,5.054,1313,5.011]],["title/entities/User.html",[161,1.639,174,1.121]],["body/entities/User.html",[3,0.075,4,0.067,5,0.067,7,0.227,13,1.646,15,1.877,16,0.013,18,0.866,21,1.546,22,0.763,23,1.436,24,2.814,30,0.177,39,0.075,40,0.199,48,2.459,56,0.006,57,0.006,130,3.297,161,1.562,163,1.412,165,0.718,166,3.029,168,1.785,173,2.859,174,1.068,175,3.23,180,4.613,183,1.534,184,2.325,188,3.228,190,2.625,192,4.847,193,2.912,202,2.819,210,2.646,212,3.029,213,3.192,214,0.965,215,3.907,216,3.765,218,3.765,219,1.126,230,3.03,231,2.912,232,4.925,395,3.387,464,3.716,466,3.387,469,4.165,539,2.325,654,2.625,726,2.71,738,3.422,790,5.648,805,4.165,990,3.062,1141,1.962,1143,3.387,1145,3.466,1148,3.647,1152,2.171,1155,3.387,1156,3.387,1307,4.165,1314,2.171,1315,4.773,1316,4.773,1317,2.487,1318,2.487,1319,2.487,1320,3.881,1321,3.881,1322,5.392,1323,3.881,1324,2.487,1325,2.487,1326,3.881,1327,2.487,1328,3.881,1329,2.487,1330,2.487,1331,3.881,1332,5.392,1333,2.487,1334,3.881,1335,2.487,1336,2.487,1337,2.487,1338,3.881,1339,2.487,1340,2.487,1341,3.881,1342,2.487,1343,3.881,1344,2.487,1345,2.487,1346,2.487,1347,2.487,1348,2.487,1349,2.487,1350,2.171,1351,2.487,1352,2.487]],["title/classes/UserBookignCountDto.html",[40,0.208,1241,2.754]],["body/classes/UserBookignCountDto.html",[3,0.162,4,0.144,5,0.144,7,0.49,13,1.508,15,1.719,16,0.012,18,0.793,22,0.699,30,0.199,39,0.162,40,0.274,56,0.01,57,0.01,105,2.528,162,2.425,165,1.234,167,4.233,170,2.241,171,3.787,308,1.212,484,2.587,917,4.961,919,3.043,920,4.228,921,5.821,1241,4.511,1248,4.228,1309,5.821,1353,4.677,1354,5.359,1355,5.359]],["title/classes/UserBookignCountVo.html",[40,0.208,1249,2.957]],["body/classes/UserBookignCountVo.html",[3,0.164,4,0.145,5,0.145,7,0.494,13,1.805,16,0.012,18,0.866,22,0.764,24,3.168,39,0.164,40,0.276,56,0.01,57,0.01,162,3.448,165,1.24,246,4.137,308,1.221,926,4.259,928,4.712,929,4.712,930,4.712,1249,4.867,1281,6.359,1356,6.649]],["title/controllers/UserController.html",[0,1.579,1357,2.957]],["body/controllers/UserController.html",[0,0.638,2,0.638,3,0.109,4,0.044,5,0.127,7,0.15,8,0.872,13,0.954,14,0.889,15,1.735,16,0.013,18,0.8,20,2.189,21,1.679,22,0.727,23,1.793,25,2.116,30,0.269,31,0.315,33,0.484,36,2.801,39,0.05,40,0.084,41,0.848,42,0.848,43,2.116,48,1.852,56,0.004,57,0.004,130,0.81,138,1.113,165,0.304,168,0.615,174,0.99,183,1.454,184,0.986,206,2.154,237,0.986,240,2.188,246,2.397,249,4.083,266,1.195,267,2.014,269,2.611,270,1.195,271,1.044,272,3.949,273,0.986,274,1.195,275,3.625,276,1.195,282,1.113,285,1.298,289,3.423,290,1.436,292,1.298,294,1.436,368,1.298,378,0.638,510,0.745,539,2.154,546,2.855,550,0.848,650,3.066,681,2.188,689,2.421,763,3.949,766,2.529,767,1.876,768,3.066,769,1.044,773,2.014,837,2.837,939,2.421,1015,1.195,1127,3.949,1130,2.421,1133,1.195,1137,1.436,1138,2.855,1146,3.138,1247,1.298,1250,2.421,1304,4.148,1308,3.066,1311,2.421,1312,3.066,1357,2.014,1358,1.436,1359,2.774,1360,3.596,1361,2.774,1362,2.774,1363,2.774,1364,3.596,1365,2.774,1366,1.645,1367,1.645,1368,1.645,1369,4.221,1370,1.645,1371,1.645,1372,1.645,1373,1.645,1374,2.774,1375,1.645,1376,1.645,1377,1.645,1378,1.645,1379,1.645,1380,1.645,1381,1.645,1382,1.645,1383,1.645,1384,3.711,1385,1.645,1386,1.645,1387,1.645,1388,1.645,1389,1.645,1390,1.645,1391,1.645,1392,1.645,1393,2.774,1394,1.645,1395,1.645,1396,1.645,1397,1.645,1398,1.645,1399,1.645,1400,1.645,1401,1.645,1402,2.774,1403,1.645,1404,1.645,1405,2.774,1406,1.645,1407,1.645,1408,1.645,1409,1.645,1410,3.596,1411,1.645,1412,1.645,1413,1.645,1414,1.645,1415,1.645,1416,1.645,1417,1.645,1418,1.645,1419,2.774,1420,2.774,1421,1.645,1422,1.645,1423,1.436,1424,2.188,1425,2.611,1426,1.436,1427,2.774,1428,1.645,1429,1.645,1430,1.645,1431,1.645,1432,1.645,1433,1.645,1434,1.645,1435,1.645,1436,1.113,1437,1.436,1438,1.195,1439,1.645,1440,1.645,1441,1.645,1442,1.645,1443,1.645,1444,1.645,1445,1.645,1446,1.645,1447,2.774,1448,1.645,1449,2.774,1450,1.645,1451,1.645,1452,1.645,1453,2.774,1454,1.645,1455,2.774,1456,1.645,1457,1.645,1458,1.645,1459,1.645,1460,1.645,1461,1.645,1462,1.645,1463,1.645,1464,1.645,1465,1.645,1466,1.645,1467,1.645,1468,1.645,1469,1.645,1470,1.645,1471,1.645,1472,1.645,1473,1.645,1474,1.645,1475,1.645,1476,1.645,1477,1.645,1478,1.645,1479,1.645,1480,1.645,1481,1.645,1482,1.645,1483,1.645,1484,1.645,1485,1.645,1486,1.645,1487,1.645,1488,1.645,1489,1.645,1490,1.645,1491,1.645,1492,1.645,1493,1.645,1494,1.645,1495,1.436,1496,1.645,1497,1.645,1498,1.645]],["title/classes/UserDetailVo.html",[40,0.208,1436,2.754]],["body/classes/UserDetailVo.html",[3,0.173,4,0.153,5,0.153,16,0.013,30,0.257,33,1.675,39,0.173,40,0.291,56,0.01,57,0.01,130,3.41,173,4.148,174,1.568,308,1.288,484,2.686,496,3.077,726,3.932,777,3.412,778,5.463,1436,4.683,1499,4.494,1500,4.971]],["title/classes/UserInfo.html",[14,2.199,40,0.208]],["body/classes/UserInfo.html",[3,0.146,4,0.13,5,0.13,7,0.441,13,1.753,14,3.949,16,0.013,18,0.822,22,0.725,30,0.232,33,1.418,39,0.146,40,0.319,56,0.009,57,0.009,130,3.073,165,1.154,166,4.805,173,3.737,174,1.328,183,1.775,308,1.09,484,2.42,496,2.605,725,3.735,726,4.299,769,3.061,770,5.768,771,3.805,772,4.21,773,3.503,777,2.889,778,4.922,1501,4.824,1502,4.824,1503,4.824]],["title/classes/UserListDto.html",[40,0.208,1384,2.957]],["body/classes/UserListDto.html",[3,0.137,4,0.122,5,0.122,7,0.414,15,1.542,16,0.013,18,0.711,22,0.627,23,1.899,24,2.6,30,0.265,33,1.33,39,0.137,40,0.343,56,0.009,57,0.009,165,1.107,174,1.245,183,2.029,212,4.253,214,1.754,308,1.022,310,3.285,315,4.532,316,4.532,317,5.851,323,4.719,327,3.285,328,4.867,329,3.081,330,4.719,464,3.23,484,2.32,490,2.709,777,2.709,856,5.287,858,3.947,859,3.947,1144,4.719,1145,4.344,1384,4.344,1504,5.849]],["title/classes/UserListVo.html",[40,0.208,1438,2.957]],["body/classes/UserListVo.html",[3,0.169,4,0.15,5,0.15,7,0.509,16,0.012,18,0.812,22,0.716,30,0.207,39,0.169,40,0.285,56,0.01,57,0.01,165,1.263,174,1.532,183,1.942,308,1.258,332,4.042,334,4.995,335,4.39,336,4.39,862,4.617,1350,6.445,1436,3.764,1437,4.857,1438,4.958,1499,5.826]],["title/modules/UserModule.html",[58,1.05,78,2.754]],["body/modules/UserModule.html",[2,2.219,3,0.128,4,0.114,5,0.114,16,0.013,30,0.296,31,0.81,39,0.128,40,0.216,49,2.818,56,0.009,57,0.009,58,1.671,60,1.84,61,1.915,62,2.084,63,2.084,64,1.915,65,3.192,66,2.084,71,4.478,75,4.744,78,5.475,79,2.818,80,2.084,81,2.084,83,3.427,93,2.862,94,2.18,98,3.693,174,1.165,341,4.744,777,2.535,1148,3.869,1357,4.708,1425,5.429,1426,3.693,1505,3.693,1506,4.232,1507,3.693,1508,4.232,1509,4.232,1510,4.232,1511,4.232,1512,4.232,1513,4.232,1514,4.232]],["title/coverage.html",[1515,4.397]],["body/coverage.html",[0,2.36,1,1.391,5,0.052,6,1.671,14,1.7,16,0.013,22,0.201,34,1.215,36,0.987,37,1.511,40,0.406,49,0.943,56,0.005,57,0.005,58,0.494,64,1.424,101,2.129,105,1.485,106,2.129,110,1.511,112,1.391,113,1.391,114,1.391,115,1.215,116,1.391,117,1.295,130,0.943,155,1.868,157,1.671,161,2.345,162,1.813,164,1.511,170,1.94,174,1.103,196,0.867,220,2.748,221,1.295,235,1.391,236,1.671,245,1.295,254,1.295,275,1.215,277,1.215,283,1.391,309,1.671,310,2.91,331,1.671,332,2.91,347,1.671,354,1.215,355,1.215,389,0.867,477,0.987,482,1.671,483,1.671,491,1.215,492,1.671,493,2.483,498,1.671,499,1.671,525,1.671,547,1.391,548,1.511,560,1.295,561,3.001,562,1.671,565,1.215,567,1.671,585,1.391,586,1.671,593,1.295,599,1.215,614,1.147,617,1.671,634,1.671,635,1.671,650,1.391,651,1.671,652,3.138,656,1.391,657,1.671,696,1.671,697,1.671,721,1.998,722,1.295,724,2.91,731,1.295,734,1.147,757,2.483,763,1.391,764,1.671,766,1.147,769,1.215,770,2.483,771,2.483,779,1.671,810,1.391,811,1.671,823,1.295,827,1.295,831,1.215,834,1.391,855,1.671,860,1.671,868,1.671,917,1.215,918,1.671,919,1.787,920,2.483,924,1.391,925,1.671,926,2.483,934,1.295,937,1.671,958,1.671,961,2.286,975,1.391,984,6.653,1082,1.671,1086,1.671,1090,1.511,1112,1.671,1127,1.391,1128,1.671,1129,1.671,1133,1.391,1134,1.671,1135,1.671,1138,1.295,1139,2.483,1140,2.483,1148,1.295,1149,1.671,1158,1.391,1159,1.671,1173,1.215,1191,1.671,1232,1.391,1233,1.671,1241,1.295,1244,1.511,1245,1.215,1249,1.391,1264,1.671,1294,2.483,1301,1.671,1304,1.391,1305,2.91,1308,1.391,1312,1.391,1313,1.671,1314,1.671,1353,1.671,1356,1.671,1357,1.391,1358,1.671,1384,1.391,1424,1.511,1425,1.391,1436,1.295,1438,1.391,1499,2.483,1500,1.671,1504,1.671,1515,1.511,1516,1.915,1517,1.915,1518,1.915,1519,6.648,1520,6.787,1521,1.915,1522,1.915,1523,4.007,1524,7.908,1525,7.019,1526,3.497,1527,6.91,1528,3.147,1529,1.671,1530,2.747,1531,1.915,1532,1.915,1533,2.483,1534,3.147,1535,1.671,1536,1.915,1537,1.915,1538,1.915,1539,1.671,1540,1.671,1541,1.671,1542,1.671,1543,4.05,1544,1.671,1545,1.915,1546,1.915]],["title/dependencies.html",[61,2.218,1547,2.961]],["body/dependencies.html",[16,0.013,31,0.945,33,1.452,40,0.324,56,0.01,57,0.01,61,2.235,87,3.34,92,3.134,94,2.544,96,3.34,140,4.31,214,1.916,219,2.235,327,3.587,510,2.235,534,4.31,646,2.804,668,3.896,694,4.31,947,4.31,1104,3.587,1170,3.587,1171,3.587,1423,4.31,1548,4.939,1549,6.993,1550,4.939,1551,4.939,1552,6.334,1553,4.939,1554,4.939,1555,4.939,1556,4.939,1557,4.939,1558,4.939,1559,4.939,1560,4.939,1561,4.939,1562,4.939,1563,4.939,1564,4.939,1565,4.939,1566,4.939,1567,4.939,1568,4.939,1569,4.939,1570,4.939,1571,4.939,1572,4.939]],["title/miscellaneous/enumerations.html",[1573,2.153,1574,4.278]],["body/miscellaneous/enumerations.html",[7,0.402,16,0.013,56,0.009,57,0.009,164,3.47,177,3.517,201,4.632,206,3.517,226,5.125,227,5.125,228,5.125,229,5.125,329,4.34,548,3.47,551,5.125,561,2.266,961,3.195,983,4.632,1012,3.47,1017,4.632,1022,4.632,1035,4.632,1036,4.632,1039,4.632,1041,4.632,1044,4.632,1049,4.632,1050,3.47,1051,3.47,1052,4.632,1062,4.632,1063,4.632,1064,4.632,1065,4.632,1066,4.632,1067,3.47,1068,4.632,1069,4.632,1070,3.47,1071,3.47,1573,2.792,1574,3.839,1575,4.399,1576,6.61,1577,4.399]],["title/miscellaneous/functions.html",[1573,2.153,1578,4.278]],["body/miscellaneous/functions.html",[7,0.57,16,0.011,56,0.011,57,0.011,64,3.737,1533,4.92,1535,5.442,1573,3.958,1578,5.442,1579,5.442,1580,6.236]],["title/index.html",[7,0.31,1581,3.393,1582,3.393]],["body/index.html",[4,0.124,16,0.013,56,0.009,57,0.009,199,4.022,461,3.117,621,3.636,781,3.347,1032,3.347,1515,3.636,1583,4.609,1584,4.609,1585,6.056,1586,4.609,1587,4.609,1588,4.609,1589,4.609,1590,4.609,1591,4.609,1592,6.765,1593,4.609,1594,4.609,1595,4.609,1596,6.765,1597,7.808,1598,4.609,1599,4.609,1600,4.609,1601,7.66,1602,4.609,1603,6.056,1604,4.609,1605,4.609,1606,4.609,1607,4.609,1608,6.056,1609,6.056,1610,4.609,1611,4.609,1612,4.609,1613,6.056,1614,6.056,1615,4.609,1616,4.609,1617,4.609,1618,4.609,1619,4.609,1620,4.609,1621,4.609,1622,4.609,1623,4.609,1624,4.609,1625,4.609,1626,4.609,1627,4.609,1628,4.609,1629,4.022,1630,4.609,1631,4.609,1632,4.609,1633,4.609,1634,4.609,1635,4.609,1636,4.022]],["title/modules.html",[60,2.423]],["body/modules.html",[16,0.01,56,0.01,57,0.01,59,3.835,60,2.296,70,3.571,71,3.163,72,3.571,73,3.571,74,3.571,75,3.352,76,3.571,77,3.571,78,3.571,341,3.352,1030,6.527,1032,6.009,1637,8.274,1638,8.321,1639,5.281,1640,5.281]],["title/overview.html",[1641,4.864]],["body/overview.html",[2,1.297,16,0.013,34,3.622,56,0.007,57,0.007,58,0.862,59,5.967,60,1.453,61,1.513,62,1.646,63,1.646,64,1.513,65,1.646,66,1.646,67,2.917,68,2.917,69,2.917,70,5.05,71,4.388,72,4.495,73,3.86,74,4.495,75,4.539,76,4.688,77,4.495,78,5.196,79,2.388,80,1.646,81,1.646,156,1.577,163,1.898,277,3.622,308,0.756,338,2.917,339,2.917,340,2.917,341,4.539,354,4.539,355,4.539,384,3.826,520,2.917,521,2.917,522,2.917,599,3.622,610,2.917,611,2.917,723,2.637,758,2.637,831,3.622,863,2.917,864,2.917,931,2.917,932,2.917,933,2.917,934,4.837,1099,2.917,1100,2.917,1101,2.917,1173,4.539,1184,2.917,1185,2.917,1186,2.917,1245,3.622,1260,2.917,1261,2.917,1425,4.145,1505,2.917,1507,2.917,1641,2.917,1642,3.343,1643,3.343,1644,3.343,1645,3.343,1646,3.343]],["title/properties.html",[165,0.907,1547,2.961]],["body/properties.html",[16,0.012,56,0.011,57,0.011,165,1.164,781,4.568,1629,5.49,1636,5.49,1647,6.29,1648,6.29,1649,6.29]],["title/miscellaneous/variables.html",[1573,2.153,1650,4.278]],["body/miscellaneous/variables.html",[7,0.235,13,1.634,14,2.151,16,0.013,21,0.641,22,0.779,36,2.052,37,3.142,43,2.185,47,1.46,48,2.052,49,1.266,56,0.006,57,0.006,58,1.027,110,3.142,111,4.254,152,2.244,165,0.902,193,3.965,230,1.802,231,1.389,275,2.528,329,3.781,378,1.891,382,2.528,389,1.802,433,1.54,477,1.325,517,2.528,539,1.54,542,2.244,550,3.059,568,1.867,638,1.54,725,2.151,731,2.693,738,1.632,748,2.693,862,1.739,1015,2.893,1028,1.867,1090,3.142,1104,1.867,1244,3.142,1424,3.142,1495,3.476,1526,2.244,1529,2.244,1530,2.244,1533,2.028,1539,2.244,1540,3.476,1541,2.244,1542,3.476,1543,2.244,1544,3.476,1573,1.632,1579,2.244,1650,2.244,1651,5.489,1652,2.571,1653,4.875,1654,2.571,1655,4.875,1656,6.552,1657,5.489,1658,4.875,1659,4.875,1660,3.983,1661,2.571,1662,2.571,1663,2.571,1664,3.983,1665,2.571,1666,2.571,1667,3.983,1668,5.489,1669,4.875,1670,2.571,1671,4.875,1672,3.983,1673,2.571,1674,3.983,1675,2.571,1676,2.571,1677,2.571,1678,2.571,1679,2.571,1680,2.571,1681,2.571,1682,2.571,1683,2.571,1684,2.571,1685,2.571,1686,2.571,1687,2.571,1688,2.571,1689,2.571,1690,2.571,1691,2.571,1692,2.571,1693,2.571,1694,2.571,1695,2.571,1696,2.571,1697,2.571,1698,2.571,1699,2.571,1700,2.571,1701,2.571,1702,2.571,1703,3.983]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListDto.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmitSSEData.html":{},"classes/ErrorReportDto.html":{},"entities/ErrorReportEntity.html":{},"controllers/FeReportController.html":{},"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/FreezeUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"modules/MinioModule.html":{},"injectables/MinioService.html":{},"classes/PerformanceDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenVo.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookignCountDto.html":{},"classes/UserBookignCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":984,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1648,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1570,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1560,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":1572,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1559,"title":{},"body":{"dependencies.html":{}}}],["0.9",{"_index":686,"title":{},"body":{"controllers/HealthController.html":{}}}],["0/1",{"_index":1524,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1536,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1520,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1538,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1525,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1519,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1528,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1521,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1523,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1522,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":382,"title":{},"body":{"injectables/BookingService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"injectables/MeetingRoomService.html":{},"interfaces/Request.html":{},"miscellaneous/variables.html":{}}}],["1.4.5",{"_index":1563,"title":{},"body":{"dependencies.html":{}}}],["1.6.3",{"_index":1558,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"injectables/BookingService.html":{},"entities/MeetingRoom.html":{},"injectables/MeetingRoomService.html":{},"controllers/UserController.html":{}}}],["10.0.0",{"_index":1549,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":1556,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1552,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":191,"title":{},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/Permission.html":{}}}],["1000",{"_index":395,"title":{},"body":{"injectables/BookingService.html":{},"entities/User.html":{}}}],["1024",{"_index":689,"title":{},"body":{"controllers/HealthController.html":{},"controllers/UserController.html":{}}}],["11",{"_index":1642,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1645,"title":{},"body":{"overview.html":{}}}],["150",{"_index":688,"title":{},"body":{"controllers/HealthController.html":{}}}],["2",{"_index":384,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{},"overview.html":{}}}],["2.0.3",{"_index":1551,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":202,"title":{},"body":{"entities/Booking.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["3.0.1",{"_index":1548,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":1550,"title":{},"body":{"dependencies.html":{}}}],["3.6.5",{"_index":1565,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":481,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{}}}],["3000",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30m",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":1646,"title":{},"body":{"overview.html":{}}}],["3min",{"_index":1222,"title":{},"body":{"injectables/SseService.html":{}}}],["4.6.12",{"_index":1567,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":1532,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":887,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["50",{"_index":790,"title":{},"body":{"entities/MeetingRoom.html":{},"entities/User.html":{}}}],["50})@isnotempty({message",{"_index":1318,"title":{},"body":{"entities/User.html":{}}}],["587",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1352,"title":{},"body":{"entities/User.html":{}}}],["6'})@isstring",{"_index":1339,"title":{},"body":{"entities/User.html":{}}}],["6.9.7",{"_index":1566,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":396,"title":{},"body":{"injectables/BookingService.html":{}}}],["7",{"_index":1644,"title":{},"body":{"overview.html":{}}}],["7.1.17",{"_index":1555,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":1561,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1571,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1643,"title":{},"body":{"overview.html":{}}}],["80",{"_index":1531,"title":{},"body":{"coverage.html":{}}}],["aaa",{"_index":55,"title":{},"body":{"controllers/AppController.html":{}}}],["aaaa",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["aaaa(@userinfo('username",{"_index":52,"title":{},"body":{"controllers/AppController.html":{}}}],["aaaa(username",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["accesskey",{"_index":953,"title":{},"body":{"injectables/MinioService.html":{}}}],["accesstoken",{"_index":772,"title":{},"body":{"classes/LoginUserVo.html":{},"classes/UserInfo.html":{}}}],["acronym",{"_index":1020,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["action",{"_index":549,"title":{},"body":{"classes/EmitSSEData.html":{}}}],["add",{"_index":238,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["add(booking",{"_index":244,"title":{},"body":{"controllers/BookingController.html":{}}}],["add(bookingdto",{"_index":357,"title":{},"body":{"injectables/BookingService.html":{}}}],["addclient",{"_index":1193,"title":{},"body":{"injectables/SseService.html":{}}}],["addclient(clientid",{"_index":1199,"title":{},"body":{"injectables/SseService.html":{}}}],["addgroupby('b.roomid",{"_index":1293,"title":{},"body":{"injectables/StatisticService.html":{}}}],["addgroupby('b.user",{"_index":1285,"title":{},"body":{"injectables/StatisticService.html":{}}}],["address",{"_index":546,"title":{},"body":{"injectables/EmailService.html":{},"classes/RegisterCaptchaDto.html":{},"controllers/SseController.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"controllers/UserController.html":{}}}],["addselect('count(1",{"_index":1280,"title":{},"body":{"injectables/StatisticService.html":{}}}],["addselect('m.name",{"_index":1288,"title":{},"body":{"injectables/StatisticService.html":{}}}],["addselect('u.username",{"_index":1275,"title":{},"body":{"injectables/StatisticService.html":{}}}],["admin",{"_index":466,"title":{},"body":{"injectables/BookingService.html":{},"entities/User.html":{}}}],["admin.email",{"_index":470,"title":{},"body":{"injectables/BookingService.html":{}}}],["admin/update",{"_index":1467,"title":{},"body":{"controllers/UserController.html":{}}}],["admin/update'])@httpcode(httpstatus.ok)@apiunifiedokresponse",{"_index":1396,"title":{},"body":{"controllers/UserController.html":{}}}],["admin/update_password",{"_index":1461,"title":{},"body":{"controllers/UserController.html":{}}}],["admin/update_password'])@httpcode(httpstatus.ok)@apiunifiedokresponse",{"_index":1403,"title":{},"body":{"controllers/UserController.html":{}}}],["adminlogin",{"_index":1359,"title":{},"body":{"controllers/UserController.html":{}}}],["adminlogin(@body",{"_index":1451,"title":{},"body":{"controllers/UserController.html":{}}}],["adminlogin(loginuser",{"_index":1366,"title":{},"body":{"controllers/UserController.html":{}}}],["adminrefresh",{"_index":1360,"title":{},"body":{"controllers/UserController.html":{}}}],["adminrefresh(undefined",{"_index":1370,"title":{},"body":{"controllers/UserController.html":{}}}],["again",{"_index":756,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["agent",{"_index":706,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["allow",{"_index":457,"title":{},"body":{"injectables/BookingService.html":{}}}],["always",{"_index":973,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["amazing",{"_index":1620,"title":{},"body":{"index.html":{}}}],["analytics",{"_index":994,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["api",{"_index":1028,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["api_prefix",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_version",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":272,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["apibearerauth()@requirelogin()@get('freeze')@apiunifiedokresponse",{"_index":1378,"title":{},"body":{"controllers/UserController.html":{}}}],["apibearerauth()@requirelogin()@get('info')@apiunifiedokresponse(userdetailvo",{"_index":1381,"title":{},"body":{"controllers/UserController.html":{}}}],["apibearerauth()@requirelogin()@get('list')@apiunifiedokresponse(userlistvo",{"_index":1385,"title":{},"body":{"controllers/UserController.html":{}}}],["apibearerauth()@requirelogin()@get('update/captcha')@apiunifiedokresponse",{"_index":1399,"title":{},"body":{"controllers/UserController.html":{}}}],["apibearerauth()@requirelogin()@post('upload')@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":1411,"title":{},"body":{"controllers/UserController.html":{}}}],["apibearerauth()@requirelogin()@post(['update",{"_index":1395,"title":{},"body":{"controllers/UserController.html":{}}}],["apibody",{"_index":1420,"title":{},"body":{"controllers/UserController.html":{}}}],["apiconsumes",{"_index":1421,"title":{},"body":{"controllers/UserController.html":{}}}],["apiconsumes('multipart/form",{"_index":1494,"title":{},"body":{"controllers/UserController.html":{}}}],["apicreatedresponse(getapiresponseoptions(model",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiexcludecontroller",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{}}}],["apiextramodels(model",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiokresponse(getapiresponseoptions(model",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":224,"title":{},"body":{"entities/Booking.html":{}}}],["apiresponseoptions",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apitags",{"_index":273,"title":{},"body":{"controllers/BookingController.html":{},"controllers/FeReportController.html":{},"controllers/HealthController.html":{},"controllers/MeetingRoomController.html":{},"controllers/SseController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["apitags('booking",{"_index":286,"title":{},"body":{"controllers/BookingController.html":{}}}],["apitags('fe",{"_index":602,"title":{},"body":{"controllers/FeReportController.html":{}}}],["apitags('health",{"_index":669,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags('meeting",{"_index":838,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["apitags('sse",{"_index":1175,"title":{},"body":{"controllers/SseController.html":{}}}],["apitags('statistic",{"_index":1252,"title":{},"body":{"controllers/StatisticController.html":{}}}],["apitags('user",{"_index":1439,"title":{},"body":{"controllers/UserController.html":{}}}],["apiunifiedarrayokresponse",{"_index":1244,"title":{},"body":{"controllers/StatisticController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiunifiedarrayokresponse(meetingroomusedcountvo",{"_index":1258,"title":{},"body":{"controllers/StatisticController.html":{}}}],["apiunifiedarrayokresponse(userbookigncountvo",{"_index":1255,"title":{},"body":{"controllers/StatisticController.html":{}}}],["apiunifiedcreatedresponse",{"_index":1424,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiunifiedokresponse",{"_index":275,"title":{},"body":{"controllers/BookingController.html":{},"controllers/FeReportController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiunifiedokresponse(bookinglistvo",{"_index":293,"title":{},"body":{"controllers/BookingController.html":{}}}],["apiunifiedokresponse(loginuservo",{"_index":1447,"title":{},"body":{"controllers/UserController.html":{}}}],["apiunifiedokresponse(meetingroom",{"_index":843,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["apiunifiedokresponse(meetingroomlistvo",{"_index":840,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["apiunifiedokresponse(refreshtokenvo",{"_index":1453,"title":{},"body":{"controllers/UserController.html":{}}}],["apiunifiedokresponse(userdetailvo",{"_index":1458,"title":{},"body":{"controllers/UserController.html":{}}}],["apiunifiedokresponse(userlistvo",{"_index":1475,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":1599,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":474,"title":{},"body":{"injectables/BookingService.html":{}}}],["applications",{"_index":1591,"title":{},"body":{"index.html":{}}}],["apply",{"_index":239,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["apply(@param('id",{"_index":297,"title":{},"body":{"controllers/BookingController.html":{}}}],["apply(id",{"_index":250,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["applydecorators",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applydecorators(apicreatedresponse(getapiresponseoptions(model",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applydecorators(apiokresponse(getapiresponseoptions(model",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":59,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approval",{"_index":479,"title":{},"body":{"injectables/BookingService.html":{}}}],["approved",{"_index":227,"title":{},"body":{"entities/Booking.html":{},"miscellaneous/enumerations.html":{}}}],["appservice",{"_index":34,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":505,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["array",{"_index":862,"title":{},"body":{"classes/MeetingRoomListVo.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"classes/UserListVo.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":348,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/MeetingRoomService.html":{},"injectables/MinioService.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/StatisticService.html":{}}}],["auth",{"_index":540,"title":{},"body":{"injectables/EmailService.html":{}}}],["author",{"_index":1629,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":742,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["authorization.split",{"_index":746,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["authplugin",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["autoloadentities",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":1640,"title":{},"body":{"modules.html":{}}}],["await",{"_index":380,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/MeetingRoomService.html":{},"injectables/MinioService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/StatisticService.html":{}}}],["axios",{"_index":1557,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":1273,"title":{},"body":{"injectables/StatisticService.html":{}}}],["b.roomid",{"_index":1291,"title":{},"body":{"injectables/StatisticService.html":{}}}],["b.userid",{"_index":1278,"title":{},"body":{"injectables/StatisticService.html":{}}}],["back",{"_index":1035,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["back/forward",{"_index":1011,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["backers",{"_index":1621,"title":{},"body":{"index.html":{}}}],["backforward",{"_index":1070,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["backforwardcache",{"_index":1071,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["badrequestexception",{"_index":368,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{},"controllers/UserController.html":{}}}],["badrequestexception('allow",{"_index":1491,"title":{},"body":{"controllers/UserController.html":{}}}],["badrequestexception('meeting",{"_index":434,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{}}}],["badrequestexception('this",{"_index":447,"title":{},"body":{"injectables/BookingService.html":{}}}],["badrequestexception(name",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":981,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["bbb",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["between",{"_index":370,"title":{},"body":{"injectables/BookingService.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"injectables/StatisticService.html":{}}}],["bfcache",{"_index":1038,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["binary",{"_index":1496,"title":{},"body":{"controllers/UserController.html":{}}}],["body",{"_index":267,"title":{},"body":{"controllers/BookingController.html":{},"controllers/FeReportController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["booked",{"_index":449,"title":{},"body":{"injectables/BookingService.html":{},"entities/MeetingRoom.html":{}}}],["booking",{"_index":162,"title":{"entities/Booking.html":{}},"body":{"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"injectables/EmailService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UserBookignCountDto.html":{},"classes/UserBookignCountVo.html":{},"coverage.html":{}}}],["booking.controller",{"_index":345,"title":{},"body":{"modules/BookingModule.html":{}}}],["booking.dto",{"_index":280,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["booking.dto.ts",{"_index":483,"title":{},"body":{"classes/CreateBookingDto.html":{},"coverage.html":{}}}],["booking.dto.ts:14",{"_index":489,"title":{},"body":{"classes/CreateBookingDto.html":{}}}],["booking.endtime",{"_index":440,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking.room",{"_index":436,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking.service",{"_index":278,"title":{},"body":{"controllers/BookingController.html":{},"modules/BookingModule.html":{}}}],["booking.starttime",{"_index":438,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking.user",{"_index":437,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking/booking.module",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["booking1",{"_index":388,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking1.endtime",{"_index":393,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking1.room",{"_index":390,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking1.starttime",{"_index":392,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking1.user",{"_index":391,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking2",{"_index":398,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking2.endtime",{"_index":402,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking2.room",{"_index":399,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking2.starttime",{"_index":401,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking2.user",{"_index":400,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking3",{"_index":403,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking3.endtime",{"_index":407,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking3.room",{"_index":404,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking3.starttime",{"_index":406,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking3.user",{"_index":405,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking4",{"_index":408,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking4.endtime",{"_index":412,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking4.room",{"_index":409,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking4.starttime",{"_index":411,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking4.user",{"_index":410,"title":{},"body":{"injectables/BookingService.html":{}}}],["bookingcontroller",{"_index":235,"title":{"controllers/BookingController.html":{}},"body":{"controllers/BookingController.html":{},"modules/BookingModule.html":{},"coverage.html":{}}}],["bookingcount",{"_index":1281,"title":{},"body":{"injectables/StatisticService.html":{},"classes/UserBookignCountVo.html":{}}}],["bookingdto",{"_index":359,"title":{},"body":{"injectables/BookingService.html":{}}}],["bookingdto.meetingroomid",{"_index":432,"title":{},"body":{"injectables/BookingService.html":{}}}],["bookinglistdto",{"_index":254,"title":{"classes/BookingListDto.html":{}},"body":{"controllers/BookingController.html":{},"classes/BookingListDto.html":{},"injectables/BookingService.html":{},"coverage.html":{}}}],["bookinglistvo",{"_index":283,"title":{"classes/BookingListVo.html":{}},"body":{"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"coverage.html":{}}}],["bookingmodule",{"_index":70,"title":{"modules/BookingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules.html":{},"overview.html":{}}}],["bookings",{"_index":333,"title":{},"body":{"classes/BookingListVo.html":{},"injectables/BookingService.html":{}}}],["bookings.map((item",{"_index":428,"title":{},"body":{"injectables/BookingService.html":{}}}],["bookingservice",{"_index":277,"title":{"injectables/BookingService.html":{}},"body":{"controllers/BookingController.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"coverage.html":{},"overview.html":{}}}],["bookingstatus",{"_index":201,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"miscellaneous/enumerations.html":{}}}],["bookingstatus.approved",{"_index":451,"title":{},"body":{"injectables/BookingService.html":{}}}],["bookingstatus.progressing",{"_index":233,"title":{},"body":{"entities/Booking.html":{}}}],["bookingstatus.rejected",{"_index":453,"title":{},"body":{"injectables/BookingService.html":{}}}],["bookingstatus.released",{"_index":454,"title":{},"body":{"injectables/BookingService.html":{}}}],["bookingtimerangeend",{"_index":311,"title":{},"body":{"classes/BookingListDto.html":{},"injectables/BookingService.html":{}}}],["bookingtimerangestart",{"_index":312,"title":{},"body":{"classes/BookingListDto.html":{},"injectables/BookingService.html":{}}}],["boolean",{"_index":738,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"entities/MeetingRoom.html":{},"interfaces/Request.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/FeReportModule.html":{},"modules/MeetingRoomModule.html":{},"modules/MinioModule.html":{},"modules/RedisModule.html":{},"modules/SseModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1638,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1030,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"modules.html":{}}}],["bucketname",{"_index":945,"title":{},"body":{"injectables/MinioService.html":{}}}],["buffer",{"_index":943,"title":{},"body":{"injectables/MinioService.html":{}}}],["building",{"_index":1586,"title":{},"body":{"index.html":{}}}],["c",{"_index":684,"title":{},"body":{"controllers/HealthController.html":{}}}],["cache",{"_index":1012,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["calculate",{"_index":1003,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["calculation",{"_index":979,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["callback",{"_index":1482,"title":{},"body":{"controllers/UserController.html":{}}}],["callback(new",{"_index":1490,"title":{},"body":{"controllers/UserController.html":{}}}],["callback(null",{"_index":1489,"title":{},"body":{"controllers/UserController.html":{}}}],["callhandler",{"_index":640,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["canactivate",{"_index":727,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["canactivate(context",{"_index":761,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{}}}],["capacity",{"_index":780,"title":{},"body":{"entities/MeetingRoom.html":{},"classes/MeetingRoomListDto.html":{},"injectables/MeetingRoomService.html":{}}}],["capacity'})@isnumber()@isnotempty({message",{"_index":784,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["captcha",{"_index":1146,"title":{},"body":{"classes/RegisterUserDto.html":{},"controllers/UserController.html":{}}}],["captcha')@apiunifiedokresponse",{"_index":1375,"title":{},"body":{"controllers/UserController.html":{}}}],["captcha(@query",{"_index":1444,"title":{},"body":{"controllers/UserController.html":{}}}],["captcha(undefined",{"_index":1373,"title":{},"body":{"controllers/UserController.html":{}}}],["captcha.dto",{"_index":1311,"title":{},"body":{"classes/UpdateUserPasswordCaptchaDto.html":{},"controllers/UserController.html":{}}}],["captcha.dto.ts",{"_index":1140,"title":{},"body":{"classes/RegisterCaptchaDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"coverage.html":{}}}],["captcha.dto.ts:13",{"_index":1142,"title":{},"body":{"classes/RegisterCaptchaDto.html":{}}}],["case",{"_index":1013,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["catch",{"_index":502,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["catch(exception",{"_index":503,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["catch(httpexception",{"_index":511,"title":{},"body":{"classes/CustomExceptionFilter.html":{}}}],["catch(unloginexception",{"_index":1298,"title":{},"body":{"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["check",{"_index":659,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":40,"title":{"classes/BookingListDto.html":{},"classes/BookingListVo.html":{},"classes/CreateBookingDto.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"classes/EmitSSEData.html":{},"classes/ErrorReportDto.html":{},"classes/FreezeUserDto.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/PerformanceDto.html":{},"classes/PerformanceEntry.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenVo.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserBookignCountDto.html":{},"classes/UserBookignCountVo.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListDto.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmitSSEData.html":{},"classes/ErrorReportDto.html":{},"entities/ErrorReportEntity.html":{},"controllers/FeReportController.html":{},"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/FreezeUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"modules/MinioModule.html":{},"injectables/MinioService.html":{},"classes/PerformanceDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenVo.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookignCountDto.html":{},"classes/UserBookignCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":308,"title":{},"body":{"classes/BookingListDto.html":{},"classes/BookingListVo.html":{},"classes/CreateBookingDto.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"classes/EmitSSEData.html":{},"classes/ErrorReportDto.html":{},"classes/FreezeUserDto.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/PerformanceDto.html":{},"classes/PerformanceEntry.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenVo.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserBookignCountDto.html":{},"classes/UserBookignCountVo.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{},"overview.html":{}}}],["client",{"_index":946,"title":{},"body":{"injectables/MinioService.html":{},"modules/RedisModule.html":{},"injectables/SseService.html":{}}}],["client.connect",{"_index":1111,"title":{},"body":{"modules/RedisModule.html":{}}}],["client.write(`data",{"_index":1216,"title":{},"body":{"injectables/SseService.html":{}}}],["clientid",{"_index":1201,"title":{},"body":{"injectables/SseService.html":{}}}],["clients",{"_index":1192,"title":{},"body":{"injectables/SseService.html":{}}}],["close",{"_index":1214,"title":{},"body":{"injectables/SseService.html":{}}}],["cls",{"_index":983,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["cluster_appmodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_bookingmodule",{"_index":338,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_bookingmodule_imports",{"_index":339,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_bookingmodule_providers",{"_index":340,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_emailmodule",{"_index":520,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_exports",{"_index":522,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_providers",{"_index":521,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_fereportmodule",{"_index":610,"title":{},"body":{"modules/FeReportModule.html":{},"overview.html":{}}}],["cluster_fereportmodule_providers",{"_index":611,"title":{},"body":{"modules/FeReportModule.html":{},"overview.html":{}}}],["cluster_meetingroommodule",{"_index":863,"title":{},"body":{"modules/MeetingRoomModule.html":{},"overview.html":{}}}],["cluster_meetingroommodule_providers",{"_index":864,"title":{},"body":{"modules/MeetingRoomModule.html":{},"overview.html":{}}}],["cluster_miniomodule",{"_index":931,"title":{},"body":{"modules/MinioModule.html":{},"overview.html":{}}}],["cluster_miniomodule_exports",{"_index":932,"title":{},"body":{"modules/MinioModule.html":{},"overview.html":{}}}],["cluster_miniomodule_providers",{"_index":933,"title":{},"body":{"modules/MinioModule.html":{},"overview.html":{}}}],["cluster_redismodule",{"_index":1099,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_redismodule_exports",{"_index":1101,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_redismodule_providers",{"_index":1100,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_ssemodule",{"_index":1184,"title":{},"body":{"modules/SseModule.html":{},"overview.html":{}}}],["cluster_ssemodule_exports",{"_index":1185,"title":{},"body":{"modules/SseModule.html":{},"overview.html":{}}}],["cluster_ssemodule_providers",{"_index":1186,"title":{},"body":{"modules/SseModule.html":{},"overview.html":{}}}],["cluster_statisticmodule",{"_index":1260,"title":{},"body":{"modules/StatisticModule.html":{},"overview.html":{}}}],["cluster_statisticmodule_providers",{"_index":1261,"title":{},"body":{"modules/StatisticModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1505,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1506,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1507,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":517,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"injectables/FormatResponseInterceptor.html":{},"entities/Permission.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":215,"title":{},"body":{"entities/Booking.html":{},"entities/ErrorReportEntity.html":{},"entities/MeetingRoom.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["column()@isnumber()@isnotempty",{"_index":967,"title":{},"body":{"entities/PerformanceEntity.html":{}}}],["column()@isstring()@isnotempty",{"_index":988,"title":{},"body":{"entities/PerformanceEntity.html":{}}}],["column({comment",{"_index":180,"title":{},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/User.html":{}}}],["column({length",{"_index":190,"title":{},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["column({name",{"_index":1330,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":570,"title":{},"body":{"entities/ErrorReportEntity.html":{},"entities/PerformanceEntity.html":{}}}],["comment",{"_index":192,"title":{},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["common",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["condition",{"_index":414,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{}}}],["condition.capacity",{"_index":900,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["condition.equipment",{"_index":898,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["condition.name",{"_index":896,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["condition.room",{"_index":418,"title":{},"body":{"injectables/BookingService.html":{}}}],["condition.room.location",{"_index":420,"title":{},"body":{"injectables/BookingService.html":{}}}],["condition.starttime",{"_index":422,"title":{},"body":{"injectables/BookingService.html":{}}}],["condition.user",{"_index":416,"title":{},"body":{"injectables/BookingService.html":{}}}],["config",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"injectables/MinioService.html":{},"modules/RedisModule.html":{}}}],["configservice.get",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('jwt_secret",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_database",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_host",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_password",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_port",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_username",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('redis_db",{"_index":1110,"title":{},"body":{"modules/RedisModule.html":{}}}],["configservice.get('redis_host",{"_index":1108,"title":{},"body":{"modules/RedisModule.html":{}}}],["configservice.get('redis_port",{"_index":1109,"title":{},"body":{"modules/RedisModule.html":{}}}],["connectorpackage",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(userinfo",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(username",{"_index":53,"title":{},"body":{"controllers/AppController.html":{}}}],["const",{"_index":378,"title":{},"body":{"injectables/BookingService.html":{},"classes/CustomExceptionFilter.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"injectables/MeetingRoomService.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"interfaces/Request.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":351,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/FeReportService.html":{},"controllers/HealthController.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"injectables/MeetingRoomService.html":{},"injectables/MinioService.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{}}}],["constructor(configservice",{"_index":529,"title":{},"body":{"injectables/EmailService.html":{},"injectables/MinioService.html":{}}}],["constructor(entitymanager",{"_index":352,"title":{},"body":{"injectables/BookingService.html":{},"injectables/StatisticService.html":{}}}],["constructor(errorreportrepository",{"_index":620,"title":{},"body":{"injectables/FeReportService.html":{}}}],["constructor(eventemitter",{"_index":1197,"title":{},"body":{"injectables/SseService.html":{}}}],["constructor(message",{"_index":1295,"title":{},"body":{"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["constructor(private",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"controllers/BookingController.html":{},"injectables/EmailService.html":{},"controllers/FeReportController.html":{},"controllers/MeetingRoomController.html":{},"injectables/MinioService.html":{},"guards/PermissionGuard.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["constructor(reflector",{"_index":759,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{}}}],["constructor(repository",{"_index":870,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["context",{"_index":642,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["context.getclass",{"_index":740,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["context.getclass().name",{"_index":710,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["context.gethandler",{"_index":741,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["context.gethandler().name",{"_index":711,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":703,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["context.switchtohttp().getresponse",{"_index":647,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/BookingController.html":{},"controllers/FeReportController.html":{},"controllers/HealthController.html":{},"controllers/MeetingRoomController.html":{},"controllers/SseController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BookingController.html":{},"controllers/FeReportController.html":{},"controllers/HealthController.html":{},"controllers/MeetingRoomController.html":{},"controllers/SseController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('booking",{"_index":287,"title":{},"body":{"controllers/BookingController.html":{}}}],["controller('fe",{"_index":603,"title":{},"body":{"controllers/FeReportController.html":{}}}],["controller('health",{"_index":670,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('meeting",{"_index":839,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["controller('sse",{"_index":1176,"title":{},"body":{"controllers/SseController.html":{}}}],["controller('statistic",{"_index":1253,"title":{},"body":{"controllers/StatisticController.html":{}}}],["controller('user",{"_index":1440,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BookingController.html":{},"modules/BookingModule.html":{},"controllers/FeReportController.html":{},"modules/FeReportModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/MeetingRoomController.html":{},"modules/MeetingRoomModule.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["count.dto",{"_index":1248,"title":{},"body":{"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UserBookignCountDto.html":{}}}],["count.dto.ts",{"_index":920,"title":{},"body":{"classes/MeetingRoomUsedCountDto.html":{},"classes/UserBookignCountDto.html":{},"coverage.html":{}}}],["count.dto.ts:10",{"_index":922,"title":{},"body":{"classes/MeetingRoomUsedCountDto.html":{}}}],["count.dto.ts:6",{"_index":923,"title":{},"body":{"classes/MeetingRoomUsedCountDto.html":{}}}],["count.vo",{"_index":1251,"title":{},"body":{"controllers/StatisticController.html":{}}}],["count.vo.ts",{"_index":926,"title":{},"body":{"classes/MeetingRoomUsedCountVo.html":{},"classes/UserBookignCountVo.html":{},"coverage.html":{}}}],["count.vo.ts:2",{"_index":928,"title":{},"body":{"classes/MeetingRoomUsedCountVo.html":{},"classes/UserBookignCountVo.html":{}}}],["count.vo.ts:4",{"_index":929,"title":{},"body":{"classes/MeetingRoomUsedCountVo.html":{},"classes/UserBookignCountVo.html":{}}}],["count.vo.ts:6",{"_index":930,"title":{},"body":{"classes/MeetingRoomUsedCountVo.html":{},"classes/UserBookignCountVo.html":{}}}],["coverage",{"_index":1515,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":177,"title":{},"body":{"entities/Booking.html":{},"classes/EmitSSEData.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"classes/UpdateMeetingRoomDto.html":{},"miscellaneous/enumerations.html":{}}}],["create(@body",{"_index":844,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["create(meetingroomdto",{"_index":812,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{}}}],["create_time",{"_index":564,"title":{},"body":{"classes/ErrorReportDto.html":{},"entities/ErrorReportEntity.html":{},"classes/PerformanceDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["createbookingdto",{"_index":245,"title":{"classes/CreateBookingDto.html":{}},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"coverage.html":{}}}],["createclient",{"_index":1103,"title":{},"body":{"modules/RedisModule.html":{}}}],["created",{"_index":1016,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["createdatecolumn",{"_index":216,"title":{},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/User.html":{}}}],["createdatecolumn({comment",{"_index":176,"title":{},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{}}}],["createmeetingroomdto",{"_index":491,"title":{"classes/CreateMeetingRoomDto.html":{}},"body":{"classes/CreateMeetingRoomDto.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"classes/UpdateMeetingRoomDto.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder(booking",{"_index":1272,"title":{},"body":{"injectables/StatisticService.html":{}}}],["createtime",{"_index":166,"title":{},"body":{"entities/Booking.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"entities/User.html":{},"classes/UserInfo.html":{}}}],["createtransport",{"_index":533,"title":{},"body":{"injectables/EmailService.html":{}}}],["crypto.createhash('md5",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curpermission",{"_index":1094,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["current",{"_index":969,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["current_timestamp",{"_index":572,"title":{},"body":{"entities/ErrorReportEntity.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["customexceptionfilter",{"_index":112,"title":{"classes/CustomExceptionFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/CustomExceptionFilter.html":{},"coverage.html":{}}}],["data",{"_index":550,"title":{},"body":{"classes/EmitSSEData.html":{},"injectables/FormatResponseInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"injectables/MinioService.html":{},"interfaces/Request.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["data')@apibody({schema",{"_index":1412,"title":{},"body":{"controllers/UserController.html":{}}}],["data.email",{"_index":751,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["data.permissions",{"_index":753,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["data.roles",{"_index":752,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["data.userid",{"_index":749,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["data.username",{"_index":750,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["database",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{}}}],["date",{"_index":175,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"entities/ErrorReportEntity.html":{},"entities/MeetingRoom.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/User.html":{}}}],["date(+bookingtimerangestart",{"_index":423,"title":{},"body":{"injectables/BookingService.html":{}}}],["date(bookingdto.endtime",{"_index":441,"title":{},"body":{"injectables/BookingService.html":{}}}],["date(bookingdto.starttime",{"_index":439,"title":{},"body":{"injectables/BookingService.html":{}}}],["date(date.now",{"_index":394,"title":{},"body":{"injectables/BookingService.html":{}}}],["date.now",{"_index":716,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["db",{"_index":672,"title":{},"body":{"controllers/HealthController.html":{}}}],["ddd",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["declarations",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/FeReportModule.html":{},"modules/MeetingRoomModule.html":{},"modules/MinioModule.html":{},"modules/RedisModule.html":{},"modules/SseModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["declare",{"_index":736,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListDto.html":{},"classes/CreateBookingDto.html":{},"classes/EmitSSEData.html":{},"entities/ErrorReportEntity.html":{},"controllers/FeReportController.html":{},"classes/FreezeUserDto.html":{},"controllers/HealthController.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomUsedCountDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"injectables/RedisService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"entities/Role.html":{},"controllers/SseController.html":{},"controllers/StatisticController.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"entities/User.html":{},"classes/UserBookignCountDto.html":{},"controllers/UserController.html":{},"classes/UserListDto.html":{}}}],["dedupe",{"_index":996,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["default",{"_index":193,"title":{},"body":{"entities/Booking.html":{},"entities/ErrorReportEntity.html":{},"injectables/InvokeRecordInterceptor.html":{},"entities/MeetingRoom.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"injectables/SseService.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListDto.html":{},"classes/BookingListVo.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/CustomExceptionFilter.html":{},"injectables/EmailService.html":{},"classes/EmitSSEData.html":{},"entities/ErrorReportEntity.html":{},"controllers/FeReportController.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/FreezeUserDto.html":{},"controllers/HealthController.html":{},"injectables/InvokeRecordInterceptor.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"injectables/MinioService.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"entities/Role.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"entities/User.html":{},"classes/UserBookignCountDto.html":{},"classes/UserBookignCountVo.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{}}}],["delete",{"_index":429,"title":{},"body":{"injectables/BookingService.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{}}}],["delete(':id",{"_index":852,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["delete(':id')@apiunifiedokresponse",{"_index":817,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["delete(@param('id",{"_index":853,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["delete(id",{"_index":816,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{}}}],["delta",{"_index":962,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["deltas",{"_index":1001,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["dependencies",{"_index":61,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/FeReportModule.html":{},"modules/MeetingRoomModule.html":{},"modules/MinioModule.html":{},"modules/RedisModule.html":{},"modules/SseModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":781,"title":{},"body":{"entities/MeetingRoom.html":{},"entities/Permission.html":{},"index.html":{},"properties.html":{}}}],["detection",{"_index":1220,"title":{},"body":{"injectables/SseService.html":{}}}],["development",{"_index":1600,"title":{},"body":{"index.html":{}}}],["different",{"_index":1006,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["differentiate",{"_index":1005,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["discarded",{"_index":1042,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["disk",{"_index":673,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":666,"title":{},"body":{"controllers/HealthController.html":{}}}],["docs",{"_index":677,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":1516,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1031,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["dto/booking",{"_index":281,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["dto/create",{"_index":279,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{}}}],["dto/error.dto",{"_index":598,"title":{},"body":{"controllers/FeReportController.html":{},"injectables/FeReportService.html":{}}}],["dto/freeze",{"_index":1432,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/login",{"_index":1428,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/meeting",{"_index":833,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{}}}],["dto/performance.dto",{"_index":597,"title":{},"body":{"controllers/FeReportController.html":{},"injectables/FeReportService.html":{}}}],["dto/refresh",{"_index":1429,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/register",{"_index":1427,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/sse.dto",{"_index":1209,"title":{},"body":{"injectables/SseService.html":{}}}],["dto/update",{"_index":837,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"controllers/UserController.html":{}}}],["dto/user",{"_index":1247,"title":{},"body":{"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"controllers/UserController.html":{}}}],["duration",{"_index":1057,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["e",{"_index":754,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["e.g",{"_index":982,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["e2e",{"_index":1610,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1587,"title":{},"body":{"index.html":{}}}],["email",{"_index":464,"title":{},"body":{"injectables/BookingService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"entities/User.html":{},"classes/UserListDto.html":{}}}],["email.service",{"_index":524,"title":{},"body":{"modules/EmailModule.html":{}}}],["email/email.module",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["emailmodule",{"_index":71,"title":{"modules/EmailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["emailservice",{"_index":355,"title":{"injectables/EmailService.html":{}},"body":{"injectables/BookingService.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"coverage.html":{},"overview.html":{}}}],["emit",{"_index":1194,"title":{},"body":{"injectables/SseService.html":{}}}],["emit(data",{"_index":1202,"title":{},"body":{"injectables/SseService.html":{}}}],["emitssedata",{"_index":547,"title":{"classes/EmitSSEData.html":{}},"body":{"classes/EmitSSEData.html":{},"injectables/SseService.html":{},"coverage.html":{}}}],["emitter",{"_index":1171,"title":{},"body":{"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"dependencies.html":{}}}],["empty",{"_index":980,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["end",{"_index":181,"title":{},"body":{"entities/Booking.html":{},"classes/CustomExceptionFilter.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["endpoint",{"_index":949,"title":{},"body":{"injectables/MinioService.html":{}}}],["endtime",{"_index":167,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/MeetingRoomUsedCountDto.html":{},"injectables/StatisticService.html":{},"classes/UserBookignCountDto.html":{}}}],["entities",{"_index":163,"title":{},"body":{"entities/Booking.html":{},"entities/ErrorReportEntity.html":{},"entities/MeetingRoom.html":{},"entities/PerformanceEntity.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/booking.entity",{"_index":337,"title":{},"body":{"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{}}}],["entities/error.entity",{"_index":566,"title":{},"body":{"classes/ErrorReportDto.html":{},"modules/FeReportModule.html":{},"injectables/FeReportService.html":{}}}],["entities/meeting",{"_index":497,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/UpdateMeetingRoomDto.html":{}}}],["entities/performance.entity",{"_index":615,"title":{},"body":{"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"classes/PerformanceDto.html":{}}}],["entities/permission.entity",{"_index":1513,"title":{},"body":{"modules/UserModule.html":{}}}],["entities/role.entity",{"_index":1512,"title":{},"body":{"modules/UserModule.html":{}}}],["entities/user.entity",{"_index":777,"title":{},"body":{"classes/LoginUserVo.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"modules/UserModule.html":{}}}],["entity",{"_index":161,"title":{"entities/Booking.html":{},"entities/ErrorReportEntity.html":{},"entities/MeetingRoom.html":{},"entities/PerformanceEntity.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/Booking.html":{},"entities/ErrorReportEntity.html":{},"entities/MeetingRoom.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity('error_report_tab",{"_index":581,"title":{},"body":{"entities/ErrorReportEntity.html":{}}}],["entity('performance_report_tab",{"_index":1072,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["entitymanager",{"_index":353,"title":{},"body":{"injectables/BookingService.html":{},"injectables/StatisticService.html":{}}}],["entries",{"_index":963,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["entrytype",{"_index":1059,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["enum",{"_index":225,"title":{},"body":{"entities/Booking.html":{},"classes/EmitSSEData.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["enumerations",{"_index":1574,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equipment",{"_index":782,"title":{},"body":{"entities/MeetingRoom.html":{},"classes/MeetingRoomListDto.html":{},"injectables/MeetingRoomService.html":{}}}],["error",{"_index":568,"title":{},"body":{"entities/ErrorReportEntity.html":{},"controllers/FeReportController.html":{},"injectables/FeReportService.html":{},"miscellaneous/variables.html":{}}}],["error(@body",{"_index":608,"title":{},"body":{"controllers/FeReportController.html":{}}}],["error(error",{"_index":589,"title":{},"body":{"controllers/FeReportController.html":{}}}],["error_info",{"_index":569,"title":{},"body":{"entities/ErrorReportEntity.html":{}}}],["error_msg",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorreport",{"_index":618,"title":{},"body":{"injectables/FeReportService.html":{}}}],["errorreport(error",{"_index":625,"title":{},"body":{"injectables/FeReportService.html":{}}}],["errorreportdto",{"_index":560,"title":{"classes/ErrorReportDto.html":{}},"body":{"classes/ErrorReportDto.html":{},"controllers/FeReportController.html":{},"injectables/FeReportService.html":{},"coverage.html":{}}}],["errorreportentity",{"_index":565,"title":{"entities/ErrorReportEntity.html":{}},"body":{"classes/ErrorReportDto.html":{},"entities/ErrorReportEntity.html":{},"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"coverage.html":{}}}],["errorreportrepository",{"_index":624,"title":{},"body":{"injectables/FeReportService.html":{}}}],["event",{"_index":1224,"title":{},"body":{"injectables/SseService.html":{}}}],["eventemitter",{"_index":1177,"title":{},"body":{"controllers/SseController.html":{},"injectables/SseService.html":{}}}],["eventemitter2",{"_index":1169,"title":{},"body":{"controllers/SseController.html":{},"injectables/SseService.html":{}}}],["eventemittermodule",{"_index":1188,"title":{},"body":{"modules/SseModule.html":{}}}],["eventemittermodule.forroot",{"_index":1190,"title":{},"body":{"modules/SseModule.html":{}}}],["example",{"_index":1596,"title":{},"body":{"index.html":{}}}],["exception",{"_index":507,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"classes/UnloginFilter.html":{}}}],["exception.filter.ts",{"_index":499,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:11",{"_index":506,"title":{},"body":{"classes/CustomExceptionFilter.html":{}}}],["exception.getresponse",{"_index":515,"title":{},"body":{"classes/CustomExceptionFilter.html":{}}}],["exception.getstatus",{"_index":514,"title":{},"body":{"classes/CustomExceptionFilter.html":{}}}],["exception.message",{"_index":519,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["exceptionfactory",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exceptionfilter",{"_index":501,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["exceptions",{"_index":1034,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["executioncontext",{"_index":638,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"miscellaneous/variables.html":{}}}],["existed",{"_index":435,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{}}}],["expiresin",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["export",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListDto.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmitSSEData.html":{},"classes/ErrorReportDto.html":{},"entities/ErrorReportEntity.html":{},"controllers/FeReportController.html":{},"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/FreezeUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"modules/MinioModule.html":{},"injectables/MinioService.html":{},"classes/PerformanceDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenVo.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookignCountDto.html":{},"classes/UserBookignCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{}}}],["exports",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/FeReportModule.html":{},"modules/MeetingRoomModule.html":{},"modules/MinioModule.html":{},"modules/RedisModule.html":{},"modules/SseModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":510,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":1410,"title":{},"body":{"controllers/UserController.html":{}}}],["extends",{"_index":484,"title":{},"body":{"classes/CreateBookingDto.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/ErrorReportDto.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"classes/MeetingRoomListDto.html":{},"classes/PerformanceDto.html":{},"classes/RefreshTokenVo.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserBookignCountDto.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{}}}],["extname",{"_index":1483,"title":{},"body":{"controllers/UserController.html":{}}}],["extra",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["false",{"_index":539,"title":{},"body":{"injectables/EmailService.html":{},"entities/MeetingRoom.html":{},"injectables/MinioService.html":{},"injectables/SseService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["false})@isboolean",{"_index":1326,"title":{},"body":{"entities/User.html":{}}}],["false})@isboolean()@isnotempty",{"_index":796,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["fcp",{"_index":1062,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["fe",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"controllers/FeReportController.html":{},"modules/FeReportModule.html":{}}}],["fereportcontroller",{"_index":585,"title":{"controllers/FeReportController.html":{}},"body":{"controllers/FeReportController.html":{},"modules/FeReportModule.html":{},"coverage.html":{}}}],["fereportmodule",{"_index":72,"title":{"modules/FeReportModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeReportModule.html":{},"modules.html":{},"overview.html":{}}}],["fereportservice",{"_index":599,"title":{"injectables/FeReportService.html":{}},"body":{"controllers/FeReportController.html":{},"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"coverage.html":{},"overview.html":{}}}],["fid",{"_index":1063,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListDto.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmitSSEData.html":{},"classes/ErrorReportDto.html":{},"entities/ErrorReportEntity.html":{},"controllers/FeReportController.html":{},"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/FreezeUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"modules/MinioModule.html":{},"injectables/MinioService.html":{},"classes/PerformanceDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenVo.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookignCountDto.html":{},"classes/UserBookignCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["filefilter(_req",{"_index":1481,"title":{},"body":{"controllers/UserController.html":{}}}],["fileinterceptor",{"_index":1422,"title":{},"body":{"controllers/UserController.html":{}}}],["fileinterceptor('file",{"_index":1478,"title":{},"body":{"controllers/UserController.html":{}}}],["filesize",{"_index":1480,"title":{},"body":{"controllers/UserController.html":{}}}],["filters",{"_index":735,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["find",{"_index":349,"title":{},"body":{"injectables/BookingService.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{}}}],["find(@param('id",{"_index":847,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["find(bookinglistdto",{"_index":362,"title":{},"body":{"injectables/BookingService.html":{}}}],["find(id",{"_index":819,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["find(meetingroomlistdto",{"_index":874,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["findbyid",{"_index":869,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["findbyid(id",{"_index":876,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["first",{"_index":972,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["flag",{"_index":455,"title":{},"body":{"injectables/BookingService.html":{}}}],["following",{"_index":1033,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["forbiddenexception",{"_index":1089,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["form",{"_index":1021,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["format",{"_index":184,"title":{},"body":{"entities/Booking.html":{},"classes/FreezeUserDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterCaptchaDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["formatresponseinterceptor",{"_index":113,"title":{"injectables/FormatResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/FormatResponseInterceptor.html":{},"coverage.html":{}}}],["forward",{"_index":1036,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["found",{"_index":1095,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["framework",{"_index":1585,"title":{},"body":{"index.html":{}}}],["freeze",{"_index":1361,"title":{},"body":{"controllers/UserController.html":{}}}],["freeze(@query",{"_index":1473,"title":{},"body":{"controllers/UserController.html":{}}}],["freeze(undefined",{"_index":1377,"title":{},"body":{"controllers/UserController.html":{}}}],["freezeuserdto",{"_index":650,"title":{"classes/FreezeUserDto.html":{}},"body":{"classes/FreezeUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["fromevent",{"_index":1172,"title":{},"body":{"controllers/SseController.html":{}}}],["fromevent(this.eventemitter",{"_index":1181,"title":{},"body":{"controllers/SseController.html":{}}}],["frozen",{"_index":1328,"title":{},"body":{"entities/User.html":{}}}],["function",{"_index":1534,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1578,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":579,"title":{},"body":{"entities/ErrorReportEntity.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["generated('increment",{"_index":582,"title":{},"body":{"entities/ErrorReportEntity.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["generated('increment')@primarycolumn('bigint",{"_index":577,"title":{},"body":{"entities/ErrorReportEntity.html":{},"entities/PerformanceEntity.html":{}}}],["generateparseintpipe",{"_index":1540,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["get(':id",{"_index":846,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["get(':id')@apiunifiedokresponse(meetingroom",{"_index":820,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["get('aaa",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["get('aaa')@requirelogin()@requirepermission('ddd",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["get('admin/refresh",{"_index":1456,"title":{},"body":{"controllers/UserController.html":{}}}],["get('admin/refresh')@apiunifiedokresponse(refreshtokenvo",{"_index":1371,"title":{},"body":{"controllers/UserController.html":{}}}],["get('apply/:id",{"_index":296,"title":{},"body":{"controllers/BookingController.html":{}}}],["get('apply/:id')@apiunifiedokresponse",{"_index":251,"title":{},"body":{"controllers/BookingController.html":{}}}],["get('bbb",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["get('freeze",{"_index":1472,"title":{},"body":{"controllers/UserController.html":{}}}],["get('hello",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["get('info",{"_index":1457,"title":{},"body":{"controllers/UserController.html":{}}}],["get('list",{"_index":292,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["get('list')@apiunifiedokresponse(bookinglistvo",{"_index":255,"title":{},"body":{"controllers/BookingController.html":{}}}],["get('list')@apiunifiedokresponse(meetingroomlistvo",{"_index":824,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["get('meetingroomusedcount",{"_index":1257,"title":{},"body":{"controllers/StatisticController.html":{}}}],["get('meetingroomusedcount')@apiunifiedarrayokresponse(meetingroomusedcountvo",{"_index":1238,"title":{},"body":{"controllers/StatisticController.html":{}}}],["get('refresh",{"_index":1452,"title":{},"body":{"controllers/UserController.html":{}}}],["get('refresh')@apiunifiedokresponse(refreshtokenvo",{"_index":1388,"title":{},"body":{"controllers/UserController.html":{}}}],["get('register",{"_index":1374,"title":{},"body":{"controllers/UserController.html":{}}}],["get('reject/:id",{"_index":299,"title":{},"body":{"controllers/BookingController.html":{}}}],["get('reject/:id')@apiunifiedokresponse",{"_index":258,"title":{},"body":{"controllers/BookingController.html":{}}}],["get('unbind/:id",{"_index":302,"title":{},"body":{"controllers/BookingController.html":{}}}],["get('unbind/:id')@apiunifiedokresponse",{"_index":261,"title":{},"body":{"controllers/BookingController.html":{}}}],["get('update/captcha",{"_index":1469,"title":{},"body":{"controllers/UserController.html":{}}}],["get('update_password/captcha",{"_index":1464,"title":{},"body":{"controllers/UserController.html":{}}}],["get('update_password/captcha')@apiunifiedokresponse",{"_index":1407,"title":{},"body":{"controllers/UserController.html":{}}}],["get('urge/:id",{"_index":305,"title":{},"body":{"controllers/BookingController.html":{}}}],["get('urge/:id')@apiunifiedokresponse",{"_index":264,"title":{},"body":{"controllers/BookingController.html":{}}}],["get('userbookingcount",{"_index":1254,"title":{},"body":{"controllers/StatisticController.html":{}}}],["get('userbookingcount')@apiunifiedarrayokresponse(userbookigncountvo",{"_index":1242,"title":{},"body":{"controllers/StatisticController.html":{}}}],["get()@healthcheck",{"_index":660,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(key",{"_index":1115,"title":{},"body":{"injectables/RedisService.html":{}}}],["getapiresponseoptions",{"_index":1544,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getconfig",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethello",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getrawmany",{"_index":1286,"title":{},"body":{"injectables/StatisticService.html":{}}}],["getschemapath(model",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":1581,"title":{"index.html":{}},"body":{}}],["gif",{"_index":1487,"title":{},"body":{"controllers/UserController.html":{}}}],["given",{"_index":985,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["global",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["good",{"_index":1049,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["graph",{"_index":1639,"title":{},"body":{"modules.html":{}}}],["group",{"_index":1000,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["grow",{"_index":1617,"title":{},"body":{"index.html":{}}}],["guard",{"_index":757,"title":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":758,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"overview.html":{}}}],["half",{"_index":459,"title":{},"body":{"injectables/BookingService.html":{}}}],["happen",{"_index":1009,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["hash",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hash.digest('hex",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hash.update(str",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["head",{"_index":1320,"title":{},"body":{"entities/User.html":{}}}],["headpic",{"_index":1307,"title":{},"body":{"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["health",{"_index":658,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":695,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":664,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":662,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":656,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":73,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["heartbeat",{"_index":1219,"title":{},"body":{"injectables/SseService.html":{}}}],["hello",{"_index":159,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":1626,"title":{},"body":{"index.html":{}}}],["host",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"classes/CustomExceptionFilter.html":{},"injectables/EmailService.html":{},"modules/RedisModule.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["host.switchtohttp().getresponse",{"_index":512,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["hour",{"_index":460,"title":{},"body":{"injectables/BookingService.html":{}}}],["html",{"_index":476,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EmailService.html":{}}}],["http",{"_index":671,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpcode",{"_index":270,"title":{},"body":{"controllers/BookingController.html":{},"controllers/FeReportController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":289,"title":{},"body":{"controllers/BookingController.html":{},"controllers/FeReportController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["httpexception",{"_index":504,"title":{},"body":{"classes/CustomExceptionFilter.html":{}}}],["httphealthindicator",{"_index":663,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":693,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://docs.nestjs.com",{"_index":678,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://nestjs.com",{"_index":1633,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":271,"title":{},"body":{"controllers/BookingController.html":{},"controllers/FeReportController.html":{},"controllers/MeetingRoomController.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{}}}],["httpstatus.unauthorized",{"_index":1299,"title":{},"body":{"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["id",{"_index":168,"title":{},"body":{"entities/Booking.html":{},"controllers/BookingController.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/ErrorReportDto.html":{},"entities/ErrorReportEntity.html":{},"classes/FreezeUserDto.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"entities/Role.html":{},"classes/UpdateMeetingRoomDto.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["id'})@isnotempty({message",{"_index":794,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["identifier",{"_index":1517,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1493,"title":{},"body":{"controllers/UserController.html":{}}}],["implements",{"_index":500,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["import",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListDto.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmitSSEData.html":{},"classes/ErrorReportDto.html":{},"entities/ErrorReportEntity.html":{},"controllers/FeReportController.html":{},"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/FreezeUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountDto.html":{},"modules/MinioModule.html":{},"injectables/MinioService.html":{},"classes/PerformanceDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenVo.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookignCountDto.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{}}}],["imports",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/FeReportModule.html":{},"modules/HealthModule.html":{},"modules/MeetingRoomModule.html":{},"modules/SseModule.html":{},"modules/UserModule.html":{}}}],["improvement",{"_index":1051,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListDto.html":{},"classes/BookingListVo.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/CustomExceptionFilter.html":{},"injectables/EmailService.html":{},"classes/EmitSSEData.html":{},"entities/ErrorReportEntity.html":{},"controllers/FeReportController.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/FreezeUserDto.html":{},"controllers/HealthController.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"injectables/MinioService.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"entities/User.html":{},"classes/UserBookignCountDto.html":{},"classes/UserBookignCountVo.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListDto.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmitSSEData.html":{},"classes/ErrorReportDto.html":{},"entities/ErrorReportEntity.html":{},"controllers/FeReportController.html":{},"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/FreezeUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"modules/MinioModule.html":{},"injectables/MinioService.html":{},"classes/PerformanceDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenVo.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookignCountDto.html":{},"classes/UserBookignCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{}}}],["info(@userinfo('userid",{"_index":1459,"title":{},"body":{"controllers/UserController.html":{}}}],["info(userid",{"_index":1380,"title":{},"body":{"controllers/UserController.html":{}}}],["info.vo",{"_index":1437,"title":{},"body":{"controllers/UserController.html":{},"classes/UserListVo.html":{}}}],["info.vo.ts",{"_index":1500,"title":{},"body":{"classes/UserDetailVo.html":{},"coverage.html":{}}}],["inherited",{"_index":1309,"title":{},"body":{"classes/UpdateUserPasswordCaptchaDto.html":{},"classes/UserBookignCountDto.html":{}}}],["initdata",{"_index":350,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{}}}],["inject",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"injectables/BookingService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{}}}],["inject('redis_client",{"_index":1122,"title":{},"body":{"injectables/RedisService.html":{}}}],["inject(emailservice",{"_index":377,"title":{},"body":{"injectables/BookingService.html":{}}}],["inject(jwtservice",{"_index":737,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["inject(redisservice",{"_index":376,"title":{},"body":{"injectables/BookingService.html":{}}}],["injectable",{"_index":155,"title":{"injectables/AppService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/MeetingRoomService.html":{},"injectables/MinioService.html":{},"injectables/RedisService.html":{},"injectables/SseService.html":{},"injectables/StatisticService.html":{}},"body":{"injectables/AppService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"injectables/MeetingRoomService.html":{},"injectables/MinioService.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"injectables/SseService.html":{},"injectables/StatisticService.html":{},"coverage.html":{}}}],["injectables",{"_index":156,"title":{},"body":{"injectables/AppService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/MeetingRoomService.html":{},"injectables/MinioService.html":{},"injectables/RedisService.html":{},"injectables/SseService.html":{},"injectables/StatisticService.html":{},"overview.html":{}}}],["injectentitymanager",{"_index":369,"title":{},"body":{"injectables/BookingService.html":{},"injectables/StatisticService.html":{}}}],["injectrepository",{"_index":629,"title":{},"body":{"injectables/FeReportService.html":{},"injectables/MeetingRoomService.html":{}}}],["injectrepository(errorreportentity",{"_index":630,"title":{},"body":{"injectables/FeReportService.html":{}}}],["injectrepository(meetingroom",{"_index":880,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["injectrepository(performanceentity",{"_index":631,"title":{},"body":{"injectables/FeReportService.html":{}}}],["inp",{"_index":1064,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["installation",{"_index":1595,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1598,"title":{},"body":{"index.html":{}}}],["instance",{"_index":993,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["instances",{"_index":1007,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["integer",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intercept",{"_index":636,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["intercept(context",{"_index":637,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["interface",{"_index":721,"title":{"interfaces/JwtUserData.html":{},"interfaces/Request.html":{}},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["interfaces",{"_index":723,"title":{},"body":{"interfaces/JwtUserData.html":{},"interfaces/Request.html":{},"overview.html":{}}}],["intersectiontype",{"_index":1302,"title":{},"body":{"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{}}}],["interval",{"_index":1208,"title":{},"body":{"injectables/SseService.html":{}}}],["interval(180000",{"_index":1218,"title":{},"body":{"injectables/SseService.html":{}}}],["invalid",{"_index":755,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["invoked",{"_index":712,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["invokerecordinterceptor",{"_index":114,"title":{"injectables/InvokeRecordInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/InvokeRecordInterceptor.html":{},"coverage.html":{}}}],["ip",{"_index":707,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["isadmin",{"_index":469,"title":{},"body":{"injectables/BookingService.html":{},"entities/User.html":{}}}],["isarray",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isbooked",{"_index":495,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{},"entities/MeetingRoom.html":{}}}],["isboolean",{"_index":805,"title":{},"body":{"entities/MeetingRoom.html":{},"entities/User.html":{}}}],["isemail",{"_index":1143,"title":{},"body":{"classes/RegisterCaptchaDto.html":{},"entities/User.html":{}}}],["isenum",{"_index":209,"title":{},"body":{"entities/Booking.html":{},"classes/EmitSSEData.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["isenum(bookingstatus",{"_index":234,"title":{},"body":{"entities/Booking.html":{}}}],["isenum(metricnameenum",{"_index":1073,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["isenum(metricnavigationenum",{"_index":1075,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["isenum(metricratingenum",{"_index":1074,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["isenum(sseactionenum",{"_index":558,"title":{},"body":{"classes/EmitSSEData.html":{}}}],["isenum(sseactionenum)@isoptional",{"_index":552,"title":{},"body":{"classes/EmitSSEData.html":{}}}],["isfrozen",{"_index":1315,"title":{},"body":{"entities/User.html":{}}}],["isglobal",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":328,"title":{},"body":{"classes/BookingListDto.html":{},"classes/FreezeUserDto.html":{},"classes/MeetingRoomListDto.html":{},"classes/UserListDto.html":{}}}],["isint()@isoptional",{"_index":323,"title":{},"body":{"classes/BookingListDto.html":{},"classes/MeetingRoomListDto.html":{},"classes/UserListDto.html":{}}}],["isnotempty",{"_index":210,"title":{},"body":{"entities/Booking.html":{},"classes/CreateBookingDto.html":{},"classes/EmitSSEData.html":{},"entities/ErrorReportEntity.html":{},"classes/FreezeUserDto.html":{},"entities/MeetingRoom.html":{},"classes/MeetingRoomUsedCountDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{}}}],["isnotempty()@isstring",{"_index":921,"title":{},"body":{"classes/MeetingRoomUsedCountDto.html":{},"classes/UserBookignCountDto.html":{}}}],["isnotempty({message",{"_index":487,"title":{},"body":{"classes/CreateBookingDto.html":{},"classes/FreezeUserDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{}}}],["isnumber",{"_index":211,"title":{},"body":{"entities/Booking.html":{},"classes/BookingListDto.html":{},"classes/CreateBookingDto.html":{},"entities/MeetingRoom.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["isnumber()@isnotempty",{"_index":1076,"title":{},"body":{"classes/PerformanceEntry.html":{}}}],["isnumber()@isoptional",{"_index":318,"title":{},"body":{"classes/BookingListDto.html":{}}}],["isoptional",{"_index":212,"title":{},"body":{"entities/Booking.html":{},"classes/BookingListDto.html":{},"classes/EmitSSEData.html":{},"classes/MeetingRoomListDto.html":{},"entities/User.html":{},"classes/UserListDto.html":{}}}],["isstring",{"_index":213,"title":{},"body":{"entities/Booking.html":{},"classes/BookingListDto.html":{},"classes/EmitSSEData.html":{},"entities/ErrorReportEntity.html":{},"entities/MeetingRoom.html":{},"classes/MeetingRoomUsedCountDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"classes/RefreshTokenDto.html":{},"entities/User.html":{}}}],["isstring()@isnotempty",{"_index":556,"title":{},"body":{"classes/EmitSSEData.html":{},"classes/PerformanceEntry.html":{}}}],["isstring()@isnotempty()@maxlength(100",{"_index":787,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["isstring()@isnotempty()@maxlength(50",{"_index":791,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["isstring()@isoptional",{"_index":194,"title":{},"body":{"entities/Booking.html":{},"classes/BookingListDto.html":{}}}],["item",{"_index":431,"title":{},"body":{"injectables/BookingService.html":{}}}],["item.code",{"_index":1097,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["item.user.password",{"_index":430,"title":{},"body":{"injectables/BookingService.html":{}}}],["items",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":1623,"title":{},"body":{"index.html":{}}}],["jointable",{"_index":1155,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["jpg",{"_index":1486,"title":{},"body":{"controllers/UserController.html":{}}}],["json",{"_index":516,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["json'})@isnotempty",{"_index":976,"title":{},"body":{"entities/PerformanceEntity.html":{}}}],["json.stringify(data)}\\n\\n",{"_index":1217,"title":{},"body":{"injectables/SseService.html":{}}}],["json.stringify(res",{"_index":720,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["jwt",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_access_token_expires_time",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["jwt_refresh_token_expres_time",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.registerasync",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtservice",{"_index":730,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["jwtuserdata",{"_index":722,"title":{"interfaces/JwtUserData.html":{}},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["kamil",{"_index":1630,"title":{},"body":{"index.html":{}}}],["key",{"_index":559,"title":{},"body":{"classes/EmitSSEData.html":{},"injectables/RedisService.html":{}}}],["last",{"_index":970,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["layout",{"_index":986,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["lcp",{"_index":1065,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["leftjoin(meetingroom",{"_index":1289,"title":{},"body":{"injectables/StatisticService.html":{}}}],["leftjoin(user",{"_index":1276,"title":{},"body":{"injectables/StatisticService.html":{}}}],["legal",{"_index":654,"title":{},"body":{"classes/FreezeUserDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterCaptchaDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"entities/User.html":{}}}],["legend",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/FeReportModule.html":{},"modules/MeetingRoomModule.html":{},"modules/MinioModule.html":{},"modules/RedisModule.html":{},"modules/SseModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":232,"title":{},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["lessthanorequal",{"_index":371,"title":{},"body":{"injectables/BookingService.html":{}}}],["lessthanorequal(booking.starttime",{"_index":445,"title":{},"body":{"injectables/BookingService.html":{}}}],["license",{"_index":1636,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1614,"title":{},"body":{"index.html":{}}}],["like(`%${equipment",{"_index":899,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["like(`%${meetingroomname",{"_index":419,"title":{},"body":{"injectables/BookingService.html":{}}}],["like(`%${meetingroomposition",{"_index":421,"title":{},"body":{"injectables/BookingService.html":{}}}],["like(`%${name",{"_index":897,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["like(`%${username",{"_index":417,"title":{},"body":{"injectables/BookingService.html":{}}}],["limits",{"_index":1479,"title":{},"body":{"controllers/UserController.html":{}}}],["list",{"_index":240,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["list(@query",{"_index":294,"title":{},"body":{"controllers/BookingController.html":{},"controllers/UserController.html":{}}}],["list(bookinglistdto",{"_index":253,"title":{},"body":{"controllers/BookingController.html":{}}}],["list(meetingroomlistdto",{"_index":822,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["list(userlistdto",{"_index":1383,"title":{},"body":{"controllers/UserController.html":{}}}],["list.dto",{"_index":282,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"controllers/UserController.html":{}}}],["list.dto.ts",{"_index":310,"title":{},"body":{"classes/BookingListDto.html":{},"classes/MeetingRoomListDto.html":{},"classes/UserListDto.html":{},"coverage.html":{}}}],["list.dto.ts:13",{"_index":325,"title":{},"body":{"classes/BookingListDto.html":{}}}],["list.dto.ts:14",{"_index":858,"title":{},"body":{"classes/MeetingRoomListDto.html":{},"classes/UserListDto.html":{}}}],["list.dto.ts:17",{"_index":326,"title":{},"body":{"classes/BookingListDto.html":{}}}],["list.dto.ts:19",{"_index":859,"title":{},"body":{"classes/MeetingRoomListDto.html":{},"classes/UserListDto.html":{}}}],["list.dto.ts:21",{"_index":321,"title":{},"body":{"classes/BookingListDto.html":{}}}],["list.dto.ts:25",{"_index":322,"title":{},"body":{"classes/BookingListDto.html":{}}}],["list.dto.ts:30",{"_index":320,"title":{},"body":{"classes/BookingListDto.html":{}}}],["list.dto.ts:35",{"_index":319,"title":{},"body":{"classes/BookingListDto.html":{}}}],["list.dto.ts:8",{"_index":324,"title":{},"body":{"classes/BookingListDto.html":{}}}],["list.vo",{"_index":285,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["list.vo.ts",{"_index":332,"title":{},"body":{"classes/BookingListVo.html":{},"classes/MeetingRoomListVo.html":{},"classes/UserListVo.html":{},"coverage.html":{}}}],["list.vo.ts:4",{"_index":335,"title":{},"body":{"classes/BookingListVo.html":{},"classes/MeetingRoomListVo.html":{},"classes/UserListVo.html":{}}}],["list.vo.ts:6",{"_index":336,"title":{},"body":{"classes/BookingListVo.html":{},"classes/MeetingRoomListVo.html":{},"classes/UserListVo.html":{}}}],["literal",{"_index":554,"title":{},"body":{"classes/EmitSSEData.html":{}}}],["load",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["location",{"_index":783,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["location'})@isstring()@isnotempty({message",{"_index":798,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["logger",{"_index":698,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["logger(invokerecordinterceptor.name",{"_index":700,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["logging",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/RefreshTokenVo.html":{},"interfaces/Request.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"miscellaneous/variables.html":{}}}],["loginguard",{"_index":115,"title":{"guards/LoginGuard.html":{}},"body":{"modules/AppModule.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["loginuser",{"_index":1369,"title":{},"body":{"controllers/UserController.html":{}}}],["loginuserdto",{"_index":763,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["loginuservo",{"_index":769,"title":{"classes/LoginUserVo.html":{}},"body":{"classes/LoginUserVo.html":{},"classes/RefreshTokenVo.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["lts.1",{"_index":1564,"title":{},"body":{"dependencies.html":{}}}],["m",{"_index":1290,"title":{},"body":{"injectables/StatisticService.html":{}}}],["m.id",{"_index":1292,"title":{},"body":{"injectables/StatisticService.html":{}}}],["manytomany",{"_index":1156,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["manytomany(undefined)@jointable({name",{"_index":1152,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["manytoone",{"_index":217,"title":{},"body":{"entities/Booking.html":{}}}],["manytoone(undefined",{"_index":197,"title":{},"body":{"entities/Booking.html":{}}}],["map",{"_index":645,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{}}}],["map((data",{"_index":649,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"controllers/SseController.html":{}}}],["matching",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListDto.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmitSSEData.html":{},"classes/ErrorReportDto.html":{},"entities/ErrorReportEntity.html":{},"controllers/FeReportController.html":{},"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/FreezeUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"modules/MinioModule.html":{},"injectables/MinioService.html":{},"classes/PerformanceDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenVo.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookignCountDto.html":{},"classes/UserBookignCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":788,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["maxlength",{"_index":806,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["maxlength(10",{"_index":807,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["maxlength(100",{"_index":809,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["maxlength(50",{"_index":808,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["md5",{"_index":1542,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mdn",{"_index":1055,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["meeting",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"entities/Booking.html":{},"classes/CreateBookingDto.html":{},"classes/CreateMeetingRoomDto.html":{},"injectables/EmailService.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UserBookignCountDto.html":{},"coverage.html":{}}}],["meetingroom",{"_index":196,"title":{"entities/MeetingRoom.html":{}},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"classes/CreateMeetingRoomDto.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"injectables/StatisticService.html":{},"classes/UpdateMeetingRoomDto.html":{},"coverage.html":{}}}],["meetingroom.capacity",{"_index":906,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroom.description",{"_index":912,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroom.equipment",{"_index":914,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroom.id",{"_index":444,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{}}}],["meetingroom.location",{"_index":908,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroom.name",{"_index":910,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroomcontroller",{"_index":810,"title":{"controllers/MeetingRoomController.html":{}},"body":{"controllers/MeetingRoomController.html":{},"modules/MeetingRoomModule.html":{},"coverage.html":{}}}],["meetingroomdto",{"_index":815,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{}}}],["meetingroomdto.capacity",{"_index":907,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroomdto.description",{"_index":911,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroomdto.equipment",{"_index":913,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroomdto.id",{"_index":905,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroomdto.location",{"_index":909,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroomdto.name",{"_index":903,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroomid",{"_index":486,"title":{},"body":{"classes/CreateBookingDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"injectables/StatisticService.html":{}}}],["meetingroomlistdto",{"_index":823,"title":{"classes/MeetingRoomListDto.html":{}},"body":{"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"injectables/MeetingRoomService.html":{},"coverage.html":{}}}],["meetingroomlistvo",{"_index":834,"title":{"classes/MeetingRoomListVo.html":{}},"body":{"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"coverage.html":{}}}],["meetingroommodule",{"_index":74,"title":{"modules/MeetingRoomModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MeetingRoomModule.html":{},"modules.html":{},"overview.html":{}}}],["meetingroomname",{"_index":313,"title":{},"body":{"classes/BookingListDto.html":{},"injectables/BookingService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"injectables/StatisticService.html":{}}}],["meetingroomposition",{"_index":314,"title":{},"body":{"classes/BookingListDto.html":{},"injectables/BookingService.html":{}}}],["meetingrooms",{"_index":861,"title":{},"body":{"classes/MeetingRoomListVo.html":{},"injectables/MeetingRoomService.html":{}}}],["meetingroomservice",{"_index":831,"title":{"injectables/MeetingRoomService.html":{}},"body":{"controllers/MeetingRoomController.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"coverage.html":{},"overview.html":{}}}],["meetingroomusedcount",{"_index":1235,"title":{},"body":{"controllers/StatisticController.html":{},"injectables/StatisticService.html":{}}}],["meetingroomusedcount(meetingroomusedcountdto",{"_index":1237,"title":{},"body":{"controllers/StatisticController.html":{},"injectables/StatisticService.html":{}}}],["meetingroomusedcountdto",{"_index":917,"title":{"classes/MeetingRoomUsedCountDto.html":{}},"body":{"classes/MeetingRoomUsedCountDto.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UserBookignCountDto.html":{},"coverage.html":{}}}],["meetingroomusedcountdto:10",{"_index":1354,"title":{},"body":{"classes/UserBookignCountDto.html":{}}}],["meetingroomusedcountdto:6",{"_index":1355,"title":{},"body":{"classes/UserBookignCountDto.html":{}}}],["meetingroomusedcountvo",{"_index":924,"title":{"classes/MeetingRoomUsedCountVo.html":{}},"body":{"classes/MeetingRoomUsedCountVo.html":{},"controllers/StatisticController.html":{},"coverage.html":{}}}],["memory",{"_index":674,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":667,"title":{},"body":{"controllers/HealthController.html":{}}}],["message",{"_index":230,"title":{},"body":{"entities/Booking.html":{},"classes/CreateBookingDto.html":{},"classes/CustomExceptionFilter.html":{},"classes/FreezeUserDto.html":{},"entities/MeetingRoom.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["messageevent",{"_index":1168,"title":{},"body":{"controllers/SseController.html":{},"injectables/SseService.html":{}}}],["metadata",{"_index":1569,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":708,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookingController.html":{},"injectables/BookingService.html":{},"classes/CustomExceptionFilter.html":{},"injectables/EmailService.html":{},"controllers/FeReportController.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"controllers/HealthController.html":{},"injectables/InvokeRecordInterceptor.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"injectables/MinioService.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{}}}],["metric",{"_index":596,"title":{},"body":{"controllers/FeReportController.html":{},"injectables/FeReportService.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["metricnameenum",{"_index":1017,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["metricnameenum})@isenum(metricnameenum)@isnotempty",{"_index":1018,"title":{},"body":{"entities/PerformanceEntity.html":{}}}],["metricnavigationenum",{"_index":1022,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["metricnavigationenum})@isenum(metricnavigationenum)@isnotempty",{"_index":1023,"title":{},"body":{"entities/PerformanceEntity.html":{}}}],["metricratingenum",{"_index":1044,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["metricratingenum})@isenum(metricratingenum)@isnotempty",{"_index":1045,"title":{},"body":{"entities/PerformanceEntity.html":{}}}],["metrics",{"_index":1014,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["min",{"_index":1338,"title":{},"body":{"entities/User.html":{}}}],["minio",{"_index":947,"title":{},"body":{"injectables/MinioService.html":{},"dependencies.html":{}}}],["minio.service",{"_index":936,"title":{},"body":{"modules/MinioModule.html":{}}}],["minio/minio.module",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["minioclient",{"_index":938,"title":{},"body":{"injectables/MinioService.html":{}}}],["miniomodule",{"_index":75,"title":{"modules/MinioModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MinioModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["minioservice",{"_index":934,"title":{"injectables/MinioService.html":{}},"body":{"modules/MinioModule.html":{},"injectables/MinioService.html":{},"coverage.html":{},"overview.html":{}}}],["minlength",{"_index":1348,"title":{},"body":{"entities/User.html":{}}}],["minlength(6",{"_index":1351,"title":{},"body":{"entities/User.html":{}}}],["miscellaneous",{"_index":1573,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1613,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1603,"title":{},"body":{"index.html":{}}}],["model",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":58,"title":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/FeReportModule.html":{},"modules/HealthModule.html":{},"modules/MeetingRoomModule.html":{},"modules/MinioModule.html":{},"modules/RedisModule.html":{},"modules/SseModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"classes/EmitSSEData.html":{},"modules/FeReportModule.html":{},"modules/HealthModule.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"modules/MeetingRoomModule.html":{},"modules/MinioModule.html":{},"modules/RedisModule.html":{},"interfaces/Request.html":{},"modules/SseModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":60,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/FeReportModule.html":{},"modules/HealthModule.html":{},"modules/MeetingRoomModule.html":{},"modules/MinioModule.html":{},"modules/RedisModule.html":{},"modules/SseModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1625,"title":{},"body":{"index.html":{}}}],["morethanorequal",{"_index":372,"title":{},"body":{"injectables/BookingService.html":{}}}],["morethanorequal(booking.endtime",{"_index":446,"title":{},"body":{"injectables/BookingService.html":{}}}],["ms",{"_index":718,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["multer",{"_index":1562,"title":{},"body":{"dependencies.html":{}}}],["multiple",{"_index":997,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["mysql",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":1631,"title":{},"body":{"index.html":{}}}],["name",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/BookingController.html":{},"injectables/BookingService.html":{},"classes/CustomExceptionFilter.html":{},"injectables/EmailService.html":{},"controllers/FeReportController.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"guards/LoginGuard.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"injectables/MeetingRoomService.html":{},"injectables/MinioService.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"entities/Role.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"entities/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["name'})@isnotempty({message",{"_index":1333,"title":{},"body":{"entities/User.html":{}}}],["name'})@isstring()@isnotempty({message",{"_index":801,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["navigate",{"_index":1068,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["navigation",{"_index":1025,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["navigationtype",{"_index":964,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["needs",{"_index":1050,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["needsimprovement",{"_index":1067,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["nest",{"_index":1592,"title":{},"body":{"index.html":{}}}],["nest_server_port",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestframework",{"_index":1635,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":644,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["nestjs/axios",{"_index":694,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BookingController.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/CustomExceptionFilter.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"controllers/FeReportController.html":{},"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"modules/MinioModule.html":{},"injectables/MinioService.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"injectables/MinioService.html":{},"modules/RedisModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":1170,"title":{},"body":{"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1553,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1423,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/CreateBookingDto.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/ErrorReportDto.html":{},"controllers/FeReportController.html":{},"controllers/HealthController.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/PerformanceDto.html":{},"classes/RefreshTokenVo.html":{},"classes/RegisterUserDto.html":{},"controllers/SseController.html":{},"controllers/StatisticController.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":668,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"injectables/StatisticService.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["new",{"_index":389,"title":{},"body":{"injectables/BookingService.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"injectables/MeetingRoomService.html":{},"injectables/MinioService.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"injectables/SseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":639,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["next.handle().pipe",{"_index":648,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["nick",{"_index":1332,"title":{},"body":{"entities/User.html":{}}}],["nick_name",{"_index":1331,"title":{},"body":{"entities/User.html":{}}}],["nickname",{"_index":1145,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserListDto.html":{}}}],["node.js",{"_index":1584,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":534,"title":{},"body":{"injectables/EmailService.html":{},"dependencies.html":{}}}],["nodemailer_host",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodemailer_port",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":169,"title":{},"body":{"entities/Booking.html":{},"classes/CreateBookingDto.html":{}}}],["now",{"_index":715,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["null",{"_index":231,"title":{},"body":{"entities/Booking.html":{},"classes/CreateBookingDto.html":{},"classes/FreezeUserDto.html":{},"entities/MeetingRoom.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["null'})@isemail",{"_index":1141,"title":{},"body":{"classes/RegisterCaptchaDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"entities/User.html":{}}}],["null'})@isint({message",{"_index":653,"title":{},"body":{"classes/FreezeUserDto.html":{}}}],["null'})@isnumber",{"_index":186,"title":{},"body":{"entities/Booking.html":{},"classes/CreateBookingDto.html":{},"entities/MeetingRoom.html":{}}}],["null'})@isstring",{"_index":1334,"title":{},"body":{"entities/User.html":{}}}],["null'})@isstring({message",{"_index":1131,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["null'})@maxlength(10",{"_index":802,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["null'})@maxlength(50",{"_index":799,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["null'})@minlength(6",{"_index":1337,"title":{},"body":{"entities/User.html":{}}}],["nullable",{"_index":1322,"title":{},"body":{"entities/User.html":{}}}],["nullunifiedres",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":183,"title":{},"body":{"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListDto.html":{},"classes/BookingListVo.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/FreezeUserDto.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"injectables/MeetingRoomService.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{}}}],["numbers",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":1015,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["objectname",{"_index":942,"title":{},"body":{"injectables/MinioService.html":{}}}],["observable",{"_index":643,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{}}}],["observable((observer",{"_index":1229,"title":{},"body":{"injectables/SseService.html":{}}}],["observer.next(data",{"_index":1231,"title":{},"body":{"injectables/SseService.html":{}}}],["omittype",{"_index":496,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{},"classes/ErrorReportDto.html":{},"classes/LoginUserVo.html":{},"classes/PerformanceDto.html":{},"classes/RefreshTokenVo.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{}}}],["omittype(errorreportentity",{"_index":563,"title":{},"body":{"classes/ErrorReportDto.html":{}}}],["omittype(loginuservo",{"_index":1136,"title":{},"body":{"classes/RefreshTokenVo.html":{}}}],["omittype(meetingroom",{"_index":494,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{}}}],["omittype(performanceentity",{"_index":959,"title":{},"body":{"classes/PerformanceDto.html":{}}}],["omittype(registeruserdto",{"_index":1306,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["omittype(user",{"_index":778,"title":{},"body":{"classes/LoginUserVo.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{}}}],["once",{"_index":458,"title":{},"body":{"injectables/BookingService.html":{}}}],["onmoduleinit",{"_index":1161,"title":{},"body":{"controllers/SseController.html":{}}}],["open",{"_index":1615,"title":{},"body":{"index.html":{}}}],["optional",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListDto.html":{},"injectables/BookingService.html":{},"classes/CustomExceptionFilter.html":{},"injectables/EmailService.html":{},"classes/EmitSSEData.html":{},"controllers/FeReportController.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"injectables/MeetingRoomService.html":{},"injectables/MinioService.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserListDto.html":{}}}],["out",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/FeReportModule.html":{},"modules/MeetingRoomModule.html":{},"modules/MinioModule.html":{},"modules/RedisModule.html":{},"modules/SseModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":1641,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1547,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1008,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["pageno",{"_index":315,"title":{},"body":{"classes/BookingListDto.html":{},"injectables/BookingService.html":{},"classes/MeetingRoomListDto.html":{},"injectables/MeetingRoomService.html":{},"classes/UserListDto.html":{}}}],["pages",{"_index":1037,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["pagesize",{"_index":316,"title":{},"body":{"classes/BookingListDto.html":{},"injectables/BookingService.html":{},"classes/MeetingRoomListDto.html":{},"injectables/MeetingRoomService.html":{},"classes/UserListDto.html":{}}}],["param",{"_index":268,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/BookingController.html":{},"injectables/BookingService.html":{},"classes/CustomExceptionFilter.html":{},"injectables/EmailService.html":{},"controllers/FeReportController.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"injectables/MinioService.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{}}}],["parseint(value",{"_index":330,"title":{},"body":{"classes/BookingListDto.html":{},"classes/MeetingRoomListDto.html":{},"classes/UserListDto.html":{}}}],["parseintpipe",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partialtype",{"_index":856,"title":{},"body":{"classes/MeetingRoomListDto.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UserListDto.html":{}}}],["partialtype(createmeetingroomdto",{"_index":1303,"title":{},"body":{"classes/UpdateMeetingRoomDto.html":{}}}],["particular",{"_index":992,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["pass",{"_index":542,"title":{},"body":{"injectables/EmailService.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["password'})@isnotempty({message",{"_index":1336,"title":{},"body":{"entities/User.html":{}}}],["password.dto",{"_index":1431,"title":{},"body":{"controllers/UserController.html":{}}}],["password.dto.ts",{"_index":1313,"title":{},"body":{"classes/UpdateUserPasswordDto.html":{},"coverage.html":{}}}],["passworddto",{"_index":1405,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":681,"title":{},"body":{"controllers/HealthController.html":{},"injectables/InvokeRecordInterceptor.html":{},"controllers/UserController.html":{}}}],["path.extname(file.originalname",{"_index":1484,"title":{},"body":{"controllers/UserController.html":{}}}],["patiently",{"_index":463,"title":{},"body":{"injectables/BookingService.html":{}}}],["per",{"_index":1221,"title":{},"body":{"injectables/SseService.html":{}}}],["performance",{"_index":588,"title":{},"body":{"controllers/FeReportController.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["performance(@body",{"_index":605,"title":{},"body":{"controllers/FeReportController.html":{}}}],["performance(metric",{"_index":592,"title":{},"body":{"controllers/FeReportController.html":{}}}],["performance_id",{"_index":960,"title":{},"body":{"classes/PerformanceDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["performancedto",{"_index":593,"title":{"classes/PerformanceDto.html":{}},"body":{"controllers/FeReportController.html":{},"injectables/FeReportService.html":{},"classes/PerformanceDto.html":{},"coverage.html":{}}}],["performanceentity",{"_index":614,"title":{"entities/PerformanceEntity.html":{}},"body":{"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"classes/PerformanceDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"coverage.html":{}}}],["performanceentry",{"_index":975,"title":{"classes/PerformanceEntry.html":{}},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"coverage.html":{}}}],["performancereport",{"_index":619,"title":{},"body":{"injectables/FeReportService.html":{}}}],["performancereport(metric",{"_index":627,"title":{},"body":{"injectables/FeReportService.html":{}}}],["performancerepository",{"_index":622,"title":{},"body":{"injectables/FeReportService.html":{}}}],["permission",{"_index":49,"title":{"entities/Permission.html":{}},"body":{"controllers/AppController.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.entity",{"_index":1157,"title":{},"body":{"entities/Role.html":{}}}],["permissionguard",{"_index":116,"title":{"guards/PermissionGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/PermissionGuard.html":{},"coverage.html":{}}}],["permissions",{"_index":725,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"classes/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["permissions.find((item",{"_index":1096,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["phone",{"_index":1341,"title":{},"body":{"entities/User.html":{}}}],["phonenumber",{"_index":1316,"title":{},"body":{"entities/User.html":{}}}],["pic",{"_index":1321,"title":{},"body":{"entities/User.html":{}}}],["picktype",{"_index":490,"title":{},"body":{"classes/CreateBookingDto.html":{},"classes/LoginUserDto.html":{},"classes/MeetingRoomListDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserListDto.html":{}}}],["picktype(booking",{"_index":485,"title":{},"body":{"classes/CreateBookingDto.html":{}}}],["picktype(meetingroom",{"_index":857,"title":{},"body":{"classes/MeetingRoomListDto.html":{},"classes/UpdateMeetingRoomDto.html":{}}}],["picktype(registeruserdto",{"_index":765,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["picktype(user",{"_index":1144,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserListDto.html":{}}}],["pipe(map",{"_index":1223,"title":{},"body":{"injectables/SseService.html":{}}}],["please",{"_index":461,"title":{},"body":{"injectables/BookingService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"index.html":{}}}],["png",{"_index":1485,"title":{},"body":{"controllers/UserController.html":{}}}],["pnpm",{"_index":1597,"title":{},"body":{"index.html":{}}}],["pong",{"_index":1225,"title":{},"body":{"injectables/SseService.html":{}}}],["poolsize",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["poor",{"_index":1052,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["port",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"injectables/MinioService.html":{},"modules/RedisModule.html":{},"controllers/SseController.html":{}}}],["post",{"_index":266,"title":{},"body":{"controllers/BookingController.html":{},"controllers/FeReportController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["post('add",{"_index":288,"title":{},"body":{"controllers/BookingController.html":{}}}],["post('add')@httpcode(httpstatus.ok)@apiunifiedokresponse",{"_index":247,"title":{},"body":{"controllers/BookingController.html":{}}}],["post('admin/login",{"_index":1450,"title":{},"body":{"controllers/UserController.html":{}}}],["post('admin/login')@httpcode(httpstatus.ok)@apiunifiedokresponse(loginuservo",{"_index":1367,"title":{},"body":{"controllers/UserController.html":{}}}],["post('create",{"_index":842,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["post('create')@httpcode(httpstatus.ok)@apiunifiedokresponse(meetingroom",{"_index":813,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["post('error",{"_index":607,"title":{},"body":{"controllers/FeReportController.html":{}}}],["post('error')@httpcode(httpstatus.ok)@apiunifiedokresponse",{"_index":590,"title":{},"body":{"controllers/FeReportController.html":{}}}],["post('login",{"_index":1446,"title":{},"body":{"controllers/UserController.html":{}}}],["post('login')@httpcode(httpstatus.ok)@apiunifiedokresponse(loginuservo",{"_index":1416,"title":{},"body":{"controllers/UserController.html":{}}}],["post('performance",{"_index":604,"title":{},"body":{"controllers/FeReportController.html":{}}}],["post('performance')@httpcode(httpstatus.ok)@apiunifiedokresponse",{"_index":594,"title":{},"body":{"controllers/FeReportController.html":{}}}],["post('register",{"_index":1441,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register')@httpcode(httpstatus.ok)@apiunifiedokresponse",{"_index":1391,"title":{},"body":{"controllers/UserController.html":{}}}],["post('upload",{"_index":1477,"title":{},"body":{"controllers/UserController.html":{}}}],["post(['update",{"_index":1466,"title":{},"body":{"controllers/UserController.html":{}}}],["post(['update_password",{"_index":1402,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":237,"title":{},"body":{"controllers/BookingController.html":{},"controllers/FeReportController.html":{},"controllers/HealthController.html":{},"controllers/MeetingRoomController.html":{},"controllers/SseController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["prerender",{"_index":1039,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["prerendered",{"_index":1040,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["primarycolumn",{"_index":580,"title":{},"body":{"entities/ErrorReportEntity.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["primarycolumn('bigint",{"_index":583,"title":{},"body":{"entities/ErrorReportEntity.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["primarygeneratedcolumn",{"_index":188,"title":{},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn({comment",{"_index":793,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["private",{"_index":375,"title":{},"body":{"injectables/BookingService.html":{},"injectables/FeReportService.html":{},"controllers/HealthController.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"injectables/MeetingRoomService.html":{},"injectables/MinioService.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"injectables/StatisticService.html":{}}}],["process.platform",{"_index":682,"title":{},"body":{"controllers/HealthController.html":{}}}],["production",{"_index":1605,"title":{},"body":{"index.html":{}}}],["progressing",{"_index":226,"title":{},"body":{"entities/Booking.html":{},"miscellaneous/enumerations.html":{}}}],["progressive",{"_index":1583,"title":{},"body":{"index.html":{}}}],["project",{"_index":1616,"title":{},"body":{"index.html":{}}}],["promise",{"_index":249,"title":{},"body":{"controllers/BookingController.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["properties",{"_index":165,"title":{"properties.html":{}},"body":{"entities/Booking.html":{},"classes/BookingListDto.html":{},"classes/BookingListVo.html":{},"classes/CreateBookingDto.html":{},"injectables/EmailService.html":{},"classes/EmitSSEData.html":{},"entities/ErrorReportEntity.html":{},"classes/FreezeUserDto.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"injectables/MinioService.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"injectables/RedisService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"injectables/SseService.html":{},"classes/UnLoginException.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"entities/User.html":{},"classes/UserBookignCountDto.html":{},"classes/UserBookignCountVo.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{}}}],["providers",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/FeReportModule.html":{},"modules/MeetingRoomModule.html":{},"modules/MinioModule.html":{},"modules/RedisModule.html":{},"modules/SseModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":526,"title":{},"body":{"injectables/EmailService.html":{}}}],["put",{"_index":830,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["put('update",{"_index":849,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["put('update')@apiunifiedokresponse",{"_index":828,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["query",{"_index":269,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["range",{"_index":448,"title":{},"body":{"injectables/BookingService.html":{}}}],["rating",{"_index":965,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["read",{"_index":1624,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/BookingController.html":{},"controllers/FeReportController.html":{},"injectables/InvokeRecordInterceptor.html":{},"controllers/MeetingRoomController.html":{},"injectables/MinioService.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["record",{"_index":415,"title":{},"body":{"injectables/BookingService.html":{}}}],["record.interceptor.ts",{"_index":697,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{},"coverage.html":{}}}],["record.interceptor.ts:14",{"_index":701,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["record.interceptor.ts:16",{"_index":699,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["redis",{"_index":1104,"title":{},"body":{"modules/RedisModule.html":{},"injectables/RedisService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["redis.service",{"_index":1105,"title":{},"body":{"modules/RedisModule.html":{}}}],["redis/redis.module",{"_index":1509,"title":{},"body":{"modules/UserModule.html":{}}}],["redis_client",{"_index":1106,"title":{},"body":{"modules/RedisModule.html":{}}}],["redis_db",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redisclient",{"_index":1113,"title":{},"body":{"injectables/RedisService.html":{}}}],["redisclienttype",{"_index":1121,"title":{},"body":{"injectables/RedisService.html":{}}}],["redismodule",{"_index":341,"title":{"modules/RedisModule.html":{}},"body":{"modules/BookingModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["redisservice",{"_index":354,"title":{"injectables/RedisService.html":{}},"body":{"injectables/BookingService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"coverage.html":{},"overview.html":{}}}],["ref",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reference",{"_index":1078,"title":{},"body":{"classes/PerformanceEntry.html":{}}}],["reference](https://developer.mozilla.org/docs/web/api/performanceentry/duration",{"_index":1056,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["reference](https://developer.mozilla.org/docs/web/api/performanceentry/entrytype",{"_index":1058,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["reference](https://developer.mozilla.org/docs/web/api/performanceentry/name",{"_index":1060,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["reference](https://developer.mozilla.org/docs/web/api/performanceentry/starttime",{"_index":1061,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["reflect",{"_index":1568,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":729,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["refresh",{"_index":1130,"title":{},"body":{"classes/RefreshTokenDto.html":{},"controllers/UserController.html":{}}}],["refresh(@query",{"_index":1454,"title":{},"body":{"controllers/UserController.html":{}}}],["refresh(undefined",{"_index":1387,"title":{},"body":{"controllers/UserController.html":{}}}],["refreshtoken",{"_index":773,"title":{},"body":{"classes/LoginUserVo.html":{},"classes/RefreshTokenDto.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{}}}],["refreshtokendto",{"_index":1127,"title":{"classes/RefreshTokenDto.html":{}},"body":{"classes/RefreshTokenDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["refreshtokenvo",{"_index":1133,"title":{"classes/RefreshTokenVo.html":{}},"body":{"classes/RefreshTokenVo.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["register",{"_index":767,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"classes/UpdateUserPasswordDto.html":{},"controllers/UserController.html":{}}}],["register(@body",{"_index":1442,"title":{},"body":{"controllers/UserController.html":{}}}],["register(registeruser",{"_index":1390,"title":{},"body":{"controllers/UserController.html":{}}}],["registercaptchadto",{"_index":1138,"title":{"classes/RegisterCaptchaDto.html":{}},"body":{"classes/RegisterCaptchaDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["registercaptchadto:13",{"_index":1310,"title":{},"body":{"classes/UpdateUserPasswordCaptchaDto.html":{}}}],["registeruser",{"_index":1393,"title":{},"body":{"controllers/UserController.html":{}}}],["registeruserdto",{"_index":766,"title":{"classes/RegisterUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["reject",{"_index":241,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["reject(@param('id",{"_index":300,"title":{},"body":{"controllers/BookingController.html":{}}}],["reject(id",{"_index":257,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["rejected",{"_index":228,"title":{},"body":{"entities/Booking.html":{},"miscellaneous/enumerations.html":{}}}],["relations",{"_index":425,"title":{},"body":{"injectables/BookingService.html":{}}}],["released",{"_index":229,"title":{},"body":{"entities/Booking.html":{},"miscellaneous/enumerations.html":{}}}],["relevant",{"_index":978,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["reload",{"_index":1069,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["reminder",{"_index":475,"title":{},"body":{"injectables/BookingService.html":{}}}],["report",{"_index":587,"title":{},"body":{"controllers/FeReportController.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["report.controller",{"_index":613,"title":{},"body":{"modules/FeReportModule.html":{}}}],["report.controller.ts",{"_index":586,"title":{},"body":{"controllers/FeReportController.html":{},"coverage.html":{}}}],["report.controller.ts:17",{"_index":595,"title":{},"body":{"controllers/FeReportController.html":{}}}],["report.controller.ts:24",{"_index":591,"title":{},"body":{"controllers/FeReportController.html":{}}}],["report.module",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["report.module.ts",{"_index":612,"title":{},"body":{"modules/FeReportModule.html":{}}}],["report.service",{"_index":600,"title":{},"body":{"controllers/FeReportController.html":{},"modules/FeReportModule.html":{}}}],["report.service.ts",{"_index":617,"title":{},"body":{"injectables/FeReportService.html":{},"coverage.html":{}}}],["report.service.ts:12",{"_index":623,"title":{},"body":{"injectables/FeReportService.html":{}}}],["report.service.ts:21",{"_index":628,"title":{},"body":{"injectables/FeReportService.html":{}}}],["report.service.ts:25",{"_index":626,"title":{},"body":{"injectables/FeReportService.html":{}}}],["report/dto/error.dto.ts",{"_index":562,"title":{},"body":{"classes/ErrorReportDto.html":{},"coverage.html":{}}}],["report/dto/performance.dto.ts",{"_index":958,"title":{},"body":{"classes/PerformanceDto.html":{},"coverage.html":{}}}],["report/entities/error.entity.ts",{"_index":567,"title":{},"body":{"entities/ErrorReportEntity.html":{},"coverage.html":{}}}],["report/entities/error.entity.ts:13",{"_index":575,"title":{},"body":{"entities/ErrorReportEntity.html":{}}}],["report/entities/error.entity.ts:18",{"_index":576,"title":{},"body":{"entities/ErrorReportEntity.html":{}}}],["report/entities/error.entity.ts:21",{"_index":573,"title":{},"body":{"entities/ErrorReportEntity.html":{}}}],["report/entities/error.entity.ts:8",{"_index":578,"title":{},"body":{"entities/ErrorReportEntity.html":{}}}],["report/entities/performance.entity.ts",{"_index":961,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["report/entities/performance.entity.ts:105",{"_index":989,"title":{},"body":{"entities/PerformanceEntity.html":{}}}],["report/entities/performance.entity.ts:114",{"_index":977,"title":{},"body":{"entities/PerformanceEntity.html":{}}}],["report/entities/performance.entity.ts:13",{"_index":1079,"title":{},"body":{"classes/PerformanceEntry.html":{}}}],["report/entities/performance.entity.ts:130",{"_index":1024,"title":{},"body":{"entities/PerformanceEntity.html":{}}}],["report/entities/performance.entity.ts:18",{"_index":1080,"title":{},"body":{"classes/PerformanceEntry.html":{}}}],["report/entities/performance.entity.ts:23",{"_index":1081,"title":{},"body":{"classes/PerformanceEntry.html":{}}}],["report/entities/performance.entity.ts:54",{"_index":1043,"title":{},"body":{"entities/PerformanceEntity.html":{}}}],["report/entities/performance.entity.ts:57",{"_index":966,"title":{},"body":{"entities/PerformanceEntity.html":{}}}],["report/entities/performance.entity.ts:65",{"_index":1019,"title":{},"body":{"entities/PerformanceEntity.html":{}}}],["report/entities/performance.entity.ts:73",{"_index":1054,"title":{},"body":{"entities/PerformanceEntity.html":{}}}],["report/entities/performance.entity.ts:8",{"_index":1077,"title":{},"body":{"classes/PerformanceEntry.html":{}}}],["report/entities/performance.entity.ts:82",{"_index":1046,"title":{},"body":{"entities/PerformanceEntity.html":{}}}],["report/entities/performance.entity.ts:91",{"_index":968,"title":{},"body":{"entities/PerformanceEntity.html":{}}}],["report/fe",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"controllers/FeReportController.html":{},"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"coverage.html":{}}}],["reported",{"_index":971,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["repository",{"_index":621,"title":{},"body":{"injectables/FeReportService.html":{},"injectables/MeetingRoomService.html":{},"index.html":{}}}],["representing",{"_index":991,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["req",{"_index":1167,"title":{},"body":{"controllers/SseController.html":{},"injectables/SseService.html":{}}}],["req.connection.on",{"_index":1213,"title":{},"body":{"injectables/SseService.html":{}}}],["req.socket.remoteaddress",{"_index":1178,"title":{},"body":{"controllers/SseController.html":{}}}],["req.socket.remoteport",{"_index":1179,"title":{},"body":{"controllers/SseController.html":{}}}],["request",{"_index":477,"title":{"interfaces/Request.html":{}},"body":{"injectables/BookingService.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/SseController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization",{"_index":743,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["request.headers['user",{"_index":705,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["request.user",{"_index":748,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"miscellaneous/variables.html":{}}}],["request.user.permissions",{"_index":1091,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["request.user?.userid",{"_index":713,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["request.user?.username",{"_index":714,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["request.user[data",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requiredpermissions",{"_index":1092,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requirelogin",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"controllers/BookingController.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"interfaces/Request.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requireloginkey",{"_index":731,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requirepermission",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requirepermission('ddd",{"_index":51,"title":{},"body":{"controllers/AppController.html":{}}}],["requirepermissionkey",{"_index":1090,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":442,"title":{},"body":{"injectables/BookingService.html":{},"classes/CustomExceptionFilter.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"injectables/StatisticService.html":{}}}],["res?.message?.join",{"_index":518,"title":{},"body":{"classes/CustomExceptionFilter.html":{}}}],["reset",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/FeReportModule.html":{},"modules/MeetingRoomModule.html":{},"modules/MinioModule.html":{},"modules/RedisModule.html":{},"modules/SseModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":509,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["response.interceptor.ts",{"_index":635,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"coverage.html":{}}}],["response.interceptor.ts:13",{"_index":641,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{}}}],["response.statuscode",{"_index":513,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["restore",{"_index":1041,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["restored",{"_index":1010,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["results",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListDto.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmitSSEData.html":{},"classes/ErrorReportDto.html":{},"entities/ErrorReportEntity.html":{},"controllers/FeReportController.html":{},"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/FreezeUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"modules/MinioModule.html":{},"injectables/MinioService.html":{},"classes/PerformanceDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenVo.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookignCountDto.html":{},"classes/UserBookignCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BookingController.html":{},"injectables/BookingService.html":{},"controllers/FeReportController.html":{},"injectables/FormatResponseInterceptor.html":{},"controllers/HealthController.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1026,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["returns",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookingController.html":{},"injectables/BookingService.html":{},"classes/CustomExceptionFilter.html":{},"injectables/EmailService.html":{},"controllers/FeReportController.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"controllers/HealthController.html":{},"injectables/InvokeRecordInterceptor.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"injectables/MinioService.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{}}}],["role",{"_index":1148,"title":{"entities/Role.html":{}},"body":{"entities/Role.html":{},"entities/User.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["role.entity",{"_index":1349,"title":{},"body":{"entities/User.html":{}}}],["role_permissions",{"_index":1153,"title":{},"body":{"entities/Role.html":{}}}],["roles",{"_index":726,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{}}}],["room",{"_index":170,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"injectables/EmailService.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UserBookignCountDto.html":{},"coverage.html":{}}}],["room.controller",{"_index":866,"title":{},"body":{"modules/MeetingRoomModule.html":{}}}],["room.controller.ts",{"_index":811,"title":{},"body":{"controllers/MeetingRoomController.html":{},"coverage.html":{}}}],["room.controller.ts:33",{"_index":825,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["room.controller.ts:42",{"_index":814,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["room.controller.ts:48",{"_index":821,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["room.controller.ts:54",{"_index":829,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["room.controller.ts:60",{"_index":818,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["room.dto",{"_index":836,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"classes/UpdateMeetingRoomDto.html":{}}}],["room.dto.ts",{"_index":493,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{},"classes/UpdateMeetingRoomDto.html":{},"coverage.html":{}}}],["room.entity",{"_index":222,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"classes/CreateMeetingRoomDto.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"injectables/StatisticService.html":{},"classes/UpdateMeetingRoomDto.html":{}}}],["room.entity.ts",{"_index":779,"title":{},"body":{"entities/MeetingRoom.html":{},"coverage.html":{}}}],["room.entity.ts:102",{"_index":804,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.entity.ts:25",{"_index":795,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.entity.ts:38",{"_index":803,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.entity.ts:47",{"_index":785,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.entity.ts:60",{"_index":800,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.entity.ts:72",{"_index":792,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.entity.ts:84",{"_index":789,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.entity.ts:92",{"_index":797,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.entity.ts:97",{"_index":786,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.module",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["room.module.ts",{"_index":865,"title":{},"body":{"modules/MeetingRoomModule.html":{}}}],["room.service",{"_index":832,"title":{},"body":{"controllers/MeetingRoomController.html":{},"modules/MeetingRoomModule.html":{}}}],["room.service.ts",{"_index":868,"title":{},"body":{"injectables/MeetingRoomService.html":{},"coverage.html":{}}}],["room.service.ts:119",{"_index":877,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room.service.ts:12",{"_index":871,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room.service.ts:125",{"_index":873,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room.service.ts:18",{"_index":878,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room.service.ts:40",{"_index":875,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room.service.ts:78",{"_index":872,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room.service.ts:90",{"_index":879,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room/dto/create",{"_index":492,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{},"coverage.html":{}}}],["room/dto/meeting",{"_index":855,"title":{},"body":{"classes/MeetingRoomListDto.html":{},"coverage.html":{}}}],["room/dto/update",{"_index":1301,"title":{},"body":{"classes/UpdateMeetingRoomDto.html":{},"coverage.html":{}}}],["room/entities/meeting",{"_index":221,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"entities/MeetingRoom.html":{},"injectables/StatisticService.html":{},"coverage.html":{}}}],["room/meeting",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"controllers/MeetingRoomController.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"coverage.html":{}}}],["room/vo/meeting",{"_index":860,"title":{},"body":{"classes/MeetingRoomListVo.html":{},"coverage.html":{}}}],["room1",{"_index":385,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{}}}],["room1.capacity",{"_index":882,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room1.equipment",{"_index":883,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room1.location",{"_index":884,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room1.name",{"_index":881,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room2",{"_index":387,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{}}}],["room2.capacity",{"_index":886,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room2.equipment",{"_index":888,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room2.location",{"_index":889,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room2.name",{"_index":885,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room3",{"_index":890,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room3.capacity",{"_index":892,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room3.equipment",{"_index":893,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room3.location",{"_index":894,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room3.name",{"_index":891,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["run",{"_index":1601,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":646,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"dependencies.html":{}}}],["same",{"_index":974,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["scalable",{"_index":1588,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1495,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["secret",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["secretkey",{"_index":955,"title":{},"body":{"injectables/MinioService.html":{}}}],["secure",{"_index":538,"title":{},"body":{"injectables/EmailService.html":{}}}],["select",{"_index":468,"title":{},"body":{"injectables/BookingService.html":{}}}],["select('m.id",{"_index":1287,"title":{},"body":{"injectables/StatisticService.html":{}}}],["select('u.id",{"_index":1274,"title":{},"body":{"injectables/StatisticService.html":{}}}],["sendmail",{"_index":528,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendmail(undefined",{"_index":531,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendtoclient",{"_index":1195,"title":{},"body":{"injectables/SseService.html":{}}}],["sendtoclient(clientid",{"_index":1204,"title":{},"body":{"injectables/SseService.html":{}}}],["sent",{"_index":999,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["server",{"_index":1589,"title":{},"body":{"index.html":{}}}],["set",{"_index":1114,"title":{},"body":{"injectables/RedisService.html":{}}}],["set(key",{"_index":1117,"title":{},"body":{"injectables/RedisService.html":{}}}],["setmetadata('require",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["setmetadata(requireloginkey",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(requirepermissionkey",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sha256_password",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["shifts",{"_index":987,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["shouldnot",{"_index":488,"title":{},"body":{"classes/CreateBookingDto.html":{}}}],["side",{"_index":1590,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["skip",{"_index":426,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{}}}],["skipcount",{"_index":413,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{}}}],["smtp.sina.com",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["socket",{"_index":1107,"title":{},"body":{"modules/RedisModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListDto.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/EmitSSEData.html":{},"classes/ErrorReportDto.html":{},"entities/ErrorReportEntity.html":{},"controllers/FeReportController.html":{},"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/FreezeUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"modules/MinioModule.html":{},"injectables/MinioService.html":{},"classes/PerformanceDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RefreshTokenDto.html":{},"classes/RefreshTokenVo.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookignCountDto.html":{},"classes/UserBookignCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"index.html":{}}}],["sponsors",{"_index":1619,"title":{},"body":{"index.html":{}}}],["src/.../aop.ts",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../booking.entity.ts",{"_index":1575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../custom.decorator.ts",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1579,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../md5.ts",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../performance.entity.ts",{"_index":1576,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../repl.ts",{"_index":1580,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sse.dto.ts",{"_index":1577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../swagger.ts",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:22",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:29",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":157,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":158,"title":{},"body":{"injectables/AppService.html":{}}}],["src/booking/booking.controller.ts",{"_index":236,"title":{},"body":{"controllers/BookingController.html":{},"coverage.html":{}}}],["src/booking/booking.controller.ts:30",{"_index":248,"title":{},"body":{"controllers/BookingController.html":{}}}],["src/booking/booking.controller.ts:39",{"_index":256,"title":{},"body":{"controllers/BookingController.html":{}}}],["src/booking/booking.controller.ts:45",{"_index":252,"title":{},"body":{"controllers/BookingController.html":{}}}],["src/booking/booking.controller.ts:51",{"_index":259,"title":{},"body":{"controllers/BookingController.html":{}}}],["src/booking/booking.controller.ts:57",{"_index":262,"title":{},"body":{"controllers/BookingController.html":{}}}],["src/booking/booking.controller.ts:63",{"_index":265,"title":{},"body":{"controllers/BookingController.html":{}}}],["src/booking/booking.module.ts",{"_index":342,"title":{},"body":{"modules/BookingModule.html":{}}}],["src/booking/booking.service.ts",{"_index":347,"title":{},"body":{"injectables/BookingService.html":{},"coverage.html":{}}}],["src/booking/booking.service.ts:146",{"_index":358,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:180",{"_index":360,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:193",{"_index":365,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:206",{"_index":366,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:21",{"_index":356,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:219",{"_index":367,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:33",{"_index":364,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:81",{"_index":363,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/dto/booking",{"_index":309,"title":{},"body":{"classes/BookingListDto.html":{},"coverage.html":{}}}],["src/booking/dto/create",{"_index":482,"title":{},"body":{"classes/CreateBookingDto.html":{},"coverage.html":{}}}],["src/booking/entities/booking.entity",{"_index":1270,"title":{},"body":{"injectables/StatisticService.html":{}}}],["src/booking/entities/booking.entity.ts",{"_index":164,"title":{},"body":{"entities/Booking.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/booking/entities/booking.entity.ts:31",{"_index":189,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/entities/booking.entity.ts:42",{"_index":200,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/entities/booking.entity.ts:53",{"_index":187,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/entities/booking.entity.ts:62",{"_index":204,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/entities/booking.entity.ts:71",{"_index":195,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/entities/booking.entity.ts:74",{"_index":208,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/entities/booking.entity.ts:77",{"_index":198,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/entities/booking.entity.ts:82",{"_index":179,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/entities/booking.entity.ts:87",{"_index":207,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/vo/booking",{"_index":331,"title":{},"body":{"classes/BookingListVo.html":{},"coverage.html":{}}}],["src/common",{"_index":274,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["src/common/decorators/custom.decorator.ts",{"_index":1526,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/filters/custom",{"_index":498,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"coverage.html":{}}}],["src/common/filters/unlogin.filter.ts",{"_index":1294,"title":{},"body":{"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"coverage.html":{}}}],["src/common/filters/unlogin.filter.ts:11",{"_index":1296,"title":{},"body":{"classes/UnLoginException.html":{}}}],["src/common/filters/unlogin.filter.ts:20",{"_index":1300,"title":{},"body":{"classes/UnloginFilter.html":{}}}],["src/common/guards/login.guard.ts",{"_index":724,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["src/common/guards/login.guard.ts:33",{"_index":760,"title":{},"body":{"guards/LoginGuard.html":{}}}],["src/common/guards/login.guard.ts:41",{"_index":762,"title":{},"body":{"guards/LoginGuard.html":{}}}],["src/common/guards/permission.guard.ts",{"_index":1086,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["src/common/guards/permission.guard.ts:14",{"_index":1087,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["src/common/guards/permission.guard.ts:17",{"_index":1088,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["src/common/interceptors/format",{"_index":634,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/invoke",{"_index":696,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{},"coverage.html":{}}}],["src/config/index.ts",{"_index":1529,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants",{"_index":732,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["src/constants/index.ts",{"_index":1530,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/email/email.module",{"_index":343,"title":{},"body":{"modules/BookingModule.html":{}}}],["src/email/email.module.ts",{"_index":523,"title":{},"body":{"modules/EmailModule.html":{}}}],["src/email/email.service",{"_index":374,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/email/email.service.ts",{"_index":525,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{}}}],["src/email/email.service.ts:22",{"_index":532,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:8",{"_index":530,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/fe",{"_index":561,"title":{},"body":{"classes/ErrorReportDto.html":{},"entities/ErrorReportEntity.html":{},"controllers/FeReportController.html":{},"modules/FeReportModule.html":{},"injectables/FeReportService.html":{},"classes/PerformanceDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/health/health.controller.ts",{"_index":657,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:26",{"_index":661,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":691,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1533,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/meeting",{"_index":220,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"classes/CreateMeetingRoomDto.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"injectables/StatisticService.html":{},"classes/UpdateMeetingRoomDto.html":{},"coverage.html":{}}}],["src/minio/minio.module",{"_index":1510,"title":{},"body":{"modules/UserModule.html":{}}}],["src/minio/minio.module.ts",{"_index":935,"title":{},"body":{"modules/MinioModule.html":{}}}],["src/minio/minio.service.ts",{"_index":937,"title":{},"body":{"injectables/MinioService.html":{},"coverage.html":{}}}],["src/minio/minio.service.ts:19",{"_index":944,"title":{},"body":{"injectables/MinioService.html":{}}}],["src/minio/minio.service.ts:8",{"_index":940,"title":{},"body":{"injectables/MinioService.html":{}}}],["src/redis/redis.module",{"_index":344,"title":{},"body":{"modules/BookingModule.html":{}}}],["src/redis/redis.module.ts",{"_index":1102,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/redis/redis.service",{"_index":373,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/redis/redis.service.ts",{"_index":1112,"title":{},"body":{"injectables/RedisService.html":{},"coverage.html":{}}}],["src/redis/redis.service.ts:10",{"_index":1116,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:14",{"_index":1119,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:8",{"_index":1123,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/repl.ts",{"_index":1535,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/sse/dto/sse.dto.ts",{"_index":548,"title":{},"body":{"classes/EmitSSEData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/sse/dto/sse.dto.ts:11",{"_index":557,"title":{},"body":{"classes/EmitSSEData.html":{}}}],["src/sse/dto/sse.dto.ts:15",{"_index":553,"title":{},"body":{"classes/EmitSSEData.html":{}}}],["src/sse/dto/sse.dto.ts:17",{"_index":555,"title":{},"body":{"classes/EmitSSEData.html":{}}}],["src/sse/sse.controller.ts",{"_index":1159,"title":{},"body":{"controllers/SseController.html":{},"coverage.html":{}}}],["src/sse/sse.controller.ts:19",{"_index":1166,"title":{},"body":{"controllers/SseController.html":{}}}],["src/sse/sse.controller.ts:33",{"_index":1163,"title":{},"body":{"controllers/SseController.html":{}}}],["src/sse/sse.module.ts",{"_index":1187,"title":{},"body":{"modules/SseModule.html":{}}}],["src/sse/sse.service.ts",{"_index":1191,"title":{},"body":{"injectables/SseService.html":{},"coverage.html":{}}}],["src/sse/sse.service.ts:11",{"_index":1198,"title":{},"body":{"injectables/SseService.html":{}}}],["src/sse/sse.service.ts:14",{"_index":1203,"title":{},"body":{"injectables/SseService.html":{}}}],["src/sse/sse.service.ts:18",{"_index":1200,"title":{},"body":{"injectables/SseService.html":{}}}],["src/sse/sse.service.ts:35",{"_index":1205,"title":{},"body":{"injectables/SseService.html":{}}}],["src/sse/sse.service.ts:42",{"_index":1206,"title":{},"body":{"injectables/SseService.html":{}}}],["src/sse/sse.service.ts:52",{"_index":1207,"title":{},"body":{"injectables/SseService.html":{}}}],["src/statistic/dto/meeting",{"_index":918,"title":{},"body":{"classes/MeetingRoomUsedCountDto.html":{},"coverage.html":{}}}],["src/statistic/dto/user",{"_index":1353,"title":{},"body":{"classes/UserBookignCountDto.html":{},"coverage.html":{}}}],["src/statistic/statistic.controller.ts",{"_index":1233,"title":{},"body":{"controllers/StatisticController.html":{},"coverage.html":{}}}],["src/statistic/statistic.controller.ts:21",{"_index":1243,"title":{},"body":{"controllers/StatisticController.html":{}}}],["src/statistic/statistic.controller.ts:29",{"_index":1239,"title":{},"body":{"controllers/StatisticController.html":{}}}],["src/statistic/statistic.module.ts",{"_index":1262,"title":{},"body":{"modules/StatisticModule.html":{}}}],["src/statistic/statistic.service.ts",{"_index":1264,"title":{},"body":{"injectables/StatisticService.html":{},"coverage.html":{}}}],["src/statistic/statistic.service.ts:13",{"_index":1266,"title":{},"body":{"injectables/StatisticService.html":{}}}],["src/statistic/statistic.service.ts:19",{"_index":1269,"title":{},"body":{"injectables/StatisticService.html":{}}}],["src/statistic/statistic.service.ts:38",{"_index":1267,"title":{},"body":{"injectables/StatisticService.html":{}}}],["src/statistic/vo/meeting",{"_index":925,"title":{},"body":{"classes/MeetingRoomUsedCountVo.html":{},"coverage.html":{}}}],["src/statistic/vo/user",{"_index":1356,"title":{},"body":{"classes/UserBookignCountVo.html":{},"coverage.html":{}}}],["src/user/dto/freeze",{"_index":651,"title":{},"body":{"classes/FreezeUserDto.html":{},"coverage.html":{}}}],["src/user/dto/login",{"_index":764,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/user/dto/refresh",{"_index":1128,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["src/user/dto/register",{"_index":1139,"title":{},"body":{"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":1305,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"classes/UpdateUserPasswordDto.html":{},"coverage.html":{}}}],["src/user/dto/user",{"_index":1504,"title":{},"body":{"classes/UserListDto.html":{},"coverage.html":{}}}],["src/user/entities/permission.entity",{"_index":733,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["src/user/entities/permission.entity.ts",{"_index":1082,"title":{},"body":{"entities/Permission.html":{},"coverage.html":{}}}],["src/user/entities/permission.entity.ts:14",{"_index":1083,"title":{},"body":{"entities/Permission.html":{}}}],["src/user/entities/permission.entity.ts:20",{"_index":1084,"title":{},"body":{"entities/Permission.html":{}}}],["src/user/entities/permission.entity.ts:8",{"_index":1085,"title":{},"body":{"entities/Permission.html":{}}}],["src/user/entities/role.entity.ts",{"_index":1149,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/user/entities/role.entity.ts:16",{"_index":1150,"title":{},"body":{"entities/Role.html":{}}}],["src/user/entities/role.entity.ts:22",{"_index":1151,"title":{},"body":{"entities/Role.html":{}}}],["src/user/entities/role.entity.ts:28",{"_index":1154,"title":{},"body":{"entities/Role.html":{}}}],["src/user/entities/user.entity",{"_index":223,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"injectables/StatisticService.html":{}}}],["src/user/entities/user.entity.ts",{"_index":1314,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:101",{"_index":1329,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:108",{"_index":1327,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:111",{"_index":1317,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:114",{"_index":1345,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:120",{"_index":1344,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:26",{"_index":1325,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:37",{"_index":1347,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:50",{"_index":1340,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:61",{"_index":1335,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:76",{"_index":1319,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:85",{"_index":1324,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:94",{"_index":1342,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.controller.ts",{"_index":1358,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:109",{"_index":1397,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:120",{"_index":1400,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:128",{"_index":1379,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:136",{"_index":1386,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:171",{"_index":1414,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:43",{"_index":1392,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:49",{"_index":1376,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:56",{"_index":1417,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:63",{"_index":1368,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:69",{"_index":1389,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:75",{"_index":1372,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:85",{"_index":1382,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:92",{"_index":1404,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:98",{"_index":1408,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":1508,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":1537,"title":{},"body":{"coverage.html":{}}}],["src/user/vo/login",{"_index":770,"title":{},"body":{"classes/LoginUserVo.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["src/user/vo/refresh",{"_index":1134,"title":{},"body":{"classes/RefreshTokenVo.html":{},"coverage.html":{}}}],["src/user/vo/user",{"_index":1499,"title":{},"body":{"classes/UserDetailVo.html":{},"classes/UserListVo.html":{},"coverage.html":{}}}],["src/utils",{"_index":276,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["src/utils/aop.ts",{"_index":1539,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/md5.ts",{"_index":1541,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/swagger.ts",{"_index":1543,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sse",{"_index":1160,"title":{},"body":{"controllers/SseController.html":{}}}],["sse('update_record",{"_index":1165,"title":{},"body":{"controllers/SseController.html":{}}}],["sse.controller",{"_index":1189,"title":{},"body":{"modules/SseModule.html":{}}}],["sse.service",{"_index":1174,"title":{},"body":{"controllers/SseController.html":{},"modules/SseModule.html":{}}}],["sse/sse.module",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["sse:record.updated_sse').pipe",{"_index":1182,"title":{},"body":{"controllers/SseController.html":{}}}],["sseactionenum",{"_index":551,"title":{},"body":{"classes/EmitSSEData.html":{},"miscellaneous/enumerations.html":{}}}],["ssecontroller",{"_index":1158,"title":{"controllers/SseController.html":{}},"body":{"controllers/SseController.html":{},"modules/SseModule.html":{},"coverage.html":{}}}],["ssemodule",{"_index":76,"title":{"modules/SseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SseModule.html":{},"modules.html":{},"overview.html":{}}}],["sseservice",{"_index":1173,"title":{"injectables/SseService.html":{}},"body":{"controllers/SseController.html":{},"modules/SseModule.html":{},"injectables/SseService.html":{},"coverage.html":{},"overview.html":{}}}],["start",{"_index":199,"title":{},"body":{"entities/Booking.html":{},"index.html":{}}}],["start:dev",{"_index":1604,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1606,"title":{},"body":{"index.html":{}}}],["started",{"_index":1582,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1594,"title":{},"body":{"index.html":{}}}],["startheartbeat",{"_index":1196,"title":{},"body":{"injectables/SseService.html":{}}}],["starttime",{"_index":171,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/MeetingRoomUsedCountDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"injectables/StatisticService.html":{},"classes/UserBookignCountDto.html":{}}}],["statements",{"_index":1518,"title":{},"body":{"coverage.html":{}}}],["statistic",{"_index":1234,"title":{},"body":{"controllers/StatisticController.html":{}}}],["statistic.controller",{"_index":1263,"title":{},"body":{"modules/StatisticModule.html":{}}}],["statistic.service",{"_index":1246,"title":{},"body":{"controllers/StatisticController.html":{},"modules/StatisticModule.html":{}}}],["statistic/statistic.module",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["statisticcontroller",{"_index":1232,"title":{"controllers/StatisticController.html":{}},"body":{"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"coverage.html":{}}}],["statisticmodule",{"_index":77,"title":{"modules/StatisticModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatisticModule.html":{},"modules.html":{},"overview.html":{}}}],["statisticservice",{"_index":1245,"title":{"injectables/StatisticService.html":{}},"body":{"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"coverage.html":{},"overview.html":{}}}],["status",{"_index":172,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{}}}],["stay",{"_index":1627,"title":{},"body":{"index.html":{}}}],["str",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"classes/BookingListDto.html":{},"classes/CustomExceptionFilter.html":{},"classes/EmitSSEData.html":{},"entities/ErrorReportEntity.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"injectables/MinioService.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"injectables/RedisService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"injectables/SseService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"entities/User.html":{},"classes/UserBookignCountDto.html":{},"classes/UserBookignCountVo.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":473,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EmailService.html":{}}}],["subscribe((heartbeat",{"_index":1226,"title":{},"body":{"injectables/SseService.html":{}}}],["success",{"_index":452,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{}}}],["support",{"_index":1032,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":1637,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":545,"title":{},"body":{"injectables/EmailService.html":{}}}],["table",{"_index":1546,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1545,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":427,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{}}}],["tap",{"_index":702,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["tap((res",{"_index":717,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["terminusmodule",{"_index":692,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":1609,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1612,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1611,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1608,"title":{},"body":{"index.html":{}}}],["text",{"_index":584,"title":{},"body":{"entities/ErrorReportEntity.html":{}}}],["text'})@isstring()@isnotempty",{"_index":574,"title":{},"body":{"entities/ErrorReportEntity.html":{}}}],["thanks",{"_index":1618,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["this.bookingservice.add(booking",{"_index":291,"title":{},"body":{"controllers/BookingController.html":{}}}],["this.bookingservice.apply(id",{"_index":298,"title":{},"body":{"controllers/BookingController.html":{}}}],["this.bookingservice.find(bookinglistdto",{"_index":295,"title":{},"body":{"controllers/BookingController.html":{}}}],["this.bookingservice.reject(id",{"_index":301,"title":{},"body":{"controllers/BookingController.html":{}}}],["this.bookingservice.unbind(id",{"_index":304,"title":{},"body":{"controllers/BookingController.html":{}}}],["this.bookingservice.urge(id",{"_index":307,"title":{},"body":{"controllers/BookingController.html":{}}}],["this.clients.delete(clientid",{"_index":1215,"title":{},"body":{"injectables/SseService.html":{}}}],["this.clients.foreach((_client",{"_index":1227,"title":{},"body":{"injectables/SseService.html":{}}}],["this.clients.get(clientid",{"_index":1211,"title":{},"body":{"injectables/SseService.html":{}}}],["this.clients.set(clientid",{"_index":1212,"title":{},"body":{"injectables/SseService.html":{}}}],["this.configservice.get('email_password",{"_index":543,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.configservice.get('email_user",{"_index":541,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.configservice.get('minio_access_key",{"_index":954,"title":{},"body":{"injectables/MinioService.html":{}}}],["this.configservice.get('minio_host",{"_index":950,"title":{},"body":{"injectables/MinioService.html":{}}}],["this.configservice.get('minio_port",{"_index":951,"title":{},"body":{"injectables/MinioService.html":{}}}],["this.configservice.get('minio_secret_key",{"_index":956,"title":{},"body":{"injectables/MinioService.html":{}}}],["this.configservice.get('nodemailer_host",{"_index":536,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.configservice.get('nodemailer_port",{"_index":537,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.db.pingcheck('database",{"_index":679,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage('storage",{"_index":680,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.emailservice.sendmail",{"_index":472,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.entitymanager",{"_index":1271,"title":{},"body":{"injectables/StatisticService.html":{}}}],["this.entitymanager.findandcount",{"_index":424,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.entitymanager.findone(user",{"_index":467,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.entitymanager.findoneby(booking",{"_index":443,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.entitymanager.findoneby(meetingroom",{"_index":386,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.entitymanager.findoneby(user",{"_index":381,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.entitymanager.save(booking",{"_index":397,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.entitymanager.update",{"_index":450,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.errorreportrepository.save(error",{"_index":633,"title":{},"body":{"injectables/FeReportService.html":{}}}],["this.eventemitter.emit('sse:record.updated_sse",{"_index":1210,"title":{},"body":{"injectables/SseService.html":{}}}],["this.eventemitter.on('sse:record.updated_sse",{"_index":1230,"title":{},"body":{"injectables/SseService.html":{}}}],["this.fereportservice.errorreport(error",{"_index":609,"title":{},"body":{"controllers/FeReportController.html":{}}}],["this.fereportservice.performancereport(metric",{"_index":606,"title":{},"body":{"controllers/FeReportController.html":{}}}],["this.health.check",{"_index":675,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck('nestjs",{"_index":676,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jwtservice.verify(token",{"_index":747,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["this.logger.debug",{"_index":709,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["this.logger.debug(`response",{"_index":719,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["this.meetingroomservice.create(meetingroomdto",{"_index":845,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["this.meetingroomservice.delete(id",{"_index":854,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["this.meetingroomservice.find(meetingroomlistdto",{"_index":841,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["this.meetingroomservice.findbyid(id",{"_index":848,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["this.meetingroomservice.update(meetingroomdto",{"_index":851,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["this.memory.checkheap('memory_heap",{"_index":687,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss('memory_rss",{"_index":690,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.message",{"_index":1297,"title":{},"body":{"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["this.minioclient",{"_index":948,"title":{},"body":{"injectables/MinioService.html":{}}}],["this.minioclient.putobject(bucketname",{"_index":957,"title":{},"body":{"injectables/MinioService.html":{}}}],["this.performancerepository.save(metric",{"_index":632,"title":{},"body":{"injectables/FeReportService.html":{}}}],["this.redisclient.expire(key",{"_index":1126,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.redisclient.get(key",{"_index":1124,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.redisclient.set(key",{"_index":1125,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.redisservice.get('admin_email",{"_index":465,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.redisservice.get('urge_",{"_index":456,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.redisservice.set('admin_email",{"_index":471,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.redisservice.set('urge_",{"_index":480,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.reflector.getallandoverride",{"_index":1093,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.reflector.getallandoverride(requireloginkey",{"_index":739,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["this.repository.delete",{"_index":916,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["this.repository.findandcount",{"_index":901,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["this.repository.findoneby",{"_index":902,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["this.repository.insert([room1",{"_index":895,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["this.repository.save(meetingroomdto",{"_index":904,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["this.repository.update",{"_index":915,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["this.sendtoclient(clientid",{"_index":1228,"title":{},"body":{"injectables/SseService.html":{}}}],["this.sseservice.addclient(`${address}:${port",{"_index":1180,"title":{},"body":{"controllers/SseController.html":{}}}],["this.sseservice.startheartbeat",{"_index":1183,"title":{},"body":{"controllers/SseController.html":{}}}],["this.statisticservice.meetingroomusedcount(meetingroomusedcountdto",{"_index":1259,"title":{},"body":{"controllers/StatisticController.html":{}}}],["this.statisticservice.userbookingcount(userbookigncountdto",{"_index":1256,"title":{},"body":{"controllers/StatisticController.html":{}}}],["this.transporter",{"_index":535,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.transporter.sendmail",{"_index":544,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.userservice.findusers(userlistdto",{"_index":1476,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.freezeuserbyid(id",{"_index":1474,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuserinfo(userid",{"_index":1460,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.login(loginuser",{"_index":1449,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.refresh(refreshtoken",{"_index":1455,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.register(registeruser",{"_index":1443,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.registercaptcha(address",{"_index":1445,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatepassword(passworddto",{"_index":1463,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatepasswordcaptcha(address",{"_index":1465,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateuserinfo(userid",{"_index":1468,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateuserinfocaptcha(address",{"_index":1471,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.uploadfile(file",{"_index":1498,"title":{},"body":{"controllers/UserController.html":{}}}],["thresholdpercent",{"_index":685,"title":{},"body":{"controllers/HealthController.html":{}}}],["thresholds",{"_index":1053,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["throw",{"_index":433,"title":{},"body":{"injectables/BookingService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"injectables/MeetingRoomService.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":178,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"entities/MeetingRoom.html":{}}}],["time'})@apiproperty({type",{"_index":182,"title":{},"body":{"entities/Booking.html":{}}}],["time'})@isnotempty({message",{"_index":185,"title":{},"body":{"entities/Booking.html":{}}}],["time1",{"_index":1283,"title":{},"body":{"injectables/StatisticService.html":{}}}],["time2",{"_index":1284,"title":{},"body":{"injectables/StatisticService.html":{}}}],["timestamp",{"_index":571,"title":{},"body":{"entities/ErrorReportEntity.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["timing",{"_index":1027,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["tmodel",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["together",{"_index":1002,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["token",{"_index":745,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/RefreshTokenDto.html":{},"interfaces/Request.html":{}}}],["token.dto",{"_index":1430,"title":{},"body":{"controllers/UserController.html":{}}}],["token.dto.ts",{"_index":1129,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:10",{"_index":1132,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["token.vo",{"_index":1435,"title":{},"body":{"controllers/UserController.html":{}}}],["token.vo.ts",{"_index":1135,"title":{},"body":{"classes/RefreshTokenVo.html":{},"coverage.html":{}}}],["tool",{"_index":995,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["total",{"_index":1004,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["totalcount",{"_index":334,"title":{},"body":{"classes/BookingListVo.html":{},"injectables/BookingService.html":{},"classes/MeetingRoomListVo.html":{},"injectables/MeetingRoomService.html":{},"classes/UserListVo.html":{}}}],["touch",{"_index":1628,"title":{},"body":{"index.html":{}}}],["transform",{"_index":317,"title":{},"body":{"classes/BookingListDto.html":{},"classes/MeetingRoomListDto.html":{},"classes/UserListDto.html":{}}}],["transformer",{"_index":327,"title":{},"body":{"classes/BookingListDto.html":{},"classes/MeetingRoomListDto.html":{},"classes/UserListDto.html":{},"dependencies.html":{}}}],["transporter",{"_index":527,"title":{},"body":{"injectables/EmailService.html":{}}}],["true",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/BookingService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"entities/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["true})@isnotempty({message",{"_index":1346,"title":{},"body":{"entities/User.html":{}}}],["true})@isoptional()@isstring",{"_index":1323,"title":{},"body":{"entities/User.html":{}}}],["try",{"_index":744,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["ttfb",{"_index":1066,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"miscellaneous/enumerations.html":{}}}],["ttl",{"_index":1118,"title":{},"body":{"injectables/RedisService.html":{}}}],["twitter",{"_index":1634,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListDto.html":{},"classes/BookingListVo.html":{},"injectables/BookingService.html":{},"classes/CreateBookingDto.html":{},"classes/CustomExceptionFilter.html":{},"injectables/EmailService.html":{},"classes/EmitSSEData.html":{},"entities/ErrorReportEntity.html":{},"controllers/FeReportController.html":{},"injectables/FeReportService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/FreezeUserDto.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomListVo.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"injectables/MinioService.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"entities/User.html":{},"classes/UserBookignCountDto.html":{},"classes/UserBookignCountVo.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":219,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"entities/ErrorReportEntity.html":{},"injectables/FeReportService.html":{},"entities/MeetingRoom.html":{},"injectables/MeetingRoomService.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/Permission.html":{},"entities/Role.html":{},"injectables/StatisticService.html":{},"entities/User.html":{},"dependencies.html":{}}}],["typeormhealthindicator",{"_index":665,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/FeReportModule.html":{},"modules/MeetingRoomModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([booking",{"_index":346,"title":{},"body":{"modules/BookingModule.html":{}}}],["typeormmodule.forfeature([errorreportentity",{"_index":616,"title":{},"body":{"modules/FeReportModule.html":{}}}],["typeormmodule.forfeature([meetingroom",{"_index":867,"title":{},"body":{"modules/MeetingRoomModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1514,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":1554,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1593,"title":{},"body":{"index.html":{}}}],["u",{"_index":1277,"title":{},"body":{"injectables/StatisticService.html":{}}}],["u.id",{"_index":1279,"title":{},"body":{"injectables/StatisticService.html":{}}}],["unauthorizedexception",{"_index":728,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["unbind",{"_index":242,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["unbind(@param('id",{"_index":303,"title":{},"body":{"controllers/BookingController.html":{}}}],["unbind(id",{"_index":260,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["undefined",{"_index":1029,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["undefined})@apiunifiedcreatedresponse",{"_index":1413,"title":{},"body":{"controllers/UserController.html":{}}}],["undefined})@isenum(bookingstatus)@isoptional",{"_index":203,"title":{},"body":{"entities/Booking.html":{}}}],["unifiedres",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unifiedresref",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unique",{"_index":990,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"entities/User.html":{}}}],["unit",{"_index":1607,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":361,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{},"injectables/RedisService.html":{},"injectables/StatisticService.html":{}}}],["unlicensed",{"_index":1649,"title":{},"body":{"properties.html":{}}}],["unloginexception",{"_index":734,"title":{"classes/UnLoginException.html":{}},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"coverage.html":{}}}],["unloginfilter",{"_index":117,"title":{"classes/UnloginFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"coverage.html":{}}}],["update",{"_index":206,"title":{},"body":{"entities/Booking.html":{},"classes/EmitSSEData.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["update(@body",{"_index":850,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["update(meetingroomdto",{"_index":826,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{}}}],["update(userid",{"_index":1394,"title":{},"body":{"controllers/UserController.html":{}}}],["updatecaptcha",{"_index":1362,"title":{},"body":{"controllers/UserController.html":{}}}],["updatecaptcha(@userinfo('email",{"_index":1470,"title":{},"body":{"controllers/UserController.html":{}}}],["updatecaptcha(address",{"_index":1398,"title":{},"body":{"controllers/UserController.html":{}}}],["updatedatecolumn",{"_index":218,"title":{},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/User.html":{}}}],["updatedatecolumn({comment",{"_index":205,"title":{},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{}}}],["updatemeetingroomdto",{"_index":827,"title":{"classes/UpdateMeetingRoomDto.html":{}},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"classes/UpdateMeetingRoomDto.html":{},"coverage.html":{}}}],["updatepassword",{"_index":1363,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepassword(@body",{"_index":1462,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepassword(passworddto",{"_index":1401,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepasswordcaptcha",{"_index":1364,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepasswordcaptcha(undefined",{"_index":1406,"title":{},"body":{"controllers/UserController.html":{}}}],["updaterecord",{"_index":1162,"title":{},"body":{"controllers/SseController.html":{},"injectables/SseService.html":{}}}],["updaterecord(req",{"_index":1164,"title":{},"body":{"controllers/SseController.html":{}}}],["updatetime",{"_index":173,"title":{},"body":{"entities/Booking.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"entities/User.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{}}}],["updateuserdto",{"_index":1304,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["updateuserpasswordcaptchadto",{"_index":1308,"title":{"classes/UpdateUserPasswordCaptchaDto.html":{}},"body":{"classes/UpdateUserPasswordCaptchaDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["updateuserpassworddto",{"_index":1312,"title":{"classes/UpdateUserPasswordDto.html":{}},"body":{"classes/UpdateUserPasswordDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["upload",{"_index":1492,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadedfile",{"_index":1418,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadfile",{"_index":939,"title":{},"body":{"injectables/MinioService.html":{},"controllers/UserController.html":{}}}],["uploadfile(@uploadedfile",{"_index":1497,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadfile(bucketname",{"_index":941,"title":{},"body":{"injectables/MinioService.html":{}}}],["uploadfile(file",{"_index":1409,"title":{},"body":{"controllers/UserController.html":{}}}],["urge",{"_index":243,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["urge(@param('id",{"_index":306,"title":{},"body":{"controllers/BookingController.html":{}}}],["urge(id",{"_index":263,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["useclass",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":919,"title":{},"body":{"classes/MeetingRoomUsedCountDto.html":{},"classes/MeetingRoomUsedCountVo.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UserBookignCountDto.html":{},"coverage.html":{}}}],["usedcount",{"_index":927,"title":{},"body":{"classes/MeetingRoomUsedCountVo.html":{},"injectables/StatisticService.html":{}}}],["usefactory(configservice",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{}}}],["useinterceptors",{"_index":1419,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":174,"title":{"entities/User.html":{}},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"classes/FreezeUserDto.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordCaptchaDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListDto.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["user.controller",{"_index":1511,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":768,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"controllers/UserController.html":{}}}],["user.dto.ts",{"_index":652,"title":{},"body":{"classes/FreezeUserDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":655,"title":{},"body":{"classes/FreezeUserDto.html":{}}}],["user.dto.ts:16",{"_index":1147,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.service",{"_index":1426,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.vo",{"_index":1137,"title":{},"body":{"classes/RefreshTokenVo.html":{},"controllers/UserController.html":{}}}],["user.vo.ts",{"_index":771,"title":{},"body":{"classes/LoginUserVo.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["user.vo.ts:11",{"_index":1501,"title":{},"body":{"classes/UserInfo.html":{}}}],["user.vo.ts:13",{"_index":1503,"title":{},"body":{"classes/UserInfo.html":{}}}],["user.vo.ts:15",{"_index":1502,"title":{},"body":{"classes/UserInfo.html":{}}}],["user.vo.ts:19",{"_index":776,"title":{},"body":{"classes/LoginUserVo.html":{}}}],["user.vo.ts:21",{"_index":774,"title":{},"body":{"classes/LoginUserVo.html":{}}}],["user.vo.ts:23",{"_index":775,"title":{},"body":{"classes/LoginUserVo.html":{}}}],["user/user.module",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["user1",{"_index":379,"title":{},"body":{"injectables/BookingService.html":{}}}],["user2",{"_index":383,"title":{},"body":{"injectables/BookingService.html":{}}}],["user_roles",{"_index":1343,"title":{},"body":{"entities/User.html":{}}}],["useragent",{"_index":704,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["userbookigncount",{"_index":1236,"title":{},"body":{"controllers/StatisticController.html":{}}}],["userbookigncount(userbookigncountdto",{"_index":1240,"title":{},"body":{"controllers/StatisticController.html":{}}}],["userbookigncountdto",{"_index":1241,"title":{"classes/UserBookignCountDto.html":{}},"body":{"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UserBookignCountDto.html":{},"coverage.html":{}}}],["userbookigncountvo",{"_index":1249,"title":{"classes/UserBookignCountVo.html":{}},"body":{"controllers/StatisticController.html":{},"classes/UserBookignCountVo.html":{},"coverage.html":{}}}],["userbookingcount",{"_index":1265,"title":{},"body":{"injectables/StatisticService.html":{}}}],["userbookingcount(userbookigncountdto",{"_index":1268,"title":{},"body":{"injectables/StatisticService.html":{}}}],["usercontroller",{"_index":1357,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdetailvo",{"_index":1436,"title":{"classes/UserDetailVo.html":{}},"body":{"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserListVo.html":{},"coverage.html":{}}}],["userid",{"_index":246,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"injectables/StatisticService.html":{},"classes/UserBookignCountVo.html":{},"controllers/UserController.html":{}}}],["userinfo",{"_index":14,"title":{"classes/UserInfo.html":{}},"body":{"controllers/AppController.html":{},"controllers/BookingController.html":{},"classes/LoginUserVo.html":{},"classes/RefreshTokenVo.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinfo('userid",{"_index":290,"title":{},"body":{"controllers/BookingController.html":{},"controllers/UserController.html":{}}}],["userlistdto",{"_index":1384,"title":{"classes/UserListDto.html":{}},"body":{"controllers/UserController.html":{},"classes/UserListDto.html":{},"coverage.html":{}}}],["userlistvo",{"_index":1438,"title":{"classes/UserListVo.html":{}},"body":{"controllers/UserController.html":{},"classes/UserListVo.html":{},"coverage.html":{}}}],["userlogin",{"_index":1365,"title":{},"body":{"controllers/UserController.html":{}}}],["userlogin(@body",{"_index":1448,"title":{},"body":{"controllers/UserController.html":{}}}],["userlogin(loginuser",{"_index":1415,"title":{},"body":{"controllers/UserController.html":{}}}],["usermodule",{"_index":78,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BookingListDto.html":{},"injectables/BookingService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"injectables/StatisticService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBookignCountVo.html":{},"classes/UserListDto.html":{}}}],["users",{"_index":1350,"title":{},"body":{"entities/User.html":{},"classes/UserListVo.html":{}}}],["userservice",{"_index":1425,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["usessl",{"_index":952,"title":{},"body":{"injectables/MinioService.html":{}}}],["utils",{"_index":601,"title":{},"body":{"controllers/FeReportController.html":{}}}],["validationpipe",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":214,"title":{},"body":{"entities/Booking.html":{},"classes/BookingListDto.html":{},"classes/CreateBookingDto.html":{},"classes/EmitSSEData.html":{},"entities/ErrorReportEntity.html":{},"classes/FreezeUserDto.html":{},"entities/MeetingRoom.html":{},"classes/MeetingRoomListDto.html":{},"classes/MeetingRoomUsedCountDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterCaptchaDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"classes/UserListDto.html":{},"dependencies.html":{}}}],["value",{"_index":329,"title":{},"body":{"classes/BookingListDto.html":{},"injectables/InvokeRecordInterceptor.html":{},"classes/MeetingRoomListDto.html":{},"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{},"injectables/RedisService.html":{},"injectables/SseService.html":{},"classes/UserListDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":998,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["variable",{"_index":1527,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1650,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1647,"title":{},"body":{"properties.html":{}}}],["visit",{"_index":1098,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["vo/booking",{"_index":284,"title":{},"body":{"controllers/BookingController.html":{}}}],["vo/login",{"_index":1433,"title":{},"body":{"controllers/UserController.html":{}}}],["vo/meeting",{"_index":835,"title":{},"body":{"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{}}}],["vo/refresh",{"_index":1434,"title":{},"body":{"controllers/UserController.html":{}}}],["vo/user",{"_index":1250,"title":{},"body":{"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["void",{"_index":508,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"injectables/FeReportService.html":{},"injectables/MeetingRoomService.html":{},"controllers/SseController.html":{},"injectables/SseService.html":{},"classes/UnloginFilter.html":{}}}],["wait",{"_index":462,"title":{},"body":{"injectables/BookingService.html":{}}}],["waiting",{"_index":478,"title":{},"body":{"injectables/BookingService.html":{}}}],["watch",{"_index":1602,"title":{},"body":{"index.html":{}}}],["webp'].includes(extname",{"_index":1488,"title":{},"body":{"controllers/UserController.html":{}}}],["website",{"_index":1632,"title":{},"body":{"index.html":{}}}],["where('b.starttime",{"_index":1282,"title":{},"body":{"injectables/StatisticService.html":{}}}],["whether",{"_index":1047,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["win32",{"_index":683,"title":{},"body":{"controllers/HealthController.html":{}}}],["within",{"_index":1048,"title":{},"body":{"entities/PerformanceEntity.html":{},"classes/PerformanceEntry.html":{}}}],["world",{"_index":160,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":1120,"title":{},"body":{"injectables/RedisService.html":{},"classes/UnLoginException.html":{}}}],["you'd",{"_index":1622,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/FeReportModule.html":{},"modules/MeetingRoomModule.html":{},"modules/MinioModule.html":{},"modules/RedisModule.html":{},"modules/SseModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                aaaa\n                            \n                            \n                                    \n                                bbb\n                            \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        aaaa\n                        \n                    \n                \n            \n            \n                \n                        \n                    aaaa(username: string, userInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('aaa')@RequireLogin()@RequirePermission('ddd')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userInfo\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bbb\n                        \n                    \n                \n            \n            \n                \n                        \n                    bbb()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('bbb')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiExcludeController } from '@nestjs/swagger';\n\nimport { AppService } from './app.service';\nimport { RequireLogin, RequirePermission, UserInfo } from './common';\n\n@Controller()\n@ApiExcludeController()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('hello')\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @Get('aaa')\n  // @SetMetadata('require-login', true)\n  // @SetMetadata('require-permission', ['ddd'])\n  @RequireLogin()\n  @RequirePermission('ddd')\n  aaaa(@UserInfo('username') username: string, @UserInfo() userInfo) {\n    console.log(username);\n    console.log(userInfo);\n    return 'aaa';\n  }\n\n  @Get('bbb')\n  bbb() {\n    return 'bbb';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nBookingModule\n\nBookingModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBookingModule->AppModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nAppModule -->\n\nEmailModule->AppModule\n\n\n\n\n\nFeReportModule\n\nFeReportModule\n\nAppModule -->\n\nFeReportModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMeetingRoomModule\n\nMeetingRoomModule\n\nAppModule -->\n\nMeetingRoomModule->AppModule\n\n\n\n\n\nMinioModule\n\nMinioModule\n\nAppModule -->\n\nMinioModule->AppModule\n\n\n\n\n\nSseModule\n\nSseModule\n\nAppModule -->\n\nSseModule->AppModule\n\n\n\n\n\nStatisticModule\n\nStatisticModule\n\nAppModule -->\n\nStatisticModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BookingModule\n                        \n                        \n                            EmailModule\n                        \n                        \n                            FeReportModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            MeetingRoomModule\n                        \n                        \n                            MinioModule\n                        \n                        \n                            SseModule\n                        \n                        \n                            StatisticModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, ValidationPipe } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_FILTER, APP_GUARD, APP_INTERCEPTOR, APP_PIPE } from '@nestjs/core';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JwtModule } from '@nestjs/jwt';\n\nimport { UserModule } from './user/user.module';\nimport { EmailModule } from './email/email.module';\nimport { HealthModule } from './health/health.module';\nimport { FeReportModule } from './fe-report/fe-report.module';\nimport { SseModule } from './sse/sse.module';\nimport { MinioModule } from './minio/minio.module';\nimport { MeetingRoomModule } from './meeting-room/meeting-room.module';\nimport { BookingModule } from './booking/booking.module';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { getConfig } from './config';\nimport {\n  CustomExceptionFilter,\n  FormatResponseInterceptor,\n  InvokeRecordInterceptor,\n  LoginGuard,\n  PermissionGuard,\n  UnloginFilter,\n} from './common';\nimport { StatisticModule } from './statistic/statistic.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [getConfig],\n    }),\n    TypeOrmModule.forRootAsync({\n      useFactory(configService: ConfigService) {\n        return {\n          type: 'mysql',\n          host: configService.get('MYSQL_HOST'),\n          port: +configService.get('MYSQL_PORT'),\n          username: configService.get('MYSQL_USERNAME'),\n          password: configService.get('MYSQL_PASSWORD'),\n          database: configService.get('MYSQL_DATABASE'),\n          synchronize: true,\n          logging: true,\n          autoLoadEntities: true,\n          poolSize: 10,\n          connectorPackage: 'mysql2',\n          extra: {\n            authPlugin: 'sha256_password',\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n    JwtModule.registerAsync({\n      global: true,\n      useFactory(configService: ConfigService) {\n        return {\n          secret: configService.get('JWT_SECRET'),\n          signOptions: {\n            expiresIn: configService.get(\n              'JWT_ACCESS_TOKEN_EXPIRES_TIME',\n            ),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n    EmailModule,\n    UserModule,\n    HealthModule,\n    FeReportModule,\n    MinioModule,\n    SseModule,\n    MeetingRoomModule,\n    BookingModule,\n    StatisticModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_PIPE,\n      useClass: ValidationPipe,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: LoginGuard,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: PermissionGuard,\n    },\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: FormatResponseInterceptor,\n    },\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: InvokeRecordInterceptor,\n    },\n    {\n      provide: APP_FILTER,\n      useClass: UnloginFilter,\n    },\n    {\n      provide: APP_FILTER,\n      useClass: CustomExceptionFilter,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Booking.html":{"url":"entities/Booking.html","title":"entity - Booking","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Booking\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/booking/entities/booking.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                endTime\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                note\n                            \n                            \n                                    \n                                room\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                startTime\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                updateTime\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({comment: 'create time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entities/booking.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: 'meeting end time'})@ApiProperty({type: 'number', format: 'date-time'})@IsNotEmpty({message: 'Meeting end time should not be null'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entities/booking.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entities/booking.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 100, comment: 'note', default: ''})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entities/booking.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        room\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MeetingRoom\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entities/booking.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: 'meeting start time'})@ApiProperty({type: 'number', format: 'date-time'})@IsNotEmpty({message: 'Meeting start time should not be null'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entities/booking.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BookingStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 20, comment: 'status', default: undefined})@IsEnum(BookingStatus)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entities/booking.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({comment: 'update time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entities/booking.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entities/booking.entity.ts:74\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nimport { MeetingRoom } from 'src/meeting-room/entities/meeting-room.entity';\nimport { User } from 'src/user/entities/user.entity';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport enum BookingStatus {\n  Progressing = 'progressing',\n  Approved = 'approved',\n  Rejected = 'rejected',\n  Released = 'released',\n}\n\n@Entity()\nexport class Booking {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    comment: 'meeting start time',\n  })\n  @ApiProperty({\n    type: 'number',\n    format: 'date-time',\n  })\n  @IsNotEmpty({ message: 'Meeting start time should not be null' })\n  @IsNumber()\n  startTime: Date;\n\n  @Column({\n    comment: 'meeting end time',\n  })\n  @ApiProperty({\n    type: 'number',\n    format: 'date-time',\n  })\n  @IsNotEmpty({ message: 'Meeting end time should not be null' })\n  @IsNumber()\n  endTime: Date;\n\n  @Column({\n    length: 20,\n    comment: 'status',\n    default: BookingStatus.Progressing,\n  })\n  @IsEnum(BookingStatus)\n  @IsOptional()\n  status: BookingStatus;\n\n  @Column({\n    length: 100,\n    comment: 'note',\n    default: '',\n  })\n  @IsString()\n  @IsOptional()\n  note?: string;\n\n  @ManyToOne(() => User)\n  user: User;\n\n  @ManyToOne(() => MeetingRoom)\n  room: MeetingRoom;\n\n  @CreateDateColumn({\n    comment: 'create time',\n  })\n  createTime: Date;\n\n  @UpdateDateColumn({\n    comment: 'update time',\n  })\n  updateTime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BookingController.html":{"url":"controllers/BookingController.html","title":"controller - BookingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BookingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/booking/booking.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                booking\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                add\n                            \n                            \n                                    \n                                    \n                                apply\n                            \n                            \n                                    \n                                    \n                                list\n                            \n                            \n                                    \n                                    \n                                reject\n                            \n                            \n                                    \n                                    \n                                unbind\n                            \n                            \n                                    \n                                    \n                                urge\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        add\n                        \n                    \n                \n            \n            \n                \n                        \n                    add(booking: CreateBookingDto, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add')@HttpCode(HttpStatus.OK)@ApiUnifiedOkResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/booking/booking.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                booking\n                                            \n                                                            CreateBookingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        apply\n                        \n                    \n                \n            \n            \n                \n                        \n                    apply(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('apply/:id')@ApiUnifiedOkResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/booking/booking.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list(bookingListDto: BookingListDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')@ApiUnifiedOkResponse(BookingListVo)\n                \n            \n\n                    \n                        \n                            Defined in src/booking/booking.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookingListDto\n                                            \n                                                            BookingListDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        reject\n                        \n                    \n                \n            \n            \n                \n                        \n                    reject(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('reject/:id')@ApiUnifiedOkResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/booking/booking.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        unbind\n                        \n                    \n                \n            \n            \n                \n                        \n                    unbind(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('unbind/:id')@ApiUnifiedOkResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/booking/booking.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        urge\n                        \n                    \n                \n            \n            \n                \n                        \n                    urge(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('urge/:id')@ApiUnifiedOkResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/booking/booking.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Query,\n  HttpCode,\n  HttpStatus,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\nimport { RequireLogin, UserInfo } from 'src/common';\nimport { ApiUnifiedOkResponse } from 'src/utils';\nimport { BookingService } from './booking.service';\nimport { CreateBookingDto } from './dto/create-booking.dto';\nimport { BookingListDto } from './dto/booking-list.dto';\nimport { BookingListVo } from './vo/booking-list.vo';\n\n@ApiBearerAuth()\n@RequireLogin()\n@ApiTags('Booking')\n@Controller('booking')\nexport class BookingController {\n  constructor(private readonly bookingService: BookingService) {}\n\n  @Post('add')\n  @HttpCode(HttpStatus.OK)\n  @ApiUnifiedOkResponse()\n  add(\n    @Body() booking: CreateBookingDto,\n    @UserInfo('userId') userId: number,\n  ): Promise {\n    return this.bookingService.add(booking, userId);\n  }\n\n  @Get('list')\n  @ApiUnifiedOkResponse(BookingListVo)\n  list(@Query() bookingListDto: BookingListDto): Promise {\n    return this.bookingService.find(bookingListDto);\n  }\n\n  @Get('apply/:id')\n  @ApiUnifiedOkResponse()\n  apply(@Param('id') id: number): Promise {\n    return this.bookingService.apply(id);\n  }\n\n  @Get('reject/:id')\n  @ApiUnifiedOkResponse()\n  reject(@Param('id') id: number): Promise {\n    return this.bookingService.reject(id);\n  }\n\n  @Get('unbind/:id')\n  @ApiUnifiedOkResponse()\n  unbind(@Param('id') id: number): Promise {\n    return this.bookingService.unbind(id);\n  }\n\n  @Get('urge/:id')\n  @ApiUnifiedOkResponse()\n  urge(@Param('id') id: number): Promise {\n    return this.bookingService.urge(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookingListDto.html":{"url":"classes/BookingListDto.html","title":"class - BookingListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookingListDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/booking/dto/booking-list.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bookingTimeRangeEnd\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bookingTimeRangeStart\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                meetingRoomName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                meetingRoomPosition\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                pageNo\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                pageSize\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bookingTimeRangeEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/dto/booking-list.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bookingTimeRangeStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/dto/booking-list.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        meetingRoomName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/dto/booking-list.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        meetingRoomPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/dto/booking-list.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        pageNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/dto/booking-list.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/dto/booking-list.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/dto/booking-list.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform } from 'class-transformer';\nimport { IsInt, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class BookingListDto {\n  @Transform(({ value }) => parseInt(value))\n  @IsInt()\n  @IsOptional()\n  pageNo?: number;\n\n  @Transform(({ value }) => parseInt(value))\n  @IsInt()\n  @IsOptional()\n  pageSize?: number;\n\n  @IsString()\n  @IsOptional()\n  username?: string;\n\n  @IsString()\n  @IsOptional()\n  meetingRoomName?: string;\n\n  @IsString()\n  @IsOptional()\n  meetingRoomPosition?: string;\n\n  @Transform(({ value }) => parseInt(value))\n  @IsNumber()\n  @IsOptional()\n  bookingTimeRangeStart?: number;\n\n  @Transform(({ value }) => parseInt(value))\n  @IsNumber()\n  @IsOptional()\n  bookingTimeRangeEnd?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookingListVo.html":{"url":"classes/BookingListVo.html","title":"class - BookingListVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookingListVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/booking/vo/booking-list.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bookings\n                            \n                            \n                                totalCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bookings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Booking[]\n\n                    \n                \n                    \n                        \n                                Defined in src/booking/vo/booking-list.vo.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/booking/vo/booking-list.vo.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Booking } from '../entities/booking.entity';\n\nexport class BookingListVo {\n  bookings: Booking[];\n\n  totalCount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookingModule.html":{"url":"modules/BookingModule.html","title":"module - BookingModule","body":"\n                   \n\n\n\n\n    Modules\n    BookingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BookingModule\n\n\n\ncluster_BookingModule_imports\n\n\n\ncluster_BookingModule_providers\n\n\n\n\nEmailModule\n\nEmailModule\n\n\n\nBookingModule\n\nBookingModule\n\nBookingModule -->\n\nEmailModule->BookingModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nBookingModule -->\n\nRedisModule->BookingModule\n\n\n\n\n\nBookingService\n\nBookingService\n\nBookingModule -->\n\nBookingService->BookingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/booking/booking.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookingService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BookingController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EmailModule\n                        \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { EmailModule } from 'src/email/email.module';\nimport { RedisModule } from 'src/redis/redis.module';\nimport { BookingService } from './booking.service';\nimport { BookingController } from './booking.controller';\nimport { Booking } from './entities/booking.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Booking]), EmailModule, RedisModule],\n  controllers: [BookingController],\n  providers: [BookingService],\n})\nexport class BookingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookingService.html":{"url":"injectables/BookingService.html","title":"injectable - BookingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/booking/booking.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                add\n                            \n                            \n                                    Async\n                                apply\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                initData\n                            \n                            \n                                    Async\n                                reject\n                            \n                            \n                                    Async\n                                unbind\n                            \n                            \n                                    Async\n                                urge\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityManager: EntityManager, redisService: RedisService, emailService: EmailService)\n                    \n                \n                        \n                            \n                                Defined in src/booking/booking.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityManager\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                        RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        add\n                        \n                    \n                \n            \n            \n                \n                        \n                    add(bookingDto: CreateBookingDto, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/booking/booking.service.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookingDto\n                                            \n                                                            CreateBookingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        apply\n                        \n                    \n                \n            \n            \n                \n                        \n                    apply(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/booking/booking.service.ts:180\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(bookingListDto: BookingListDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/booking/booking.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookingListDto\n                                            \n                                                            BookingListDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initData\n                        \n                    \n                \n            \n            \n                \n                        \n                    initData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/booking/booking.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        reject\n                        \n                    \n                \n            \n            \n                \n                        \n                    reject(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/booking/booking.service.ts:193\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unbind\n                        \n                    \n                \n            \n            \n                \n                        \n                    unbind(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/booking/booking.service.ts:206\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        urge\n                        \n                    \n                \n            \n            \n                \n                        \n                    urge(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/booking/booking.service.ts:219\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Inject, Injectable } from '@nestjs/common';\nimport { InjectEntityManager } from '@nestjs/typeorm';\n\nimport {\n  Between,\n  EntityManager,\n  LessThanOrEqual,\n  Like,\n  MoreThanOrEqual,\n} from 'typeorm';\n\nimport { RedisService } from 'src/redis/redis.service';\nimport { EmailService } from 'src/email/email.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { MeetingRoom } from 'src/meeting-room/entities/meeting-room.entity';\nimport { Booking, BookingStatus } from './entities/booking.entity';\nimport { CreateBookingDto } from './dto/create-booking.dto';\nimport { BookingListDto } from './dto/booking-list.dto';\n\n@Injectable()\nexport class BookingService {\n  constructor(\n    @InjectEntityManager()\n    private entityManager: EntityManager,\n\n    @Inject(RedisService)\n    private redisService: RedisService,\n\n    @Inject(EmailService)\n    private emailService: EmailService,\n  ) {}\n\n  async initData() {\n    const user1 = await this.entityManager.findOneBy(User, {\n      id: 1,\n    });\n    const user2 = await this.entityManager.findOneBy(User, {\n      id: 2,\n    });\n\n    const room1 = await this.entityManager.findOneBy(MeetingRoom, {\n      id: 1,\n    });\n    const room2 = await this.entityManager.findOneBy(MeetingRoom, {\n      id: 2,\n    });\n\n    const booking1 = new Booking();\n    booking1.room = room1;\n    booking1.user = user1;\n    booking1.startTime = new Date();\n    booking1.endTime = new Date(Date.now() + 1000 * 60 * 60);\n\n    await this.entityManager.save(Booking, booking1);\n\n    const booking2 = new Booking();\n    booking2.room = room2;\n    booking2.user = user2;\n    booking2.startTime = new Date();\n    booking2.endTime = new Date(Date.now() + 1000 * 60 * 60);\n\n    await this.entityManager.save(Booking, booking2);\n\n    const booking3 = new Booking();\n    booking3.room = room1;\n    booking3.user = user2;\n    booking3.startTime = new Date();\n    booking3.endTime = new Date(Date.now() + 1000 * 60 * 60);\n\n    await this.entityManager.save(Booking, booking3);\n\n    const booking4 = new Booking();\n    booking4.room = room2;\n    booking4.user = user1;\n    booking4.startTime = new Date();\n    booking4.endTime = new Date(Date.now() + 1000 * 60 * 60);\n\n    await this.entityManager.save(Booking, booking4);\n  }\n\n  async find(bookingListDto: BookingListDto) {\n    const {\n      pageNo = 1,\n      pageSize = 10,\n      username,\n      meetingRoomName,\n      meetingRoomPosition,\n      bookingTimeRangeStart,\n      bookingTimeRangeEnd,\n    } = bookingListDto;\n\n    const skipCount = (pageNo - 1) * pageSize;\n\n    const condition: Record = {};\n\n    if (username) {\n      condition.user = {\n        username: Like(`%${username}%`),\n      };\n    }\n\n    if (meetingRoomName) {\n      condition.room = {\n        name: Like(`%${meetingRoomName}%`),\n      };\n    }\n\n    if (meetingRoomPosition) {\n      if (!condition.room) {\n        condition.room = {};\n      }\n      condition.room.location = Like(`%${meetingRoomPosition}%`);\n    }\n\n    if (bookingTimeRangeStart) {\n      condition.startTime = Between(\n        new Date(+bookingTimeRangeStart),\n        new Date(\n          +(bookingTimeRangeEnd || bookingTimeRangeStart + 60 * 60 * 1000),\n        ),\n      );\n    }\n\n    const [bookings, totalCount] = await this.entityManager.findAndCount(\n      Booking,\n      {\n        where: condition,\n        relations: {\n          user: true,\n          room: true,\n        },\n        skip: skipCount,\n        take: pageSize,\n      },\n    );\n\n    return {\n      bookings: bookings.map((item) => {\n        delete item.user.password;\n        return item;\n      }),\n      totalCount,\n    };\n  }\n\n  async add(bookingDto: CreateBookingDto, userId: number) {\n    const meetingRoom = await this.entityManager.findOneBy(MeetingRoom, {\n      id: bookingDto.meetingRoomId,\n    });\n\n    if (!meetingRoom) {\n      throw new BadRequestException('Meeting room not existed');\n    }\n\n    const user = await this.entityManager.findOneBy(User, {\n      id: userId,\n    });\n\n    const booking = new Booking();\n    booking.room = meetingRoom;\n    booking.user = user;\n    booking.startTime = new Date(bookingDto.startTime);\n    booking.endTime = new Date(bookingDto.endTime);\n\n    const res = await this.entityManager.findOneBy(Booking, {\n      room: {\n        id: meetingRoom.id,\n      },\n      startTime: LessThanOrEqual(booking.startTime),\n      endTime: MoreThanOrEqual(booking.endTime),\n    });\n\n    if (res) {\n      throw new BadRequestException('This time range has been booked');\n    }\n\n    await this.entityManager.save(Booking, booking);\n  }\n\n  async apply(id: number) {\n    await this.entityManager.update(\n      Booking,\n      {\n        id,\n      },\n      {\n        status: BookingStatus.Approved,\n      },\n    );\n    return 'success';\n  }\n\n  async reject(id: number) {\n    await this.entityManager.update(\n      Booking,\n      {\n        id,\n      },\n      {\n        status: BookingStatus.Rejected,\n      },\n    );\n    return 'success';\n  }\n\n  async unbind(id: number) {\n    await this.entityManager.update(\n      Booking,\n      {\n        id,\n      },\n      {\n        status: BookingStatus.Released,\n      },\n    );\n    return 'success';\n  }\n\n  async urge(id: number) {\n    const flag = await this.redisService.get('urge_' + id);\n\n    if (flag) {\n      return 'Allow allow urge once in half an hour, please wait patiently';\n    }\n\n    let email = await this.redisService.get('admin_email');\n\n    if (!email) {\n      const admin = await this.entityManager.findOne(User, {\n        select: {\n          email: true,\n        },\n        where: {\n          isAdmin: true,\n        },\n      });\n\n      email = admin.email;\n\n      this.redisService.set('admin_email', admin.email);\n    }\n\n    this.emailService.sendMail({\n      to: email,\n      subject: 'Booking application reminder',\n      html: `Booking request with id: ${id} is waiting for approval`,\n    });\n\n    this.redisService.set('urge_' + id, 1, 60 * 30);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookingDto.html":{"url":"classes/CreateBookingDto.html","title":"class - CreateBookingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/booking/dto/create-booking.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PickType(Booking, [\n  'startTime',\n  'endTime',\n  'note',\n])\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                meetingRoomId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        meetingRoomId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Meeting Room Id shouldnot be null'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/dto/create-booking.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { IsNotEmpty, IsNumber } from 'class-validator';\n\nimport { Booking } from '../entities/booking.entity';\n\nexport class CreateBookingDto extends PickType(Booking, [\n  'startTime',\n  'endTime',\n  'note',\n]) {\n  @IsNotEmpty({ message: 'Meeting Room Id shouldnot be null' })\n  @IsNumber()\n  meetingRoomId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMeetingRoomDto.html":{"url":"classes/CreateMeetingRoomDto.html","title":"class - CreateMeetingRoomDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMeetingRoomDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting-room/dto/create-meeting-room.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(MeetingRoom, [\n  'id',\n  'isBooked',\n  'createTime',\n  'updateTime',\n])\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { MeetingRoom } from '../entities/meeting-room.entity';\n\nexport class CreateMeetingRoomDto extends OmitType(MeetingRoom, [\n  'id',\n  'isBooked',\n  'createTime',\n  'updateTime',\n]) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomExceptionFilter.html":{"url":"classes/CustomExceptionFilter.html","title":"class - CustomExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/custom-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/custom-exception.filter.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch(HttpException)\nexport class CustomExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n    response.statusCode = exception.getStatus();\n\n    const res = exception.getResponse() as { message: string[] };\n\n    response\n      .json({\n        code: exception.getStatus(),\n        message: res?.message?.join\n          ? res?.message?.join(',')\n          : exception.message,\n      })\n      .end();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailModule.html":{"url":"modules/EmailModule.html","title":"module - EmailModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_providers\n\n\n\ncluster_EmailModule_exports\n\n\n\n\nEmailService \n\nEmailService \n\n\n\nEmailModule\n\nEmailModule\n\nEmailService  -->\n\nEmailModule->EmailService \n\n\n\n\n\nEmailService\n\nEmailService\n\nEmailModule -->\n\nEmailService->EmailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/email/email.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { EmailService } from './email.service';\n\n@Module({\n  providers: [EmailService],\n  exports: [EmailService],\n})\nexport class EmailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/email/email.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMail(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/email/email.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        transporter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Transporter\n\n                    \n                \n                    \n                        \n                                Defined in src/email/email.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { createTransport, Transporter } from 'nodemailer';\n\n@Injectable()\nexport class EmailService {\n  public transporter: Transporter;\n\n  constructor(private configService: ConfigService) {\n    this.transporter = createTransport({\n      host: this.configService.get('NODEMAILER_HOST'),\n      port: this.configService.get('NODEMAILER_PORT'),\n      secure: false,\n      auth: {\n        user: this.configService.get('EMAIL_USER'),\n        pass: this.configService.get('EMAIL_PASSWORD'),\n      },\n    });\n  }\n\n  async sendMail({ to, subject, html }) {\n    await this.transporter.sendMail({\n      from: {\n        name: 'meeting room booking system',\n        address: this.configService.get('EMAIL_USER'),\n      },\n      to,\n      subject,\n      html,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmitSSEData.html":{"url":"classes/EmitSSEData.html","title":"class - EmitSSEData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmitSSEData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sse/dto/sse.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                action\n                            \n                            \n                                data\n                            \n                            \n                                    \n                                    \n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SseActionEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(SseActionEnum)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sse/dto/sse.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/sse/dto/sse.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sse/dto/sse.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport enum SseActionEnum {\n  CREATE = 'create',\n  UPDATE = 'update',\n}\n\nexport class EmitSSEData {\n  @IsString()\n  @IsNotEmpty()\n  module: string;\n\n  @IsEnum(SseActionEnum)\n  @IsOptional()\n  action?: SseActionEnum;\n\n  data: {\n    [key: string]: any;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorReportDto.html":{"url":"classes/ErrorReportDto.html","title":"class - ErrorReportDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorReportDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fe-report/dto/error.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(ErrorReportEntity, [\n  'id',\n  'create_time',\n])\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { ErrorReportEntity } from '../entities/error.entity';\n\nexport class ErrorReportDto extends OmitType(ErrorReportEntity, [\n  'id',\n  'create_time',\n]) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ErrorReportEntity.html":{"url":"entities/ErrorReportEntity.html","title":"entity - ErrorReportEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ErrorReportEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fe-report/entities/error.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create_time\n                            \n                            \n                                    \n                                    \n                                    \n                                error\n                            \n                            \n                                    \n                                    \n                                    \n                                error_info\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/error.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/error.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        error_info\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/error.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Generated('increment')@PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/error.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { Column, Entity, Generated, PrimaryColumn } from 'typeorm';\n\n@Entity('error_report_tab')\nexport class ErrorReportEntity {\n  @Generated('increment')\n  @PrimaryColumn('bigint')\n  id: string;\n\n  @Column({ type: 'text' })\n  @IsString()\n  @IsNotEmpty()\n  error: string;\n\n  @Column({ type: 'text' })\n  @IsString()\n  @IsNotEmpty()\n  error_info: string;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  create_time: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FeReportController.html":{"url":"controllers/FeReportController.html","title":"controller - FeReportController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FeReportController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fe-report/fe-report.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                fe-report\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                error\n                            \n                            \n                                    \n                                    \n                                    \n                                performance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        error\n                        \n                    \n                \n            \n            \n                \n                        \n                    error(error: ErrorReportDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('error')@HttpCode(HttpStatus.OK)@ApiUnifiedOkResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/fe-report/fe-report.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            ErrorReportDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        performance\n                        \n                    \n                \n            \n            \n                \n                        \n                    performance(metric: PerformanceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('performance')@HttpCode(HttpStatus.OK)@ApiUnifiedOkResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/fe-report/fe-report.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metric\n                                            \n                                                            PerformanceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { PerformanceDto } from './dto/performance.dto';\nimport { ErrorReportDto } from './dto/error.dto';\nimport { FeReportService } from './fe-report.service';\nimport { ApiUnifiedOkResponse } from '../utils';\n\n@ApiTags('FE report')\n@Controller('fe-report')\nexport class FeReportController {\n  constructor(private readonly feReportService: FeReportService) {}\n\n  @Post('performance')\n  @HttpCode(HttpStatus.OK)\n  @ApiUnifiedOkResponse()\n  performance(@Body() metric: PerformanceDto) {\n    return this.feReportService.performanceReport(metric);\n  }\n\n  @Post('error')\n  @HttpCode(HttpStatus.OK)\n  @ApiUnifiedOkResponse()\n  error(@Body() error: ErrorReportDto) {\n    return this.feReportService.errorReport(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeReportModule.html":{"url":"modules/FeReportModule.html","title":"module - FeReportModule","body":"\n                   \n\n\n\n\n    Modules\n    FeReportModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeReportModule\n\n\n\ncluster_FeReportModule_providers\n\n\n\n\nFeReportService\n\nFeReportService\n\n\n\nFeReportModule\n\nFeReportModule\n\nFeReportModule -->\n\nFeReportService->FeReportModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/fe-report/fe-report.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeReportService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FeReportController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { FeReportService } from './fe-report.service';\nimport { FeReportController } from './fe-report.controller';\nimport { ErrorReportEntity } from './entities/error.entity';\nimport { PerformanceEntity } from './entities/performance.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ErrorReportEntity, PerformanceEntity])],\n  controllers: [FeReportController],\n  providers: [FeReportService],\n})\nexport class FeReportModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeReportService.html":{"url":"injectables/FeReportService.html","title":"injectable - FeReportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FeReportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fe-report/fe-report.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                errorReport\n                            \n                            \n                                performanceReport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorReportRepository: Repository, performanceRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/fe-report/fe-report.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorReportRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        performanceRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        errorReport\n                        \n                    \n                \n            \n            \n                \nerrorReport(error: ErrorReportDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fe-report/fe-report.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            ErrorReportDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        performanceReport\n                        \n                    \n                \n            \n            \n                \nperformanceReport(metric: PerformanceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/fe-report/fe-report.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metric\n                                            \n                                                            PerformanceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { Repository } from 'typeorm';\n\nimport { PerformanceDto } from './dto/performance.dto';\nimport { ErrorReportDto } from './dto/error.dto';\nimport { ErrorReportEntity } from './entities/error.entity';\nimport { PerformanceEntity } from './entities/performance.entity';\n\n@Injectable()\nexport class FeReportService {\n  constructor(\n    @InjectRepository(ErrorReportEntity)\n    private errorReportRepository: Repository,\n\n    @InjectRepository(PerformanceEntity)\n    private performanceRepository: Repository,\n  ) {}\n\n  performanceReport(metric: PerformanceDto) {\n    this.performanceRepository.save(metric);\n  }\n\n  errorReport(error: ErrorReportDto) {\n    this.errorReportRepository.save(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormatResponseInterceptor.html":{"url":"injectables/FormatResponseInterceptor.html","title":"injectable - FormatResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormatResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/format-response.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/format-response.interceptor.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\n\nimport { Response } from 'express';\nimport { map, Observable } from 'rxjs';\n\n@Injectable()\nexport class FormatResponseInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const response = context.switchToHttp().getResponse();\n\n    return next.handle().pipe(\n      map((data) => {\n        return {\n          code: response.statusCode,\n          data,\n        };\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FreezeUserDto.html":{"url":"classes/FreezeUserDto.html","title":"class - FreezeUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FreezeUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/freeze-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'user id should not be null'})@IsInt({message: 'not a legal user id format'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/freeze-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty } from 'class-validator';\n\nexport class FreezeUserDto {\n  @IsNotEmpty({\n    message: 'user id should not be null',\n  })\n  @IsInt({\n    message: 'not a legal user id format',\n  })\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiExcludeController, ApiTags } from '@nestjs/swagger';\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  HealthCheck,\n  TypeOrmHealthIndicator,\n  DiskHealthIndicator,\n  MemoryHealthIndicator,\n} from '@nestjs/terminus';\n\n@ApiTags('Health')\n@Controller('health')\n@ApiExcludeController()\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private db: TypeOrmHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private memory: MemoryHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.http.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n      () => this.db.pingCheck('database'),\n      () =>\n        this.disk.checkStorage('storage', {\n          path: process.platform === 'win32' ? 'C:\\\\' : '/',\n          thresholdPercent: 0.9,\n        }),\n      () => this.memory.checkHeap('memory_heap', 150 * 1024 * 1024),\n      () => this.memory.checkRSS('memory_rss', 150 * 1024 * 1024),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\n\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InvokeRecordInterceptor.html":{"url":"injectables/InvokeRecordInterceptor.html","title":"injectable - InvokeRecordInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InvokeRecordInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/invoke-record.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/invoke-record.interceptor.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(InvokeRecordInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in src/common/interceptors/invoke-record.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  Logger,\n  NestInterceptor,\n} from '@nestjs/common';\n\nimport { Response, Request } from 'express';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable()\nexport class InvokeRecordInterceptor implements NestInterceptor {\n  private readonly logger = new Logger(InvokeRecordInterceptor.name);\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    const request = context.switchToHttp().getRequest();\n    const response = context.switchToHttp().getResponse();\n\n    const userAgent = request.headers['user-agent'];\n\n    const { ip, method, path } = request;\n\n    this.logger.debug(\n      `${method} ${path} ${ip} ${userAgent}: ${context.getClass().name} ${\n        context.getHandler().name\n      } invoked...`,\n    );\n\n    this.logger.debug(\n      `user: ${request.user?.userId}, ${request.user?.username}`,\n    );\n\n    const now = Date.now();\n\n    return next.handle().pipe(\n      tap((res) => {\n        this.logger.debug(\n          `${method} ${path} ${ip} ${userAgent}: ${response.statusCode}: ${\n            Date.now() - now\n          }ms`,\n        );\n        this.logger.debug(`Response: ${JSON.stringify(res)}`);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtUserData.html":{"url":"interfaces/JwtUserData.html","title":"interface - JwtUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/guards/login.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:         Permission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Permission[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\n\nimport { RequireLoginKey } from 'src/constants';\nimport { Permission } from 'src/user/entities/permission.entity';\nimport { UnLoginException } from '../filters';\n\ninterface JwtUserData {\n  userId: number;\n  username: string;\n  email: string;\n  roles: string[];\n  permissions: Permission[];\n}\n\ndeclare module 'express' {\n  interface Request {\n    user: JwtUserData;\n  }\n}\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n  constructor(\n    private reflector: Reflector,\n\n    @Inject(JwtService)\n    private jwtService: JwtService,\n  ) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request: Request = context.switchToHttp().getRequest();\n\n    const requireLogin = this.reflector.getAllAndOverride(RequireLoginKey, [\n      context.getClass(),\n      context.getHandler(),\n    ]);\n\n    if (!requireLogin) {\n      return true;\n    }\n\n    const authorization = request.headers.authorization;\n\n    if (!authorization) {\n      throw new UnLoginException();\n    }\n\n    try {\n      const token = authorization.split(' ')[1];\n      const data = this.jwtService.verify(token);\n\n      request.user = {\n        userId: data.userId,\n        username: data.username,\n        email: data.email,\n        roles: data.roles,\n        permissions: data.permissions,\n      };\n      return true;\n    } catch (e) {\n      throw new UnauthorizedException(\n        'token has been invalid, please login again',\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuard.html":{"url":"guards/LoginGuard.html","title":"guard - LoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/login.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/login.guard.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/guards/login.guard.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\n\nimport { RequireLoginKey } from 'src/constants';\nimport { Permission } from 'src/user/entities/permission.entity';\nimport { UnLoginException } from '../filters';\n\ninterface JwtUserData {\n  userId: number;\n  username: string;\n  email: string;\n  roles: string[];\n  permissions: Permission[];\n}\n\ndeclare module 'express' {\n  interface Request {\n    user: JwtUserData;\n  }\n}\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n  constructor(\n    private reflector: Reflector,\n\n    @Inject(JwtService)\n    private jwtService: JwtService,\n  ) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request: Request = context.switchToHttp().getRequest();\n\n    const requireLogin = this.reflector.getAllAndOverride(RequireLoginKey, [\n      context.getClass(),\n      context.getHandler(),\n    ]);\n\n    if (!requireLogin) {\n      return true;\n    }\n\n    const authorization = request.headers.authorization;\n\n    if (!authorization) {\n      throw new UnLoginException();\n    }\n\n    try {\n      const token = authorization.split(' ')[1];\n      const data = this.jwtService.verify(token);\n\n      request.user = {\n        userId: data.userId,\n        username: data.username,\n        email: data.email,\n        roles: data.roles,\n        permissions: data.permissions,\n      };\n      return true;\n    } catch (e) {\n      throw new UnauthorizedException(\n        'token has been invalid, please login again',\n      );\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/login-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PickType(RegisterUserDto, [\n  'username',\n  'password',\n])\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from './register-user.dto';\n\nexport class LoginUserDto extends PickType(RegisterUserDto, [\n  'username',\n  'password',\n]) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserVo.html":{"url":"classes/LoginUserVo.html","title":"class - LoginUserVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/vo/login-user.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                refreshToken\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { User } from '../entities/user.entity';\n\nclass UserInfo extends OmitType(User, [\n  'createTime',\n  'updateTime',\n  'roles',\n  'password',\n]) {\n  createTime: number;\n\n  roles: string[];\n\n  permissions: string[];\n}\n\nexport class LoginUserVo {\n  userInfo: UserInfo;\n\n  accessToken: string;\n\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MeetingRoom.html":{"url":"entities/MeetingRoom.html","title":"entity - MeetingRoom","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MeetingRoom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting-room/entities/meeting-room.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                capacity\n                            \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                equipment\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                isBooked\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                updateTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: 'Meeting room capacity'})@IsNumber()@IsNotEmpty({message: 'Capacity of the meeting room should not be null'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({comment: 'create time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 100, comment: 'description', default: ''})@IsString()@IsNotEmpty()@MaxLength(100, {message: 'Max length of the meeting room description is 100'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        equipment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 50, comment: 'equipment', default: ''})@IsString()@IsNotEmpty()@MaxLength(50, {message: 'Max length of the meeting room equipment is 50'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({comment: 'Meeting room ID'})@IsNotEmpty({message: 'Meeting room id should not be null'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        isBooked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: 'is meeting room booked', default: false})@IsBoolean()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 50, comment: 'Meeting room location'})@IsString()@IsNotEmpty({message: 'Location of the meeting room should not be null'})@MaxLength(50, {message: 'Max length of the meeting room location is 50'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 50, comment: 'Meeting room name'})@IsString()@IsNotEmpty({message: 'Meeting room name should not be null'})@MaxLength(10, {message: 'Max length of the meeting room name is 10'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({comment: 'update time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:102\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  MaxLength,\n} from 'class-validator';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class MeetingRoom {\n  @PrimaryGeneratedColumn({\n    comment: 'Meeting room ID',\n  })\n  @IsNotEmpty({\n    message: 'Meeting room id should not be null',\n  })\n  @IsNumber()\n  id: number;\n\n  @Column({\n    length: 50,\n    comment: 'Meeting room name',\n  })\n  @IsString()\n  @IsNotEmpty({\n    message: 'Meeting room name should not be null',\n  })\n  @MaxLength(10, {\n    message: 'Max length of the meeting room name is 10',\n  })\n  name: string;\n\n  @Column({\n    comment: 'Meeting room capacity',\n  })\n  @IsNumber()\n  @IsNotEmpty({\n    message: 'Capacity of the meeting room should not be null',\n  })\n  capacity: number;\n\n  @Column({\n    length: 50,\n    comment: 'Meeting room location',\n  })\n  @IsString()\n  @IsNotEmpty({\n    message: 'Location of the meeting room should not be null',\n  })\n  @MaxLength(50, {\n    message: 'Max length of the meeting room location is 50',\n  })\n  location: string;\n\n  @Column({\n    length: 50,\n    comment: 'equipment',\n    default: '',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(50, {\n    message: 'Max length of the meeting room equipment is 50',\n  })\n  equipment: string;\n\n  @Column({\n    length: 100,\n    comment: 'description',\n    default: '',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(100, {\n    message: 'Max length of the meeting room description is 100',\n  })\n  description: string;\n\n  @Column({\n    comment: 'is meeting room booked',\n    default: false,\n  })\n  @IsBoolean()\n  @IsNotEmpty()\n  isBooked: boolean;\n\n  @CreateDateColumn({\n    comment: 'create time',\n  })\n  createTime: Date;\n\n  @UpdateDateColumn({\n    comment: 'update time',\n  })\n  updateTime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MeetingRoomController.html":{"url":"controllers/MeetingRoomController.html","title":"controller - MeetingRoomController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MeetingRoomController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting-room/meeting-room.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                meeting-room\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                delete\n                            \n                            \n                                    \n                                    \n                                find\n                            \n                            \n                                    \n                                    \n                                list\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(meetingRoomDto: CreateMeetingRoomDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@HttpCode(HttpStatus.OK)@ApiUnifiedOkResponse(MeetingRoom)\n                \n            \n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meetingRoomDto\n                                            \n                                                            CreateMeetingRoomDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiUnifiedOkResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiUnifiedOkResponse(MeetingRoom)\n                \n            \n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list(meetingRoomListDto: MeetingRoomListDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')@ApiUnifiedOkResponse(MeetingRoomListVo)\n                \n            \n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meetingRoomListDto\n                                            \n                                                            MeetingRoomListDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(meetingRoomDto: UpdateMeetingRoomDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('update')@ApiUnifiedOkResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meetingRoomDto\n                                            \n                                                            UpdateMeetingRoomDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Post,\n  Put,\n  Query,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\nimport { ApiUnifiedOkResponse } from 'src/utils';\nimport { RequireLogin } from 'src/common';\nimport { MeetingRoomService } from './meeting-room.service';\nimport { MeetingRoomListDto } from './dto/meeting-room-list.dto';\nimport { MeetingRoomListVo } from './vo/meeting-room-list.vo';\nimport { CreateMeetingRoomDto } from './dto/create-meeting-room.dto';\nimport { MeetingRoom } from './entities/meeting-room.entity';\nimport { UpdateMeetingRoomDto } from './dto/update-meeting-room.dto';\n\n@ApiTags('Meeting room')\n@ApiBearerAuth()\n@RequireLogin()\n@Controller('meeting-room')\nexport class MeetingRoomController {\n  constructor(private readonly meetingRoomService: MeetingRoomService) {}\n\n  @Get('list')\n  @ApiUnifiedOkResponse(MeetingRoomListVo)\n  list(\n    @Query() meetingRoomListDto: MeetingRoomListDto,\n  ): Promise {\n    return this.meetingRoomService.find(meetingRoomListDto);\n  }\n\n  @Post('create')\n  @HttpCode(HttpStatus.OK)\n  @ApiUnifiedOkResponse(MeetingRoom)\n  create(@Body() meetingRoomDto: CreateMeetingRoomDto): Promise {\n    return this.meetingRoomService.create(meetingRoomDto);\n  }\n\n  @Get(':id')\n  @ApiUnifiedOkResponse(MeetingRoom)\n  find(@Param('id') id: number): Promise {\n    return this.meetingRoomService.findById(id);\n  }\n\n  @Put('update')\n  @ApiUnifiedOkResponse()\n  update(@Body() meetingRoomDto: UpdateMeetingRoomDto): Promise {\n    return this.meetingRoomService.update(meetingRoomDto);\n  }\n\n  @Delete(':id')\n  @ApiUnifiedOkResponse()\n  delete(@Param('id') id: number): Promise {\n    return this.meetingRoomService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeetingRoomListDto.html":{"url":"classes/MeetingRoomListDto.html","title":"class - MeetingRoomListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeetingRoomListDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting-room/dto/meeting-room-list.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  PickType(MeetingRoom, ['name', 'capacity', 'equipment']),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                pageNo\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                pageSize\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        pageNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/dto/meeting-room-list.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/dto/meeting-room-list.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType, PickType } from '@nestjs/swagger';\n\nimport { Transform } from 'class-transformer';\nimport { IsInt, IsOptional } from 'class-validator';\n\nimport { MeetingRoom } from '../entities/meeting-room.entity';\n\nexport class MeetingRoomListDto extends PartialType(\n  PickType(MeetingRoom, ['name', 'capacity', 'equipment']),\n) {\n  @Transform(({ value }) => parseInt(value))\n  @IsInt()\n  @IsOptional()\n  pageNo?: number;\n\n  @Transform(({ value }) => parseInt(value))\n  @IsInt()\n  @IsOptional()\n  pageSize?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeetingRoomListVo.html":{"url":"classes/MeetingRoomListVo.html","title":"class - MeetingRoomListVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeetingRoomListVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting-room/vo/meeting-room-list.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                meetingRooms\n                            \n                            \n                                totalCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        meetingRooms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/vo/meeting-room-list.vo.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/vo/meeting-room-list.vo.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MeetingRoom } from '../entities/meeting-room.entity';\n\nexport class MeetingRoomListVo {\n  meetingRooms: Array;\n\n  totalCount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MeetingRoomModule.html":{"url":"modules/MeetingRoomModule.html","title":"module - MeetingRoomModule","body":"\n                   \n\n\n\n\n    Modules\n    MeetingRoomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MeetingRoomModule\n\n\n\ncluster_MeetingRoomModule_providers\n\n\n\n\nMeetingRoomService\n\nMeetingRoomService\n\n\n\nMeetingRoomModule\n\nMeetingRoomModule\n\nMeetingRoomModule -->\n\nMeetingRoomService->MeetingRoomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/meeting-room/meeting-room.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MeetingRoomService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MeetingRoomController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { MeetingRoomService } from './meeting-room.service';\nimport { MeetingRoomController } from './meeting-room.controller';\nimport { MeetingRoom } from './entities/meeting-room.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([MeetingRoom])],\n  controllers: [MeetingRoomController],\n  providers: [MeetingRoomService],\n})\nexport class MeetingRoomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeetingRoomService.html":{"url":"injectables/MeetingRoomService.html","title":"injectable - MeetingRoomService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MeetingRoomService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting-room/meeting-room.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                initData\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/meeting-room/meeting-room.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(meetingRoomDto: CreateMeetingRoomDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meetingRoomDto\n                                            \n                                                            CreateMeetingRoomDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(meetingRoomListDto: MeetingRoomListDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meetingRoomListDto\n                                            \n                                                            MeetingRoomListDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initData\n                        \n                    \n                \n            \n            \n                \ninitData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(meetingRoomDto: UpdateMeetingRoomDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meetingRoomDto\n                                            \n                                                            UpdateMeetingRoomDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { Like, Repository } from 'typeorm';\n\nimport { MeetingRoom } from './entities/meeting-room.entity';\nimport { MeetingRoomListDto } from './dto/meeting-room-list.dto';\nimport { CreateMeetingRoomDto } from './dto/create-meeting-room.dto';\nimport { UpdateMeetingRoomDto } from './dto/update-meeting-room.dto';\n\n@Injectable()\nexport class MeetingRoomService {\n  constructor(\n    @InjectRepository(MeetingRoom)\n    private repository: Repository,\n  ) {}\n\n  initData() {\n    const room1 = new MeetingRoom();\n    room1.name = '木星';\n    room1.capacity = 10;\n    room1.equipment = '白板';\n    room1.location = '一层西';\n\n    const room2 = new MeetingRoom();\n    room2.name = '金星';\n    room2.capacity = 5;\n    room2.equipment = '';\n    room2.location = '二层东';\n\n    const room3 = new MeetingRoom();\n    room3.name = '天王星';\n    room3.capacity = 30;\n    room3.equipment = '白板，电视';\n    room3.location = '三层东';\n\n    this.repository.insert([room1, room2, room3]);\n  }\n\n  async find(meetingRoomListDto: MeetingRoomListDto) {\n    const {\n      pageNo = 1,\n      pageSize = 2,\n      name,\n      capacity,\n      equipment,\n    } = meetingRoomListDto;\n\n    if (pageNo  = {};\n\n    if (name) {\n      condition.name = Like(`%${name}%`);\n    }\n    if (equipment) {\n      condition.equipment = Like(`%${equipment}%`);\n    }\n    if (capacity) {\n      condition.capacity = capacity;\n    }\n\n    const [meetingRooms, totalCount] = await this.repository.findAndCount({\n      skip: skipCount,\n      take: pageSize,\n      where: condition,\n    });\n\n    return {\n      meetingRooms,\n      totalCount,\n    };\n  }\n\n  async create(meetingRoomDto: CreateMeetingRoomDto) {\n    const room = await this.repository.findOneBy({\n      name: meetingRoomDto.name,\n    });\n\n    if (room) {\n      throw new BadRequestException('Meeting room name has been existed');\n    }\n\n    return await this.repository.save(meetingRoomDto);\n  }\n\n  async update(meetingRoomDto: UpdateMeetingRoomDto) {\n    const meetingRoom = await this.repository.findOneBy({\n      id: meetingRoomDto.id,\n    });\n\n    if (!meetingRoom) {\n      throw new BadRequestException('Meeting room not existed');\n    }\n\n    meetingRoom.capacity = meetingRoomDto.capacity;\n    meetingRoom.location = meetingRoomDto.location;\n    meetingRoom.name = meetingRoomDto.name;\n\n    if (meetingRoomDto.description) {\n      meetingRoom.description = meetingRoomDto.description;\n    }\n    if (meetingRoomDto.equipment) {\n      meetingRoom.equipment = meetingRoomDto.equipment;\n    }\n\n    await this.repository.update(\n      {\n        id: meetingRoom.id,\n      },\n      meetingRoom,\n    );\n    return 'success';\n  }\n\n  async findById(id: number) {\n    return this.repository.findOneBy({\n      id,\n    });\n  }\n\n  async delete(id: number) {\n    await this.repository.delete({\n      id,\n    });\n    return 'success';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeetingRoomUsedCountDto.html":{"url":"classes/MeetingRoomUsedCountDto.html","title":"class - MeetingRoomUsedCountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeetingRoomUsedCountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statistic/dto/meeting-room-used-count.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                endTime\n                            \n                            \n                                    \n                                    \n                                startTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statistic/dto/meeting-room-used-count.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statistic/dto/meeting-room-used-count.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class MeetingRoomUsedCountDto {\n  @IsNotEmpty()\n  @IsString()\n  startTime: string;\n\n  @IsNotEmpty()\n  @IsString()\n  endTime: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeetingRoomUsedCountVo.html":{"url":"classes/MeetingRoomUsedCountVo.html","title":"class - MeetingRoomUsedCountVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeetingRoomUsedCountVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statistic/vo/meeting-room-used-count.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                meetingRoomId\n                            \n                            \n                                meetingRoomName\n                            \n                            \n                                usedCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        meetingRoomId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/statistic/vo/meeting-room-used-count.vo.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meetingRoomName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/statistic/vo/meeting-room-used-count.vo.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usedCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/statistic/vo/meeting-room-used-count.vo.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MeetingRoomUsedCountVo {\n  meetingRoomId: string;\n\n  meetingRoomName: string;\n\n  usedCount: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MinioModule.html":{"url":"modules/MinioModule.html","title":"module - MinioModule","body":"\n                   \n\n\n\n\n    Modules\n    MinioModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MinioModule\n\n\n\ncluster_MinioModule_exports\n\n\n\ncluster_MinioModule_providers\n\n\n\n\nMinioService \n\nMinioService \n\n\n\nMinioModule\n\nMinioModule\n\nMinioService  -->\n\nMinioModule->MinioService \n\n\n\n\n\nMinioService\n\nMinioService\n\nMinioModule -->\n\nMinioService->MinioModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/minio/minio.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MinioService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MinioService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { MinioService } from './minio.service';\n\n@Module({\n  providers: [MinioService],\n  exports: [MinioService],\n})\nexport class MinioModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MinioService.html":{"url":"injectables/MinioService.html","title":"injectable - MinioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MinioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/minio/minio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                minioClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/minio/minio.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(bucketName: string, objectName: string, data: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/minio/minio.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bucketName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                objectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        minioClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Client\n\n                    \n                \n                    \n                        \n                                Defined in src/minio/minio.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { Client } from 'minio';\n\n@Injectable()\nexport class MinioService {\n  private readonly minioClient: Client;\n  constructor(private configService: ConfigService) {\n    this.minioClient = new Client({\n      endPoint: this.configService.get('MINIO_HOST'),\n      port: +this.configService.get('MINIO_PORT'),\n      useSSL: false,\n      accessKey: this.configService.get('MINIO_ACCESS_KEY'),\n      secretKey: this.configService.get('MINIO_SECRET_KEY'),\n    });\n  }\n\n  async uploadFile(bucketName: string, objectName: string, data: Buffer) {\n    await this.minioClient.putObject(bucketName, objectName, data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PerformanceDto.html":{"url":"classes/PerformanceDto.html","title":"class - PerformanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PerformanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fe-report/dto/performance.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(PerformanceEntity, [\n  'performance_id',\n  'create_time',\n])\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { PerformanceEntity } from '../entities/performance.entity';\n\nexport class PerformanceDto extends OmitType(PerformanceEntity, [\n  'performance_id',\n  'create_time',\n]) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PerformanceEntity.html":{"url":"entities/PerformanceEntity.html","title":"entity - PerformanceEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PerformanceEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fe-report/entities/performance.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create_time\n                            \n                            \n                                    \n                                    \n                                    \n                                delta\n                            \n                            \n                                    \n                                    \n                                entries\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                navigationType\n                            \n                            \n                                    \n                                    \n                                performance_id\n                            \n                            \n                                    \n                                    \n                                    \n                                rating\n                            \n                            \n                                    \n                                    \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/performance.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        delta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/performance.entity.ts:91\n                        \n                    \n\n            \n                \n                    The delta between the current value and the last-reported value.\nOn the first report, delta and value will always be the same.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        entries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PerformanceEntry[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'json'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/performance.entity.ts:114\n                        \n                    \n\n            \n                \n                    Any performance entries relevant to the metric value calculation.\nThe array may also be empty if the metric value was not based on any\nentries (e.g. a CLS value of 0 given no layout shifts).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/performance.entity.ts:105\n                        \n                    \n\n            \n                \n                    A unique ID representing this particular metric instance. This ID can\nbe used by an analytics tool to dedupe multiple values sent for the same\nmetric instance, or to group multiple deltas together and calculate a\ntotal. It can also be used to differentiate multiple different metric\ninstances sent from the same page, which can happen if the page is\nrestored from the back/forward cache (in that case new metrics object\nget created).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetricNameEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: MetricNameEnum})@IsEnum(MetricNameEnum)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/performance.entity.ts:65\n                        \n                    \n\n            \n                \n                    The name of the metric (in acronym form).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        navigationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetricNavigationEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: MetricNavigationEnum})@IsEnum(MetricNavigationEnum)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/performance.entity.ts:130\n                        \n                    \n\n            \n                \n                    The type of navigation.\nThis will be the value returned by the Navigation Timing API (or\nundefined if the browser doesn't support that API), with the following\nexceptions:\n\n'back-forward-cache': for pages that are restored from the bfcache.\n'prerender': for pages that were prerendered.\n'restore': for pages that were discarded by the browser and then\nrestored by the user.\n\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        performance_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Generated('increment')@PrimaryColumn('bigint')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/performance.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetricRatingEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: MetricRatingEnum})@IsEnum(MetricRatingEnum)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/performance.entity.ts:82\n                        \n                    \n\n            \n                \n                    The rating as to whether the metric value is within the \"good\",\n\"needs improvement\", or \"poor\" thresholds of the metric.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/performance.entity.ts:73\n                        \n                    \n\n            \n                \n                    The current value of the metric.\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Generated, PrimaryColumn } from 'typeorm';\nimport { IsEnum, IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nclass PerformanceEntry {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/duration) */\n  @IsNumber()\n  @IsNotEmpty()\n  duration: number;\n\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/entryType) */\n  @IsString()\n  @IsNotEmpty()\n  entryType: string;\n\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/name) */\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/startTime) */\n  @IsNumber()\n  @IsNotEmpty()\n  startTime: number;\n}\n\nenum MetricNameEnum {\n  CLS = 'CLS',\n  FCP = 'FCP',\n  FID = 'FID',\n  INP = 'INP',\n  LCP = 'LCP',\n  TTFB = 'TTFB',\n}\n\nenum MetricRatingEnum {\n  Good = 'good',\n  NeedsImprovement = 'needs-improvement',\n  Poor = 'poor',\n}\n\nenum MetricNavigationEnum {\n  Navigate = 'navigate',\n  Reload = 'reload',\n  BackForward = 'back-forward',\n  BackForwardCache = 'back-forward-cache',\n  Prerender = 'prerender',\n  Restore = 'restore',\n}\n\n@Entity('performance_report_tab')\nexport class PerformanceEntity {\n  @Generated('increment')\n  @PrimaryColumn('bigint')\n  performance_id: string;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  create_time: Date;\n\n  /**\n   * The name of the metric (in acronym form).\n   */\n  @Column({ type: 'enum', enum: MetricNameEnum })\n  @IsEnum(MetricNameEnum)\n  @IsNotEmpty()\n  name: MetricNameEnum;\n\n  /**\n   * The current value of the metric.\n   */\n  @Column()\n  @IsNumber()\n  @IsNotEmpty()\n  value: number;\n\n  /**\n   * The rating as to whether the metric value is within the \"good\",\n   * \"needs improvement\", or \"poor\" thresholds of the metric.\n   */\n  @Column({ type: 'enum', enum: MetricRatingEnum })\n  @IsEnum(MetricRatingEnum)\n  @IsNotEmpty()\n  rating: MetricRatingEnum;\n\n  /**\n   * The delta between the current value and the last-reported value.\n   * On the first report, `delta` and `value` will always be the same.\n   */\n  @Column()\n  @IsNumber()\n  @IsNotEmpty()\n  delta: number;\n\n  /**\n   * A unique ID representing this particular metric instance. This ID can\n   * be used by an analytics tool to dedupe multiple values sent for the same\n   * metric instance, or to group multiple deltas together and calculate a\n   * total. It can also be used to differentiate multiple different metric\n   * instances sent from the same page, which can happen if the page is\n   * restored from the back/forward cache (in that case new metrics object\n   * get created).\n   */\n  @Column()\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  /**\n   * Any performance entries relevant to the metric value calculation.\n   * The array may also be empty if the metric value was not based on any\n   * entries (e.g. a CLS value of 0 given no layout shifts).\n   */\n  @Column({ type: 'json' })\n  @IsNotEmpty()\n  entries: PerformanceEntry[];\n\n  /**\n   * The type of navigation.\n   *\n   * This will be the value returned by the Navigation Timing API (or\n   * `undefined` if the browser doesn't support that API), with the following\n   * exceptions:\n   * - 'back-forward-cache': for pages that are restored from the bfcache.\n   * - 'prerender': for pages that were prerendered.\n   * - 'restore': for pages that were discarded by the browser and then\n   * restored by the user.\n   */\n  @Column({ type: 'enum', enum: MetricNavigationEnum })\n  @IsEnum(MetricNavigationEnum)\n  @IsNotEmpty()\n  navigationType: MetricNavigationEnum;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PerformanceEntry.html":{"url":"classes/PerformanceEntry.html","title":"class - PerformanceEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PerformanceEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fe-report/entities/performance.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                entryType\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                startTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/performance.entity.ts:8\n                        \n                    \n\n            \n                \n                    MDN Reference\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        entryType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/performance.entity.ts:13\n                        \n                    \n\n            \n                \n                    MDN Reference\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/performance.entity.ts:18\n                        \n                    \n\n            \n                \n                    MDN Reference\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/fe-report/entities/performance.entity.ts:23\n                        \n                    \n\n            \n                \n                    MDN Reference\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, Generated, PrimaryColumn } from 'typeorm';\nimport { IsEnum, IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nclass PerformanceEntry {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/duration) */\n  @IsNumber()\n  @IsNotEmpty()\n  duration: number;\n\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/entryType) */\n  @IsString()\n  @IsNotEmpty()\n  entryType: string;\n\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/name) */\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/startTime) */\n  @IsNumber()\n  @IsNotEmpty()\n  startTime: number;\n}\n\nenum MetricNameEnum {\n  CLS = 'CLS',\n  FCP = 'FCP',\n  FID = 'FID',\n  INP = 'INP',\n  LCP = 'LCP',\n  TTFB = 'TTFB',\n}\n\nenum MetricRatingEnum {\n  Good = 'good',\n  NeedsImprovement = 'needs-improvement',\n  Poor = 'poor',\n}\n\nenum MetricNavigationEnum {\n  Navigate = 'navigate',\n  Reload = 'reload',\n  BackForward = 'back-forward',\n  BackForwardCache = 'back-forward-cache',\n  Prerender = 'prerender',\n  Restore = 'restore',\n}\n\n@Entity('performance_report_tab')\nexport class PerformanceEntity {\n  @Generated('increment')\n  @PrimaryColumn('bigint')\n  performance_id: string;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  create_time: Date;\n\n  /**\n   * The name of the metric (in acronym form).\n   */\n  @Column({ type: 'enum', enum: MetricNameEnum })\n  @IsEnum(MetricNameEnum)\n  @IsNotEmpty()\n  name: MetricNameEnum;\n\n  /**\n   * The current value of the metric.\n   */\n  @Column()\n  @IsNumber()\n  @IsNotEmpty()\n  value: number;\n\n  /**\n   * The rating as to whether the metric value is within the \"good\",\n   * \"needs improvement\", or \"poor\" thresholds of the metric.\n   */\n  @Column({ type: 'enum', enum: MetricRatingEnum })\n  @IsEnum(MetricRatingEnum)\n  @IsNotEmpty()\n  rating: MetricRatingEnum;\n\n  /**\n   * The delta between the current value and the last-reported value.\n   * On the first report, `delta` and `value` will always be the same.\n   */\n  @Column()\n  @IsNumber()\n  @IsNotEmpty()\n  delta: number;\n\n  /**\n   * A unique ID representing this particular metric instance. This ID can\n   * be used by an analytics tool to dedupe multiple values sent for the same\n   * metric instance, or to group multiple deltas together and calculate a\n   * total. It can also be used to differentiate multiple different metric\n   * instances sent from the same page, which can happen if the page is\n   * restored from the back/forward cache (in that case new metrics object\n   * get created).\n   */\n  @Column()\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  /**\n   * Any performance entries relevant to the metric value calculation.\n   * The array may also be empty if the metric value was not based on any\n   * entries (e.g. a CLS value of 0 given no layout shifts).\n   */\n  @Column({ type: 'json' })\n  @IsNotEmpty()\n  entries: PerformanceEntry[];\n\n  /**\n   * The type of navigation.\n   *\n   * This will be the value returned by the Navigation Timing API (or\n   * `undefined` if the browser doesn't support that API), with the following\n   * exceptions:\n   * - 'back-forward-cache': for pages that are restored from the bfcache.\n   * - 'prerender': for pages that were prerendered.\n   * - 'restore': for pages that were discarded by the browser and then\n   * restored by the user.\n   */\n  @Column({ type: 'enum', enum: MetricNavigationEnum })\n  @IsEnum(MetricNavigationEnum)\n  @IsNotEmpty()\n  navigationType: MetricNavigationEnum;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Permission.html":{"url":"entities/Permission.html","title":"entity - Permission","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/permission.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 20, comment: 'permission code'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/permission.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 100, comment: 'permission description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/permission.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/permission.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({\n  name: 'permissions',\n})\nexport class Permission {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 20,\n    comment: 'permission code',\n  })\n  code: string;\n\n  @Column({\n    length: 100,\n    comment: 'permission description',\n  })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PermissionGuard.html":{"url":"guards/PermissionGuard.html","title":"guard - PermissionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PermissionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/permission.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/permission.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/guards/permission.guard.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\nimport { Request } from 'express';\n\nimport { RequirePermissionKey } from 'src/constants';\n\n@Injectable()\nexport class PermissionGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request: Request = context.switchToHttp().getRequest();\n\n    if (!request.user) {\n      return true;\n    }\n\n    const permissions = request.user.permissions;\n\n    const requiredPermissions = this.reflector.getAllAndOverride(\n      RequirePermissionKey,\n      [context.getClass(), context.getHandler()],\n    );\n\n    if (!requiredPermissions) {\n      return true;\n    }\n\n    for (const curPermission of requiredPermissions) {\n      const found = permissions.find((item) => item.code === curPermission);\n      if (!found) {\n        throw new ForbiddenException(\n          'you have no permission to visit this api',\n        );\n      }\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RedisModule\n\n\n\ncluster_RedisModule_providers\n\n\n\ncluster_RedisModule_exports\n\n\n\n\nRedisService \n\nRedisService \n\n\n\nRedisModule\n\nRedisModule\n\nRedisService  -->\n\nRedisModule->RedisService \n\n\n\n\n\nRedisService\n\nRedisService\n\nRedisModule -->\n\nRedisService->RedisModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/redis/redis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RedisService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RedisService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { createClient } from 'redis';\n\nimport { RedisService } from './redis.service';\n\n@Module({\n  providers: [\n    RedisService,\n    {\n      provide: 'REDIS_CLIENT',\n      async useFactory(configService: ConfigService) {\n        const client = createClient({\n          socket: {\n            host: configService.get('REDIS_HOST'),\n            port: +configService.get('REDIS_PORT'),\n          },\n          database: configService.get('REDIS_DB'),\n        });\n        await client.connect();\n        return client;\n      },\n      inject: [ConfigService],\n    },\n  ],\n  exports: [RedisService],\n})\nexport class RedisModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisService.html":{"url":"injectables/RedisService.html","title":"injectable - RedisService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/redis/redis.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                redisClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/redis/redis.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: string | number, ttl?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/redis/redis.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ttl\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        redisClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RedisClientType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject('REDIS_CLIENT')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/redis/redis.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\n\nimport { RedisClientType } from 'redis';\n\n@Injectable()\nexport class RedisService {\n  @Inject('REDIS_CLIENT')\n  private redisClient: RedisClientType;\n\n  async get(key: string) {\n    return await this.redisClient.get(key);\n  }\n\n  async set(key: string, value: string | number, ttl?: number) {\n    await this.redisClient.set(key, value);\n\n    if (ttl) {\n      await this.redisClient.expire(key, ttl);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenDto.html":{"url":"classes/RefreshTokenDto.html","title":"class - RefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/refresh-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'refresh token should not be null'})@IsString({message: 'not a legal refresh token format'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/refresh-token.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class RefreshTokenDto {\n  @IsNotEmpty({\n    message: 'refresh token should not be null',\n  })\n  @IsString({\n    message: 'not a legal refresh token format',\n  })\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenVo.html":{"url":"classes/RefreshTokenVo.html","title":"class - RefreshTokenVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/vo/refresh-token.vo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(LoginUserVo, ['userInfo'])\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { LoginUserVo } from './login-user.vo';\n\nexport class RefreshTokenVo extends OmitType(LoginUserVo, ['userInfo']) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterCaptchaDto.html":{"url":"classes/RegisterCaptchaDto.html","title":"class - RegisterCaptchaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterCaptchaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/register-captcha.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'email should not be null'})@IsEmail({}, {message: 'not a legal email format'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/register-captcha.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class RegisterCaptchaDto {\n  @IsNotEmpty({\n    message: 'email should not be null',\n  })\n  @IsEmail(\n    {},\n    {\n      message: 'not a legal email format',\n    },\n  )\n  address: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/register-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PickType(User, [\n  'username',\n  'nickName',\n  'password',\n  'email',\n])\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                captcha\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        captcha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'captcha should not be null'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/register-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { IsNotEmpty } from 'class-validator';\n\nimport { User } from '../entities/user.entity';\n\nexport class RegisterUserDto extends PickType(User, [\n  'username',\n  'nickName',\n  'password',\n  'email',\n]) {\n  @IsNotEmpty({\n    message: 'captcha should not be null',\n  })\n  captcha: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/guards/login.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         JwtUserData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JwtUserData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\n\nimport { RequireLoginKey } from 'src/constants';\nimport { Permission } from 'src/user/entities/permission.entity';\nimport { UnLoginException } from '../filters';\n\ninterface JwtUserData {\n  userId: number;\n  username: string;\n  email: string;\n  roles: string[];\n  permissions: Permission[];\n}\n\ndeclare module 'express' {\n  interface Request {\n    user: JwtUserData;\n  }\n}\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n  constructor(\n    private reflector: Reflector,\n\n    @Inject(JwtService)\n    private jwtService: JwtService,\n  ) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request: Request = context.switchToHttp().getRequest();\n\n    const requireLogin = this.reflector.getAllAndOverride(RequireLoginKey, [\n      context.getClass(),\n      context.getHandler(),\n    ]);\n\n    if (!requireLogin) {\n      return true;\n    }\n\n    const authorization = request.headers.authorization;\n\n    if (!authorization) {\n      throw new UnLoginException();\n    }\n\n    try {\n      const token = authorization.split(' ')[1];\n      const data = this.jwtService.verify(token);\n\n      request.user = {\n        userId: data.userId,\n        username: data.username,\n        email: data.email,\n        roles: data.roles,\n        permissions: data.permissions,\n      };\n      return true;\n    } catch (e) {\n      throw new UnauthorizedException(\n        'token has been invalid, please login again',\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/role.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 20, comment: 'role name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/role.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'role_permissions'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/role.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\nimport { Permission } from './permission.entity';\n\n@Entity({\n  name: 'roles',\n})\nexport class Role {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 20,\n    comment: 'role name',\n  })\n  name: string;\n\n  @ManyToMany(() => Permission)\n  @JoinTable({\n    name: 'role_permissions',\n  })\n  permissions: Permission[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SseController.html":{"url":"controllers/SseController.html","title":"controller - SseController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sse/sse.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sse\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onModuleInit\n                            \n                            \n                                    \n                                updateRecord\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/sse/sse.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateRecord\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateRecord(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Sse('update_record')\n                \n            \n\n                    \n                        \n                            Defined in src/sse/sse.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, MessageEvent, Req, Res, Sse } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\n\nimport { Request, Response } from 'express';\nimport { Observable, fromEvent, map } from 'rxjs';\n\nimport { SseService } from './sse.service';\n\n@ApiTags('SSE')\n@Controller('sse')\nexport class SseController {\n  constructor(\n    private readonly sseService: SseService,\n    private readonly eventEmitter: EventEmitter2,\n  ) {}\n\n  @Sse('update_record')\n  updateRecord(\n    @Req() req: Request,\n    @Res() res: Response,\n  ): Observable {\n    const address = req.socket.remoteAddress;\n    const port = req.socket.remotePort;\n    this.sseService.addClient(`${address}:${port}`, res, req);\n    return fromEvent(this.eventEmitter, 'sse:record.updated_sse').pipe(\n      map((data) => {\n        return data as MessageEvent;\n      }),\n    );\n  }\n\n  onModuleInit() {\n    this.sseService.startHeartbeat();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SseModule.html":{"url":"modules/SseModule.html","title":"module - SseModule","body":"\n                   \n\n\n\n\n    Modules\n    SseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SseModule\n\n\n\ncluster_SseModule_exports\n\n\n\ncluster_SseModule_providers\n\n\n\n\nSseService \n\nSseService \n\n\n\nSseModule\n\nSseModule\n\nSseService  -->\n\nSseModule->SseService \n\n\n\n\n\nSseService\n\nSseService\n\nSseModule -->\n\nSseService->SseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sse/sse.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SseController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\n\nimport { SseService } from './sse.service';\nimport { SseController } from './sse.controller';\n\n@Module({\n  imports: [EventEmitterModule.forRoot()],\n  controllers: [SseController],\n  providers: [SseService],\n  exports: [SseService],\n})\nexport class SseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SseService.html":{"url":"injectables/SseService.html","title":"injectable - SseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sse/sse.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clients\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClient\n                            \n                            \n                                emit\n                            \n                            \n                                sendToClient\n                            \n                            \n                                startHeartbeat\n                            \n                            \n                                updateRecord\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/sse/sse.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClient\n                        \n                    \n                \n            \n            \n                \naddClient(clientId: string, res: Response, req: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sse/sse.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(data: EmitSSEData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sse/sse.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmitSSEData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendToClient\n                        \n                    \n                \n            \n            \n                \nsendToClient(clientId: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sse/sse.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startHeartbeat\n                        \n                    \n                \n            \n            \n                \nstartHeartbeat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/sse/sse.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRecord\n                        \n                    \n                \n            \n            \n                \nupdateRecord()\n                \n            \n\n\n                    \n                        \n                            Defined in src/sse/sse.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clients\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/sse/sse.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, MessageEvent } from '@nestjs/common';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\n\nimport { Response } from 'express';\nimport { Observable, interval, map } from 'rxjs';\n\nimport { EmitSSEData } from './dto/sse.dto';\n\n@Injectable()\nexport class SseService {\n  private clients = new Map();\n  constructor(private readonly eventEmitter: EventEmitter2) {}\n\n  emit(data: EmitSSEData) {\n    this.eventEmitter.emit('sse:record.updated_sse', data);\n  }\n\n  addClient(clientId: string, res: Response, req: any) {\n    if (this.clients.get(clientId)) {\n      return;\n    }\n    this.clients.set(clientId, res);\n\n    req.connection.on(\n      'close',\n      () => {\n        if (this.clients.get(clientId)) {\n          this.clients.delete(clientId);\n        }\n      },\n      false,\n    );\n  }\n\n  sendToClient(clientId: string, data: any) {\n    const client = this.clients.get(clientId);\n    if (client) {\n      client.write(`data: ${JSON.stringify(data)}\\n\\n`);\n    }\n  }\n\n  startHeartbeat() {\n    interval(180000) // heartbeat detection per 3min\n      .pipe(map(() => ({ event: 'heartbeat', data: 'pong' })))\n      .subscribe((heartbeat) => {\n        this.clients.forEach((_client, clientId) => {\n          this.sendToClient(clientId, heartbeat);\n        });\n      });\n  }\n\n  updateRecord(): Observable {\n    return new Observable((observer) => {\n      this.eventEmitter.on('sse:record.updated_sse', (data: EmitSSEData) => {\n        observer.next(data);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StatisticController.html":{"url":"controllers/StatisticController.html","title":"controller - StatisticController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StatisticController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statistic/statistic.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                statistic\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                meetingRoomUsedCount\n                            \n                            \n                                    \n                                    \n                                userBookignCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        meetingRoomUsedCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    meetingRoomUsedCount(meetingRoomUsedCountDto: MeetingRoomUsedCountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('meetingRoomUsedCount')@ApiUnifiedArrayOkResponse(MeetingRoomUsedCountVo)\n                \n            \n\n                    \n                        \n                            Defined in src/statistic/statistic.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meetingRoomUsedCountDto\n                                            \n                                                            MeetingRoomUsedCountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userBookignCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    userBookignCount(userBookignCountDto: UserBookignCountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('userBookingCount')@ApiUnifiedArrayOkResponse(UserBookignCountVo)\n                \n            \n\n                    \n                        \n                            Defined in src/statistic/statistic.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userBookignCountDto\n                                            \n                                                            UserBookignCountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\nimport { RequireLogin } from 'src/common';\nimport { ApiUnifiedArrayOkResponse } from 'src/utils';\nimport { StatisticService } from './statistic.service';\nimport { UserBookignCountDto } from './dto/user-booking-count.dto';\nimport { MeetingRoomUsedCountDto } from './dto/meeting-room-used-count.dto';\nimport { UserBookignCountVo } from './vo/user-booking-count.vo';\nimport { MeetingRoomUsedCountVo } from './vo/meeting-room-used-count.vo';\n\n@ApiTags('Statistic')\n@ApiBearerAuth()\n@RequireLogin()\n@Controller('statistic')\nexport class StatisticController {\n  constructor(private readonly statisticService: StatisticService) {}\n\n  @Get('userBookingCount')\n  @ApiUnifiedArrayOkResponse(UserBookignCountVo)\n  userBookignCount(\n    @Query() userBookignCountDto: UserBookignCountDto,\n  ): Promise {\n    return this.statisticService.userBookingCount(userBookignCountDto);\n  }\n\n  @Get('meetingRoomUsedCount')\n  @ApiUnifiedArrayOkResponse(MeetingRoomUsedCountVo)\n  meetingRoomUsedCount(\n    @Query() meetingRoomUsedCountDto: MeetingRoomUsedCountDto,\n  ): Promise {\n    return this.statisticService.meetingRoomUsedCount(meetingRoomUsedCountDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatisticModule.html":{"url":"modules/StatisticModule.html","title":"module - StatisticModule","body":"\n                   \n\n\n\n\n    Modules\n    StatisticModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StatisticModule\n\n\n\ncluster_StatisticModule_providers\n\n\n\n\nStatisticService\n\nStatisticService\n\n\n\nStatisticModule\n\nStatisticModule\n\nStatisticModule -->\n\nStatisticService->StatisticModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/statistic/statistic.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StatisticService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StatisticController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StatisticService } from './statistic.service';\nimport { StatisticController } from './statistic.controller';\n\n@Module({\n  controllers: [StatisticController],\n  providers: [StatisticService],\n})\nexport class StatisticModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatisticService.html":{"url":"injectables/StatisticService.html","title":"injectable - StatisticService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatisticService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statistic/statistic.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                meetingRoomUsedCount\n                            \n                            \n                                    Async\n                                userBookingCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityManager: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in src/statistic/statistic.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityManager\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        meetingRoomUsedCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    meetingRoomUsedCount(meetingRoomUsedCountDto: MeetingRoomUsedCountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/statistic/statistic.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meetingRoomUsedCountDto\n                                            \n                                                            MeetingRoomUsedCountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        userBookingCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    userBookingCount(userBookignCountDto: UserBookignCountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/statistic/statistic.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userBookignCountDto\n                                            \n                                                            UserBookignCountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectEntityManager } from '@nestjs/typeorm';\n\nimport { EntityManager } from 'typeorm';\n\nimport { Booking } from 'src/booking/entities/booking.entity';\nimport { MeetingRoom } from 'src/meeting-room/entities/meeting-room.entity';\nimport { User } from 'src/user/entities/user.entity';\nimport { MeetingRoomUsedCountDto } from './dto/meeting-room-used-count.dto';\nimport { UserBookignCountDto } from './dto/user-booking-count.dto';\n\n@Injectable()\nexport class StatisticService {\n  constructor(\n    @InjectEntityManager()\n    private entityManager: EntityManager,\n  ) {}\n\n  async userBookingCount(userBookignCountDto: UserBookignCountDto) {\n    const { startTime, endTime } = userBookignCountDto;\n\n    const res = await this.entityManager\n      .createQueryBuilder(Booking, 'b')\n      .select('u.id', 'userId')\n      .addSelect('u.username', 'username')\n      .leftJoin(User, 'u', 'b.userId = u.id')\n      .addSelect('count(1)', 'bookingCount')\n      .where('b.startTime between :time1 and :time2', {\n        time1: startTime,\n        time2: endTime,\n      })\n      .addGroupBy('b.user')\n      .getRawMany();\n\n    return res;\n  }\n\n  async meetingRoomUsedCount(meetingRoomUsedCountDto: MeetingRoomUsedCountDto) {\n    const { startTime, endTime } = meetingRoomUsedCountDto;\n\n    const res = await this.entityManager\n      .createQueryBuilder(Booking, 'b')\n      .select('m.id', 'meetingRoomId')\n      .addSelect('m.name', 'meetingRoomName')\n      .leftJoin(MeetingRoom, 'm', 'b.roomId = m.id')\n      .addSelect('count(1)', 'usedCount')\n      .where('b.startTime between :time1 and :time2', {\n        time1: startTime,\n        time2: endTime,\n      })\n      .addGroupBy('b.roomId')\n      .getRawMany();\n\n    return res;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnLoginException.html":{"url":"classes/UnLoginException.html","title":"class - UnLoginException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnLoginException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/unlogin.filter.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/filters/unlogin.filter.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/filters/unlogin.filter.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpStatus,\n} from '@nestjs/common';\n\nimport { Response } from 'express';\n\nexport class UnLoginException {\n  message?: string;\n\n  constructor(message?: string) {\n    this.message = message;\n  }\n}\n\n@Catch(UnLoginException)\nexport class UnloginFilter implements ExceptionFilter {\n  catch(exception: UnLoginException, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n    response\n      .json({\n        code: HttpStatus.UNAUTHORIZED,\n        message: exception.message || 'User has not login',\n      })\n      .end();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnloginFilter.html":{"url":"classes/UnloginFilter.html","title":"class - UnloginFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnloginFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/unlogin.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: UnLoginException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/unlogin.filter.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            UnLoginException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpStatus,\n} from '@nestjs/common';\n\nimport { Response } from 'express';\n\nexport class UnLoginException {\n  message?: string;\n\n  constructor(message?: string) {\n    this.message = message;\n  }\n}\n\n@Catch(UnLoginException)\nexport class UnloginFilter implements ExceptionFilter {\n  catch(exception: UnLoginException, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n    response\n      .json({\n        code: HttpStatus.UNAUTHORIZED,\n        message: exception.message || 'User has not login',\n      })\n      .end();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMeetingRoomDto.html":{"url":"classes/UpdateMeetingRoomDto.html","title":"class - UpdateMeetingRoomDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMeetingRoomDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting-room/dto/update-meeting-room.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IntersectionType(\n  PartialType(CreateMeetingRoomDto),\n  PickType(MeetingRoom, ['id']),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType, PartialType, PickType } from '@nestjs/swagger';\n\nimport { CreateMeetingRoomDto } from './create-meeting-room.dto';\nimport { MeetingRoom } from '../entities/meeting-room.entity';\n\nexport class UpdateMeetingRoomDto extends IntersectionType(\n  PartialType(CreateMeetingRoomDto),\n  PickType(MeetingRoom, ['id']),\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IntersectionType(\n  OmitType(RegisterUserDto, ['username', 'password']),\n  PickType(User, ['headPic']),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType, OmitType, PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from './register-user.dto';\nimport { User } from '../entities/user.entity';\n\nexport class UpdateUserDto extends IntersectionType(\n  OmitType(RegisterUserDto, ['username', 'password']),\n  PickType(User, ['headPic']),\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserPasswordCaptchaDto.html":{"url":"classes/UpdateUserPasswordCaptchaDto.html","title":"class - UpdateUserPasswordCaptchaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserPasswordCaptchaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user-password-captcha.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            RegisterCaptchaDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'email should not be null'})@IsEmail({}, {message: 'not a legal email format'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         RegisterCaptchaDto\n\n                            \n                        \n                    \n                        \n                                Defined in         RegisterCaptchaDto:13\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RegisterCaptchaDto } from './register-captcha.dto';\n\nexport class UpdateUserPasswordCaptchaDto extends RegisterCaptchaDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserPasswordDto.html":{"url":"classes/UpdateUserPasswordDto.html","title":"class - UpdateUserPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user-password.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(RegisterUserDto, [\n  'nickName',\n])\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from './register-user.dto';\n\nexport class UpdateUserPasswordDto extends OmitType(RegisterUserDto, [\n  'nickName',\n]) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                headPic\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                isAdmin\n                            \n                            \n                                    \n                                    \n                                isFrozen\n                            \n                            \n                                    \n                                    \n                                    \n                                nickName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                updateTime\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: 'email', length: 50})@IsNotEmpty({message: 'email should not be null'})@IsEmail({}, {message: 'not a legal email format'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        headPic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: 'head pic', length: 1000, nullable: true})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: 'is admin', default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isFrozen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: 'is frozen', default: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        nickName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'nick_name', length: 50, comment: 'nick name'})@IsNotEmpty({message: 'nick name should not be null'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 50, comment: 'password'})@IsNotEmpty({message: 'password should not be null'})@MinLength(6, {message: 'password must have min length 6'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: 'phone number', length: 20, nullable: true})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'user_roles'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 50, comment: 'username', unique: true})@IsNotEmpty({message: 'username should not be null'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport {\n  IsBoolean,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  MinLength,\n} from 'class-validator';\n\nimport { Role } from './role.entity';\n\n@Entity({\n  name: 'users',\n})\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 50,\n    comment: 'username',\n    unique: true,\n  })\n  @IsNotEmpty({\n    message: 'username should not be null',\n  })\n  @IsString()\n  username: string;\n\n  @Column({\n    length: 50,\n    comment: 'password',\n  })\n  @IsNotEmpty({\n    message: 'password should not be null',\n  })\n  @MinLength(6, {\n    message: 'password must have min length 6',\n  })\n  @IsString()\n  password: string;\n\n  @Column({\n    name: 'nick_name',\n    length: 50,\n    comment: 'nick name',\n  })\n  @IsNotEmpty({\n    message: 'nick name should not be null',\n  })\n  @IsString()\n  nickName: string;\n\n  @Column({\n    comment: 'email',\n    length: 50,\n  })\n  @IsNotEmpty({\n    message: 'email should not be null',\n  })\n  @IsEmail(\n    {},\n    {\n      message: 'not a legal email format',\n    },\n  )\n  email: string;\n\n  @Column({\n    comment: 'head pic',\n    length: 1000,\n    nullable: true,\n  })\n  @IsOptional()\n  @IsString()\n  headPic?: string;\n\n  @Column({\n    comment: 'phone number',\n    length: 20,\n    nullable: true,\n  })\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @Column({\n    comment: 'is frozen',\n    default: false,\n  })\n  @IsBoolean()\n  isFrozen: boolean;\n\n  @Column({\n    comment: 'is admin',\n    default: false,\n  })\n  @IsBoolean()\n  isAdmin: boolean;\n\n  @CreateDateColumn()\n  createTime: Date;\n\n  @UpdateDateColumn()\n  updateTime: Date;\n\n  @ManyToMany(() => Role)\n  @JoinTable({\n    name: 'user_roles',\n  })\n  roles: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserBookignCountDto.html":{"url":"classes/UserBookignCountDto.html","title":"class - UserBookignCountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserBookignCountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statistic/dto/user-booking-count.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MeetingRoomUsedCountDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                endTime\n                            \n                            \n                                    \n                                    \n                                startTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MeetingRoomUsedCountDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MeetingRoomUsedCountDto:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MeetingRoomUsedCountDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MeetingRoomUsedCountDto:6\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MeetingRoomUsedCountDto } from './meeting-room-used-count.dto';\n\nexport class UserBookignCountDto extends MeetingRoomUsedCountDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserBookignCountVo.html":{"url":"classes/UserBookignCountVo.html","title":"class - UserBookignCountVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserBookignCountVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statistic/vo/user-booking-count.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bookingCount\n                            \n                            \n                                userId\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bookingCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/statistic/vo/user-booking-count.vo.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/statistic/vo/user-booking-count.vo.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/statistic/vo/user-booking-count.vo.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserBookignCountVo {\n  userId: string;\n\n  username: string;\n\n  bookingCount: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                adminLogin\n                            \n                            \n                                    \n                                    \n                                adminRefresh\n                            \n                            \n                                    \n                                    \n                                captcha\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                freeze\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                info\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                list\n                            \n                            \n                                    \n                                    \n                                refresh\n                            \n                            \n                                    \n                                    \n                                    \n                                register\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                updateCaptcha\n                            \n                            \n                                    \n                                    \n                                    \n                                updatePassword\n                            \n                            \n                                    \n                                    \n                                updatePasswordCaptcha\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                            \n                                    \n                                    \n                                    \n                                userLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        adminLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    adminLogin(loginUser: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('admin/login')@HttpCode(HttpStatus.OK)@ApiUnifiedOkResponse(LoginUserVo)\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginUser\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        adminRefresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    adminRefresh(undefined: RefreshTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('admin/refresh')@ApiUnifiedOkResponse(RefreshTokenVo)\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        captcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    captcha(undefined: RegisterCaptchaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('register-captcha')@ApiUnifiedOkResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            RegisterCaptchaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        freeze\n                        \n                    \n                \n            \n            \n                \n                        \n                    freeze(undefined: FreezeUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@RequireLogin()@Get('freeze')@ApiUnifiedOkResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            FreezeUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        info\n                        \n                    \n                \n            \n            \n                \n                        \n                    info(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@RequireLogin()@Get('info')@ApiUnifiedOkResponse(UserDetailVo)\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list(userListDto: UserListDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@RequireLogin()@Get('list')@ApiUnifiedOkResponse(UserListVo)\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userListDto\n                                            \n                                                            UserListDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh(undefined: RefreshTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('refresh')@ApiUnifiedOkResponse(RefreshTokenVo)\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            RefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUser: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@HttpCode(HttpStatus.OK)@ApiUnifiedOkResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUser\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(userId: number, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@RequireLogin()@Post(['update', 'admin/update'])@HttpCode(HttpStatus.OK)@ApiUnifiedOkResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        updateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCaptcha(address: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@RequireLogin()@Get('update/captcha')@ApiUnifiedOkResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(passwordDto: UpdateUserPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(['update_password', 'admin/update_password'])@HttpCode(HttpStatus.OK)@ApiUnifiedOkResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                passwordDto\n                                            \n                                                            UpdateUserPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatePasswordCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePasswordCaptcha(undefined: UpdateUserPasswordCaptchaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('update_password/captcha')@ApiUnifiedOkResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            UpdateUserPasswordCaptchaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@RequireLogin()@Post('upload')@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@ApiUnifiedCreatedResponse()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    userLogin(loginUser: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)@ApiUnifiedOkResponse(LoginUserVo)\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginUser\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  Query,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiConsumes, ApiTags } from '@nestjs/swagger';\nimport { FileInterceptor } from '@nestjs/platform-express';\n\nimport * as path from 'path';\n\nimport { RequireLogin, UserInfo } from 'src/common';\nimport { ApiUnifiedCreatedResponse, ApiUnifiedOkResponse } from 'src/utils';\nimport { UserService } from './user.service';\nimport { RegisterUserDto } from './dto/register-user.dto';\nimport { RegisterCaptchaDto } from './dto/register-captcha.dto';\nimport { LoginUserDto } from './dto/login-user.dto';\nimport { RefreshTokenDto } from './dto/refresh-token.dto';\nimport { UpdateUserPasswordDto } from './dto/update-user-password.dto';\nimport { UpdateUserPasswordCaptchaDto } from './dto/update-user-password-captcha.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { FreezeUserDto } from './dto/freeze-user.dto';\nimport { UserListDto } from './dto/user-list.dto';\nimport { LoginUserVo } from './vo/login-user.vo';\nimport { RefreshTokenVo } from './vo/refresh-token.vo';\nimport { UserDetailVo } from './vo/user-info.vo';\nimport { UserListVo } from './vo/user-list.vo';\n\n@ApiTags('User')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post('register')\n  @HttpCode(HttpStatus.OK)\n  @ApiUnifiedOkResponse()\n  register(@Body() registerUser: RegisterUserDto): Promise {\n    return this.userService.register(registerUser);\n  }\n\n  @Get('register-captcha')\n  @ApiUnifiedOkResponse()\n  captcha(@Query() { address }: RegisterCaptchaDto): Promise {\n    return this.userService.registerCaptcha(address);\n  }\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  @ApiUnifiedOkResponse(LoginUserVo)\n  userLogin(@Body() loginUser: LoginUserDto): Promise {\n    return this.userService.login(loginUser, false);\n  }\n\n  @Post('admin/login')\n  @HttpCode(HttpStatus.OK)\n  @ApiUnifiedOkResponse(LoginUserVo)\n  adminLogin(@Body() loginUser: LoginUserDto): Promise {\n    return this.userService.login(loginUser, true);\n  }\n\n  @Get('refresh')\n  @ApiUnifiedOkResponse(RefreshTokenVo)\n  refresh(@Query() { refreshToken }: RefreshTokenDto): Promise {\n    return this.userService.refresh(refreshToken, false);\n  }\n\n  @Get('admin/refresh')\n  @ApiUnifiedOkResponse(RefreshTokenVo)\n  adminRefresh(\n    @Query() { refreshToken }: RefreshTokenDto,\n  ): Promise {\n    return this.userService.refresh(refreshToken, true);\n  }\n\n  @ApiBearerAuth()\n  @RequireLogin()\n  @Get('info')\n  @ApiUnifiedOkResponse(UserDetailVo)\n  info(@UserInfo('userId') userId: number): Promise {\n    return this.userService.getUserInfo(userId);\n  }\n\n  @Post(['update_password', 'admin/update_password'])\n  @HttpCode(HttpStatus.OK)\n  @ApiUnifiedOkResponse()\n  updatePassword(@Body() passwordDto: UpdateUserPasswordDto): Promise {\n    return this.userService.updatePassword(passwordDto);\n  }\n\n  @Get('update_password/captcha')\n  @ApiUnifiedOkResponse()\n  updatePasswordCaptcha(\n    @Query() { address }: UpdateUserPasswordCaptchaDto,\n  ): Promise {\n    return this.userService.updatePasswordCaptcha(address);\n  }\n\n  @ApiBearerAuth()\n  @RequireLogin()\n  @Post(['update', 'admin/update'])\n  @HttpCode(HttpStatus.OK)\n  @ApiUnifiedOkResponse()\n  update(\n    @UserInfo('userId') userId: number,\n    @Body() updateUserDto: UpdateUserDto,\n  ): Promise {\n    return this.userService.updateUserInfo(userId, updateUserDto);\n  }\n\n  @ApiBearerAuth()\n  @RequireLogin()\n  @Get('update/captcha')\n  @ApiUnifiedOkResponse()\n  updateCaptcha(@UserInfo('email') address: string): Promise {\n    return this.userService.updateUserInfoCaptcha(address);\n  }\n\n  @ApiBearerAuth()\n  @RequireLogin()\n  @Get('freeze')\n  @ApiUnifiedOkResponse()\n  freeze(@Query() { id }: FreezeUserDto): Promise {\n    return this.userService.freezeUserById(id);\n  }\n\n  @ApiBearerAuth()\n  @RequireLogin()\n  @Get('list')\n  @ApiUnifiedOkResponse(UserListVo)\n  list(@Query() userListDto: UserListDto): Promise {\n    return this.userService.findUsers(userListDto);\n  }\n\n  @ApiBearerAuth()\n  @RequireLogin()\n  @Post('upload')\n  @UseInterceptors(\n    FileInterceptor('file', {\n      limits: {\n        fileSize: 1024 * 1024 * 10,\n      },\n      fileFilter(_req, file, callback) {\n        const extname = path.extname(file.originalname);\n        if (['.png', '.jpg', '.gif', 'webp'].includes(extname)) {\n          callback(null, true);\n        } else {\n          callback(new BadRequestException('Allow upload image only'), false);\n        }\n      },\n    }),\n  )\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        file: {\n          type: 'string',\n          format: 'binary',\n        },\n      },\n    },\n  })\n  @ApiUnifiedCreatedResponse()\n  uploadFile(@UploadedFile() file: Express.Multer.File) {\n    return this.userService.uploadFile(file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDetailVo.html":{"url":"classes/UserDetailVo.html","title":"class - UserDetailVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDetailVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/vo/user-info.vo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(User, [\n  'updateTime',\n  'roles',\n  'password',\n])\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { User } from '../entities/user.entity';\n\nexport class UserDetailVo extends OmitType(User, [\n  'updateTime',\n  'roles',\n  'password',\n]) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/vo/login-user.vo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(User, [\n  'createTime',\n  'updateTime',\n  'roles',\n  'password',\n])\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createTime\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { User } from '../entities/user.entity';\n\nclass UserInfo extends OmitType(User, [\n  'createTime',\n  'updateTime',\n  'roles',\n  'password',\n]) {\n  createTime: number;\n\n  roles: string[];\n\n  permissions: string[];\n}\n\nexport class LoginUserVo {\n  userInfo: UserInfo;\n\n  accessToken: string;\n\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserListDto.html":{"url":"classes/UserListDto.html","title":"class - UserListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserListDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user-list.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  PickType(User, ['email', 'username', 'nickName']),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                pageNo\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                pageSize\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        pageNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user-list.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user-list.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType, PickType } from '@nestjs/swagger';\n\nimport { Transform } from 'class-transformer';\nimport { IsInt, IsOptional } from 'class-validator';\n\nimport { User } from '../entities/user.entity';\n\nexport class UserListDto extends PartialType(\n  PickType(User, ['email', 'username', 'nickName']),\n) {\n  @Transform(({ value }) => parseInt(value))\n  @IsInt()\n  @IsOptional()\n  pageNo?: number;\n\n  @Transform(({ value }) => parseInt(value))\n  @IsInt()\n  @IsOptional()\n  pageSize?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserListVo.html":{"url":"classes/UserListVo.html","title":"class - UserListVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserListVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/vo/user-list.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                totalCount\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/user/vo/user-list.vo.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                    \n                        \n                                Defined in src/user/vo/user-list.vo.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserDetailVo } from './user-info.vo';\n\nexport class UserListVo {\n  users: Array;\n\n  totalCount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nEmailModule\n\nEmailModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nEmailModule->UserModule\n\n\n\n\n\nMinioModule\n\nMinioModule\n\nUserModule -->\n\nMinioModule->UserModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nUserModule -->\n\nRedisModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EmailModule\n                        \n                        \n                            MinioModule\n                        \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { EmailModule } from '../email/email.module';\nimport { RedisModule } from '../redis/redis.module';\nimport { MinioModule } from 'src/minio/minio.module';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { User } from './entities/user.entity';\nimport { Role } from './entities/role.entity';\nimport { Permission } from './entities/permission.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User, Role, Permission]),\n    EmailModule,\n    RedisModule,\n    MinioModule,\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/booking/booking.controller.ts\n            \n            controller\n            BookingController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/booking/booking.service.ts\n            \n            injectable\n            BookingService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/booking/dto/booking-list.dto.ts\n            \n            class\n            BookingListDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/booking/dto/create-booking.dto.ts\n            \n            class\n            CreateBookingDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/booking/entities/booking.entity.ts\n            \n            entity\n            Booking\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/booking/vo/booking-list.vo.ts\n            \n            class\n            BookingListVo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/decorators/custom.decorator.ts\n            \n            variable\n            RequireLogin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/custom.decorator.ts\n            \n            variable\n            RequirePermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/custom.decorator.ts\n            \n            variable\n            UserInfo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filters/custom-exception.filter.ts\n            \n            class\n            CustomExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/filters/unlogin.filter.ts\n            \n            class\n            UnLoginException\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/filters/unlogin.filter.ts\n            \n            class\n            UnloginFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/guards/login.guard.ts\n            \n            interface\n            JwtUserData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/guards/login.guard.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/guards/login.guard.ts\n            \n            guard\n            LoginGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/guards/permission.guard.ts\n            \n            guard\n            PermissionGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/format-response.interceptor.ts\n            \n            injectable\n            FormatResponseInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/invoke-record.interceptor.ts\n            \n            injectable\n            InvokeRecordInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/index.ts\n            \n            variable\n            getConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/index.ts\n            \n            variable\n            RequireLoginKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/index.ts\n            \n            variable\n            RequirePermissionKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/email/email.service.ts\n            \n            injectable\n            EmailService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/fe-report/dto/error.dto.ts\n            \n            class\n            ErrorReportDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fe-report/dto/performance.dto.ts\n            \n            class\n            PerformanceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fe-report/entities/error.entity.ts\n            \n            entity\n            ErrorReportEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fe-report/entities/performance.entity.ts\n            \n            entity\n            PerformanceEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fe-report/entities/performance.entity.ts\n            \n            class\n            PerformanceEntry\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/fe-report/fe-report.controller.ts\n            \n            controller\n            FeReportController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/fe-report/fe-report.service.ts\n            \n            injectable\n            FeReportService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/meeting-room/dto/create-meeting-room.dto.ts\n            \n            class\n            CreateMeetingRoomDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/meeting-room/dto/meeting-room-list.dto.ts\n            \n            class\n            MeetingRoomListDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/meeting-room/dto/update-meeting-room.dto.ts\n            \n            class\n            UpdateMeetingRoomDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/meeting-room/entities/meeting-room.entity.ts\n            \n            entity\n            MeetingRoom\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/meeting-room/meeting-room.controller.ts\n            \n            controller\n            MeetingRoomController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/meeting-room/meeting-room.service.ts\n            \n            injectable\n            MeetingRoomService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/meeting-room/vo/meeting-room-list.vo.ts\n            \n            class\n            MeetingRoomListVo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/minio/minio.service.ts\n            \n            injectable\n            MinioService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/redis/redis.service.ts\n            \n            injectable\n            RedisService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/repl.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sse/dto/sse.dto.ts\n            \n            class\n            EmitSSEData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/sse/sse.controller.ts\n            \n            controller\n            SseController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/sse/sse.service.ts\n            \n            injectable\n            SseService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/statistic/dto/meeting-room-used-count.dto.ts\n            \n            class\n            MeetingRoomUsedCountDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/statistic/dto/user-booking-count.dto.ts\n            \n            class\n            UserBookignCountDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/statistic/statistic.controller.ts\n            \n            controller\n            StatisticController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/statistic/statistic.service.ts\n            \n            injectable\n            StatisticService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/statistic/vo/meeting-room-used-count.vo.ts\n            \n            class\n            MeetingRoomUsedCountVo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/statistic/vo/user-booking-count.vo.ts\n            \n            class\n            UserBookignCountVo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/freeze-user.dto.ts\n            \n            class\n            FreezeUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/refresh-token.dto.ts\n            \n            class\n            RefreshTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/register-captcha.dto.ts\n            \n            class\n            RegisterCaptchaDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/update-user-password-captcha.dto.ts\n            \n            class\n            UpdateUserPasswordCaptchaDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/update-user-password.dto.ts\n            \n            class\n            UpdateUserPasswordDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/user-list.dto.ts\n            \n            class\n            UserListDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/entities/permission.entity.ts\n            \n            entity\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/user/vo/login-user.vo.ts\n            \n            class\n            LoginUserVo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/vo/login-user.vo.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/vo/refresh-token.vo.ts\n            \n            class\n            RefreshTokenVo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/vo/user-info.vo.ts\n            \n            class\n            UserDetailVo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/vo/user-list.vo.ts\n            \n            class\n            UserListVo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/aop.ts\n            \n            variable\n            generateParseIntPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/md5.ts\n            \n            variable\n            md5\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/swagger.ts\n            \n            variable\n            ApiUnifiedArrayOkResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/swagger.ts\n            \n            variable\n            ApiUnifiedCreatedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/swagger.ts\n            \n            variable\n            ApiUnifiedOkResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/swagger.ts\n            \n            variable\n            getApiResponseOptions\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^3.0.1\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/event-emitter : ^2.0.3\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.1.17\n        \n            @nestjs/terminus : ^10.2.0\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            axios : ^1.6.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            minio : ^7.1.3\n        \n            multer : 1.4.5-lts.1\n        \n            mysql2 : ^3.6.5\n        \n            nodemailer : ^6.9.7\n        \n            redis : ^4.6.12\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BookingStatus   (src/.../booking.entity.ts)\n                        \n                        \n                            MetricNameEnum   (src/.../performance.entity.ts)\n                        \n                        \n                            MetricNavigationEnum   (src/.../performance.entity.ts)\n                        \n                        \n                            MetricRatingEnum   (src/.../performance.entity.ts)\n                        \n                        \n                            SseActionEnum   (src/.../sse.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/booking/entities/booking.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        BookingStatus\n                    \n                \n                        \n                            \n                                 Progressing\n                            \n                        \n                        \n                            \n                                Value : progressing\n                            \n                        \n                        \n                            \n                                 Approved\n                            \n                        \n                        \n                            \n                                Value : approved\n                            \n                        \n                        \n                            \n                                 Rejected\n                            \n                        \n                        \n                            \n                                Value : rejected\n                            \n                        \n                        \n                            \n                                 Released\n                            \n                        \n                        \n                            \n                                Value : released\n                            \n                        \n            \n        \n\n    src/fe-report/entities/performance.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        MetricNameEnum\n                    \n                \n                        \n                            \n                                 CLS\n                            \n                        \n                        \n                            \n                                Value : CLS\n                            \n                        \n                        \n                            \n                                 FCP\n                            \n                        \n                        \n                            \n                                Value : FCP\n                            \n                        \n                        \n                            \n                                 FID\n                            \n                        \n                        \n                            \n                                Value : FID\n                            \n                        \n                        \n                            \n                                 INP\n                            \n                        \n                        \n                            \n                                Value : INP\n                            \n                        \n                        \n                            \n                                 LCP\n                            \n                        \n                        \n                            \n                                Value : LCP\n                            \n                        \n                        \n                            \n                                 TTFB\n                            \n                        \n                        \n                            \n                                Value : TTFB\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MetricNavigationEnum\n                    \n                \n                        \n                            \n                                 Navigate\n                            \n                        \n                        \n                            \n                                Value : navigate\n                            \n                        \n                        \n                            \n                                 Reload\n                            \n                        \n                        \n                            \n                                Value : reload\n                            \n                        \n                        \n                            \n                                 BackForward\n                            \n                        \n                        \n                            \n                                Value : back-forward\n                            \n                        \n                        \n                            \n                                 BackForwardCache\n                            \n                        \n                        \n                            \n                                Value : back-forward-cache\n                            \n                        \n                        \n                            \n                                 Prerender\n                            \n                        \n                        \n                            \n                                Value : prerender\n                            \n                        \n                        \n                            \n                                 Restore\n                            \n                        \n                        \n                            \n                                Value : restore\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MetricRatingEnum\n                    \n                \n                        \n                            \n                                 Good\n                            \n                        \n                        \n                            \n                                Value : good\n                            \n                        \n                        \n                            \n                                 NeedsImprovement\n                            \n                        \n                        \n                            \n                                Value : needs-improvement\n                            \n                        \n                        \n                            \n                                 Poor\n                            \n                        \n                        \n                            \n                                Value : poor\n                            \n                        \n            \n        \n\n    src/sse/dto/sse.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        SseActionEnum\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : update\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            bootstrap   (src/.../repl.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/repl.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ pnpm installRunning the app\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeReportModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MeetingRoomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MinioModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatisticModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_BookingModule\n\n\n\ncluster_BookingModule_imports\n\n\n\ncluster_BookingModule_providers\n\n\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_exports\n\n\n\ncluster_EmailModule_providers\n\n\n\ncluster_FeReportModule\n\n\n\ncluster_FeReportModule_providers\n\n\n\ncluster_MeetingRoomModule\n\n\n\ncluster_MeetingRoomModule_providers\n\n\n\ncluster_MinioModule\n\n\n\ncluster_MinioModule_exports\n\n\n\ncluster_MinioModule_providers\n\n\n\ncluster_RedisModule\n\n\n\ncluster_RedisModule_exports\n\n\n\ncluster_RedisModule_providers\n\n\n\ncluster_SseModule\n\n\n\ncluster_SseModule_exports\n\n\n\ncluster_SseModule_providers\n\n\n\ncluster_StatisticModule\n\n\n\ncluster_StatisticModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nBookingModule\n\nBookingModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBookingModule->AppModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nBookingModule -->\n\nEmailModule->BookingModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nEmailModule->UserModule\n\n\n\nAppModule -->\n\nEmailModule->AppModule\n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nEmailModule->EmailService \n\n\n\n\n\nFeReportModule\n\nFeReportModule\n\nAppModule -->\n\nFeReportModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMeetingRoomModule\n\nMeetingRoomModule\n\nAppModule -->\n\nMeetingRoomModule->AppModule\n\n\n\n\n\nMinioModule\n\nMinioModule\n\nUserModule -->\n\nMinioModule->UserModule\n\n\n\nAppModule -->\n\nMinioModule->AppModule\n\n\n\n\n\nMinioService \n\nMinioService \n\nMinioService  -->\n\nMinioModule->MinioService \n\n\n\n\n\nSseModule\n\nSseModule\n\nAppModule -->\n\nSseModule->AppModule\n\n\n\n\n\nSseService \n\nSseService \n\nSseService  -->\n\nSseModule->SseService \n\n\n\n\n\nStatisticModule\n\nStatisticModule\n\nAppModule -->\n\nStatisticModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nBookingModule -->\n\nRedisModule->BookingModule\n\n\n\nUserModule -->\n\nRedisModule->UserModule\n\n\n\n\n\nRedisService \n\nRedisService \n\nRedisService  -->\n\nRedisModule->RedisService \n\n\n\n\n\nBookingService\n\nBookingService\n\nBookingModule -->\n\nBookingService->BookingModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nEmailModule -->\n\nEmailService->EmailModule\n\n\n\n\n\nFeReportService\n\nFeReportService\n\nFeReportModule -->\n\nFeReportService->FeReportModule\n\n\n\n\n\nMeetingRoomService\n\nMeetingRoomService\n\nMeetingRoomModule -->\n\nMeetingRoomService->MeetingRoomModule\n\n\n\n\n\nMinioService\n\nMinioService\n\nMinioModule -->\n\nMinioService->MinioModule\n\n\n\n\n\nRedisService\n\nRedisService\n\nRedisModule -->\n\nRedisService->RedisModule\n\n\n\n\n\nSseService\n\nSseService\n\nSseModule -->\n\nSseService->SseModule\n\n\n\n\n\nStatisticService\n\nStatisticService\n\nStatisticModule -->\n\nStatisticService->StatisticModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    32 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiUnifiedArrayOkResponse   (src/.../swagger.ts)\n                        \n                        \n                            ApiUnifiedCreatedResponse   (src/.../swagger.ts)\n                        \n                        \n                            ApiUnifiedOkResponse   (src/.../swagger.ts)\n                        \n                        \n                            generateParseIntPipe   (src/.../aop.ts)\n                        \n                        \n                            getApiResponseOptions   (src/.../swagger.ts)\n                        \n                        \n                            getConfig   (src/.../index.ts)\n                        \n                        \n                            md5   (src/.../md5.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            RequireLogin   (src/.../custom.decorator.ts)\n                        \n                        \n                            RequireLoginKey   (src/.../index.ts)\n                        \n                        \n                            RequirePermission   (src/.../custom.decorator.ts)\n                        \n                        \n                            RequirePermissionKey   (src/.../index.ts)\n                        \n                        \n                            UserInfo   (src/.../custom.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiUnifiedArrayOkResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(\n  model: TModel,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiOkResponse(getApiResponseOptions(model, true)),\n  );\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ApiUnifiedCreatedResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(\n  model?: TModel,\n) => {\n  return model\n    ? applyDecorators(\n        ApiExtraModels(model),\n        ApiCreatedResponse(getApiResponseOptions(model)),\n      )\n    : applyDecorators(ApiCreatedResponse(getApiResponseOptions(model)));\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ApiUnifiedOkResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(\n  model?: TModel,\n) => {\n  return model\n    ? applyDecorators(\n        ApiExtraModels(model),\n        ApiOkResponse(getApiResponseOptions(model)),\n      )\n    : applyDecorators(ApiOkResponse(getApiResponseOptions(model)));\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiResponseOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(\n  model?: TModel,\n  isArray: boolean = false,\n): ApiResponseOptions => {\n  const schema = isArray\n    ? {\n        properties: {\n          data: {\n            type: 'array',\n            items: {\n              type: 'object',\n              $ref: getSchemaPath(model),\n            },\n          },\n          error: {\n            type: 'integer',\n          },\n          error_msg: {\n            type: 'string',\n          },\n        },\n        $unifiedResRef: getSchemaPath(model) + 'UnifiedRes',\n      }\n    : model\n      ? {\n          properties: {\n            data: {\n              type: 'object',\n              $ref: getSchemaPath(model),\n            },\n            code: {\n              type: 'integer',\n            },\n            message: {\n              type: 'string',\n            },\n          },\n          $unifiedResRef: getSchemaPath(model) + 'UnifiedRes',\n        }\n      : {\n          properties: {\n            data: {\n              type: 'string',\n            },\n            code: {\n              type: 'integer',\n            },\n            message: {\n              type: 'string',\n            },\n          },\n          $unifiedResRef: 'NullUnifiedRes',\n        };\n  return {\n    schema,\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/aop.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateParseIntPipe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string): ParseIntPipe => {\n  return new ParseIntPipe({\n    exceptionFactory() {\n      throw new BadRequestException(name + ' should pass numbers');\n    },\n  });\n}\n                    \n                \n\n\n        \n    \n\n    src/config/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    // base config\n    NEST_SERVER_PORT: 3000,\n    API_PREFIX: 'api',\n    API_VERSION: 1,\n\n    // redis config\n    REDIS_DB: 1,\n\n    NODEMAILER_HOST: 'smtp.sina.com',\n    NODEMAILER_PORT: 587,\n\n    // jwt config\n    JWT_ACCESS_TOKEN_EXPIRES_TIME: '30m',\n    JWT_REFRESH_TOKEN_EXPRES_TIME: '7d',\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/md5.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        md5\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (str: string): string => {\n  const hash = crypto.createHash('md5');\n  hash.update(str);\n  return hash.digest('hex');\n}\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/custom.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RequireLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(RequireLoginKey, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequirePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...permissions: string[]) =>\n  SetMetadata(RequirePermissionKey, permissions)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n\n    if (!request.user) {\n      return null;\n    }\n    return data ? request.user[data] : request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/constants/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RequireLoginKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'require-login'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequirePermissionKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'require-permission'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
